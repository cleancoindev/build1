{"version":3,"sources":["contracts sync /^/.//.*/.address/.js$","contracts/YourCollectible.address.js","contracts/YourCollectible.abi.js","contracts/YourCollectible.bytecode.js","contracts/contracts.js","hooks/ContractLoader.js","hooks/ContractExistsAtAddress.js","constants.js","hooks/UserProvider.js","hooks/Poller.js","hooks/ContractReader.js","hooks/Balance.js","hooks/EventListener.js","hooks/LookupAddress.js","hooks/LocalStorage.js","components/Address.jsx","components/Balance.jsx","helpers/Transactor.js","components/Blockie.jsx","components/AddressInput.jsx","components/EtherInput.jsx","components/Wallet.jsx","components/Account.jsx","components/Contract/utils.js","components/Contract/DisplayVariable.jsx","components/Contract/FunctionForm.jsx","components/Contract/index.jsx","components/Ramp.jsx","components/Faucet.jsx","components/Header.jsx","components/Timeline.jsx","components/GasGauge.jsx","components/BytesStringInput.jsx","components/Swap.jsx","components/ThemeSwitch.jsx","views/Hints.jsx","views/Subgraph.jsx","assets.js","App.jsx","hooks/ExchangePrice.js","hooks/GasPrice.js","hooks/ExternalContractLoader.js","index.jsx","contracts sync /^/.//.*/.abi/.js$","contracts sync /^/.//.*/.bytecode/.js$"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","loadContract","contractName","signer","newContract","Contract","require","bytecode","console","log","useContractLoader","providerOrSigner","useState","contracts","setContracts","useEffect","a","listAccounts","accounts","length","getSigner","contractList","newContracts","reduce","accumulator","loadContracts","useContractExistsAtAddress","provider","contractAddress","contractIsDeployed","setContractIsDeployed","checkDeployment","isAddress","getCode","INFURA_ID","DAI_ABI","NETWORK","chainId","n","NETWORKS","localhost","name","color","blockExplorer","rpcUrl","window","location","hostname","mainnet","kovan","faucet","rinkeby","ropsten","goerli","xdai","price","gasPrice","matic","mumbai","useUserProvider","injectedProvider","localProvider","useMemo","burnerConfig","pathname","indexOf","rawPK","incomingPK","hash","replace","privateKey","history","pushState","currentPrivateKey","localStorage","getItem","setItem","Date","now","connection","url","Web3Provider","BurnerProvider","networkName","_network","usePoller","fn","delay","extraWatch","savedCallback","useRef","current","setInterval","clearInterval","useContractReader","functionName","args","pollTime","formatter","onChange","adjustPollTime","value","setValue","setTimeout","bind","newValue","useBalance","address","balance","setBalance","getBalance","newBalance","useEventListener","eventName","startBlock","updates","setUpdates","resetEventsBlock","on","blockNumber","messages","assign","pop","removeListener","lookupAddress","reportedName","resolveName","resolvedAddress","getAddress","useLookupAddress","ensName","setEnsName","key","initialValue","item","JSON","parse","error","storedValue","setStoredValue","valueToStore","Function","stringify","useLocalStorage","ensCache","setEnsCache","timestamp","then","Text","Typography","Address","props","ens","ensProvider","avatar","paragraph","rows","displayAddress","substr","size","text","etherscanLink","blockExplorerLink","minimized","style","verticalAlign","target","href","rel","seed","toLowerCase","scale","editable","copyable","fontSize","paddingLeft","Balance","dollarMode","setDollarMode","floatBalance","parseFloat","usingBalance","etherBalance","formatEther","toFixed","displayBalance","dollarMultiplier","padding","cursor","onClick","Transactor","etherscan","tx","getNetwork","network","options","dappId","system","networkId","transactionHandler","txInformation","notify","Notify","etherscanNetwork","etherscanTxUrl","Promise","result","parseUnits","gasLimit","hexlify","sendTransaction","emitter","transaction","onclick","open","notification","info","message","description","placement","Blockie","AddressInput","scan","setScan","currentValue","scannerButton","marginTop","count","CameraOutlined","QrcodeOutlined","updateAddress","useCallback","possibleAddress","scanner","zIndex","position","left","top","width","resolution","onError","onScan","possibleNewValue","lastIndexOf","autoComplete","autoFocus","placeholder","prefix","addonAfter","EtherInput","mode","setMode","display","setDisplay","option","title","usdValue","ethValue","Paragraph","Wallet","receiveButton","privateKeyButton","signerAddress","useUserAddress","selectedAddress","setOpen","qr","setQr","amount","setAmount","toAddress","setToAddress","pk","setPK","providerSend","WalletOutlined","rotate","level","includeMargin","renderAs","imageSettings","excavate","KeyOutlined","wallet","ethers","extraPkDisplayAdded","extraPkDisplay","push","backgroundStyle","pastpk","pastwallet","createRandom","_signingKey","reload","inputStyle","visible","float","paddingRight","onOk","onCancel","footer","type","disabled","loading","parseEther","to","SendOutlined","Account","userProvider","mainnetProvider","web3Modal","loadWeb3Modal","logoutOfWeb3Modal","modalButtons","cachedProvider","marginLeft","shape","tryToDisplay","thing","toNumber","formatUnits","DisplayVariable","contractFunction","functionInfo","refreshRequired","triggerRefresh","variable","setVariable","refresh","funcResponse","span","textAlign","opacity","utils","FunctionForm","form","setForm","txValue","setTxValue","returnValue","setReturnValue","inputIndex","inputs","input","buttons","isHexString","formUpdate","parseBytes32String","formatBytes32String","toUtf8String","toUtf8Bytes","trim","margin","event","suffix","txValueInput","floatValue","BigNumber","from","toHexString","payable","buttonIcon","defaultValue","bordered","height","innerIndex","baseType","stateMutability","returned","overrides","noContractDisplay","class","borderRadius","fontWeight","marginRight","role","aria-label","contract","customContract","account","show","displayedContractFunctions","values","interface","functions","filter","contractDisplay","isQueryable","connect","Ramp","modalUp","setModalUp","allFaucets","networks","DollarCircleOutlined","RampInstantSDK","hostAppName","hostLogoUrl","swapAmount","swapAsset","userAddress","Faucet","blockie","setAddress","icon","Header","subTitle","GasGauge","parseInt","constants","Select","Option","Swap","ThemeSwitcher","theme","isDarkMode","setIsDarkMode","useThemeSwitcher","switcher","currentTheme","themes","status","className","right","bottom","checked","isChecked","dark","light","Subgraph","BufferList","ipfs","ipfsAPI","host","port","protocol","assets","targetNetwork","STARTING_JSON","getFromIPFS","hashToGet","get","file","path","content","chunk","append","scaffoldEthProvider","JsonRpcProvider","mainnetInfura","localProviderUrl","localProviderUrlFromEnv","process","REACT_APP_PROVIDER","Web3Modal","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","infuraId","clearCachedProvider","ethereum","App","setInjectedProvider","setPrice","DAI","Token","Fetcher","fetchPairData","WETH","pair","route","Route","midPrice","toSignificant","getPrice","useExchangePrice","speed","setGasPrice","loadGasPrice","axios","response","newGasPrice","data","catch","useGasPrice","localChainId","selectedChainId","faucetTx","yourLocalBalance","yourMainnetBalance","readContracts","writeContracts","mainnetDAIContract","ABI","optionalBytecode","setContract","useExternalContractLoader","myMainnetDAIBalance","transferEvents","actionEvents","totalPrice","yourBalance","yourCollectibles","setYourCollectibles","collectibleUpdate","tokenIndex","YourCollectible","tokenOfOwnerByIndex","tokenId","tokenURI","ipfsHash","jsonManifestBuffer","jsonManifest","toString","uri","owner","updateYourCollectibles","networkDisplay","closable","setRoute","faucetHint","faucetAvailable","faucetClicked","setFaucetClicked","yourJSON","setYourJSON","sending","setSending","setIpfsHash","ipfsDownHash","setIpfsDownHash","setDownloading","ipfsContent","setIpfsContent","transferToAddresses","setTransferToAddresses","loadedAssets","setLoadedAssets","assetUpdate","forSale","forSecondarySale","uriToTokenId","ownerOf","galleryList","cardActions","mintItem","cancelSellItem","buyItem","sellItem","actions","external_url","LinkOutlined","maxWidth","src","image","selectedKeys","Item","exact","paddingBottom","columnWidth","gutterWidth","gutterHeight","dataSource","renderItem","update","transferFrom","paddingTop","enableClipboard","onEdit","edit","updated_src","onAdd","add","onDelete","del","placeHolder","align","gutter","prevTheme","subgraphUri","client","ApolloClient","cache","InMemoryCache","ReactDOM","render","themeMap","defaultTheme","document","getElementById"],"mappings":"6LAAA,IAAIA,EAAM,CACT,+BAAgC,MAIjC,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,M,mBCtBpBU,EAAOC,QAAU,8C,mBCAjBD,EAAOC,QAAU,CACf,CACE,OAAU,CACR,CACE,aAAgB,YAChB,KAAQ,gBACR,KAAQ,cAGZ,gBAAmB,aACnB,KAAQ,eAEV,CACE,WAAa,EACb,OAAU,CACR,CACE,SAAW,EACX,aAAgB,UAChB,KAAQ,SACR,KAAQ,WAEV,CACE,SAAW,EACX,aAAgB,UAChB,KAAQ,UACR,KAAQ,WAEV,CACE,SAAW,EACX,aAAgB,SAChB,KAAQ,SACR,KAAQ,WAGZ,KAAQ,SACR,KAAQ,SAEV,CACE,WAAa,EACb,OAAU,CACR,CACE,SAAW,EACX,aAAgB,UAChB,KAAQ,QACR,KAAQ,WAEV,CACE,SAAW,EACX,aAAgB,UAChB,KAAQ,WACR,KAAQ,WAEV,CACE,SAAW,EACX,aAAgB,UAChB,KAAQ,UACR,KAAQ,YAGZ,KAAQ,WACR,KAAQ,SAEV,CACE,WAAa,EACb,OAAU,CACR,CACE,SAAW,EACX,aAAgB,UAChB,KAAQ,QACR,KAAQ,WAEV,CACE,SAAW,EACX,aAAgB,UAChB,KAAQ,WACR,KAAQ,WAEV,CACE,SAAW,EACX,aAAgB,OAChB,KAAQ,WACR,KAAQ,SAGZ,KAAQ,iBACR,KAAQ,SAEV,CACE,WAAa,EACb,OAAU,CACR,CACE,SAAW,EACX,aAAgB,UAChB,KAAQ,OACR,KAAQ,WAEV,CACE,SAAW,EACX,aAAgB,UAChB,KAAQ,KACR,KAAQ,WAEV,CACE,SAAW,EACX,aAAgB,UAChB,KAAQ,UACR,KAAQ,YAGZ,KAAQ,WACR,KAAQ,SAEV,CACE,OAAU,CACR,CACE,aAAgB,UAChB,KAAQ,KACR,KAAQ,WAEV,CACE,aAAgB,UAChB,KAAQ,UACR,KAAQ,YAGZ,KAAQ,UACR,QAAW,GACX,gBAAmB,aACnB,KAAQ,YAEV,CACE,OAAU,CACR,CACE,aAAgB,UAChB,KAAQ,QACR,KAAQ,YAGZ,KAAQ,YACR,QAAW,CACT,CACE,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGZ,gBAAmB,OACnB,KAAQ,YAEV,CACE,OAAU,GACV,KAAQ,UACR,QAAW,CACT,CACE,aAAgB,SAChB,KAAQ,GACR,KAAQ,WAGZ,gBAAmB,OACnB,KAAQ,YAEV,CACE,OAAU,CACR,CACE,aAAgB,SAChB,KAAQ,WACR,KAAQ,WAGZ,KAAQ,UACR,QAAW,CACT,CACE,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGZ,gBAAmB,UACnB,KAAQ,YAEV,CACE,OAAU,CACR,CACE,aAAgB,SAChB,KAAQ,WACR,KAAQ,WAGZ,KAAQ,iBACR,QAAW,CACT,CACE,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGZ,gBAAmB,aACnB,KAAQ,YAEV,CACE,OAAU,CACR,CACE,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGZ,KAAQ,UACR,QAAW,CACT,CACE,aAAgB,OAChB,KAAQ,GACR,KAAQ,SAGZ,gBAAmB,OACnB,KAAQ,YAEV,CACE,OAAU,CACR,CACE,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGZ,KAAQ,mBACR,QAAW,CACT,CACE,aAAgB,OAChB,KAAQ,GACR,KAAQ,SAGZ,gBAAmB,OACnB,KAAQ,YAEV,CACE,OAAU,CACR,CACE,aAAgB,UAChB,KAAQ,UACR,KAAQ,YAGZ,KAAQ,cACR,QAAW,CACT,CACE,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGZ,gBAAmB,OACnB,KAAQ,YAEV,CACE,OAAU,CACR,CACE,aAAgB,UAChB,KAAQ,QACR,KAAQ,WAEV,CACE,aAAgB,UAChB,KAAQ,WACR,KAAQ,YAGZ,KAAQ,mBACR,QAAW,CACT,CACE,aAAgB,OAChB,KAAQ,GACR,KAAQ,SAGZ,gBAAmB,OACnB,KAAQ,YAEV,CACE,OAAU,CACR,CACE,aAAgB,SAChB,KAAQ,WACR,KAAQ,WAGZ,KAAQ,WACR,QAAW,CACT,CACE,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGZ,gBAAmB,UACnB,KAAQ,YAEV,CACE,OAAU,GACV,KAAQ,OACR,QAAW,CACT,CACE,aAAgB,SAChB,KAAQ,GACR,KAAQ,WAGZ,gBAAmB,OACnB,KAAQ,YAEV,CACE,OAAU,CACR,CACE,aAAgB,UAChB,KAAQ,UACR,KAAQ,YAGZ,KAAQ,UACR,QAAW,CACT,CACE,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGZ,gBAAmB,OACnB,KAAQ,YAEV,CACE,OAAU,GACV,KAAQ,QACR,QAAW,CACT,CACE,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGZ,gBAAmB,OACnB,KAAQ,YAEV,CACE,OAAU,CACR,CACE,aAAgB,UAChB,KAAQ,OACR,KAAQ,WAEV,CACE,aAAgB,UAChB,KAAQ,KACR,KAAQ,WAEV,CACE,aAAgB,UAChB,KAAQ,UACR,KAAQ,YAGZ,KAAQ,mBACR,QAAW,GACX,gBAAmB,aACnB,KAAQ,YAEV,CACE,OAAU,CACR,CACE,aAAgB,UAChB,KAAQ,OACR,KAAQ,WAEV,CACE,aAAgB,UAChB,KAAQ,KACR,KAAQ,WAEV,CACE,aAAgB,UAChB,KAAQ,UACR,KAAQ,WAEV,CACE,aAAgB,QAChB,KAAQ,QACR,KAAQ,UAGZ,KAAQ,mBACR,QAAW,GACX,gBAAmB,aACnB,KAAQ,YAEV,CACE,OAAU,CACR,CACE,aAAgB,SAChB,KAAQ,WACR,KAAQ,WAGZ,KAAQ,WACR,QAAW,CACT,CACE,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGZ,gBAAmB,aACnB,KAAQ,YAEV,CACE,OAAU,CACR,CACE,aAAgB,UAChB,KAAQ,WACR,KAAQ,WAEV,CACE,aAAgB,OAChB,KAAQ,WACR,KAAQ,SAGZ,KAAQ,oBACR,QAAW,GACX,gBAAmB,aACnB,KAAQ,YAEV,CACE,OAAU,CACR,CACE,aAAgB,SAChB,KAAQ,cACR,KAAQ,WAGZ,KAAQ,oBACR,QAAW,CACT,CACE,aAAgB,OAChB,KAAQ,GACR,KAAQ,SAGZ,gBAAmB,OACnB,KAAQ,YAEV,CACE,OAAU,GACV,KAAQ,SACR,QAAW,CACT,CACE,aAAgB,SAChB,KAAQ,GACR,KAAQ,WAGZ,gBAAmB,OACnB,KAAQ,YAEV,CACE,OAAU,CACR,CACE,aAAgB,UAChB,KAAQ,QACR,KAAQ,YAGZ,KAAQ,eACR,QAAW,CACT,CACE,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGZ,gBAAmB,OACnB,KAAQ,YAEV,CACE,OAAU,CACR,CACE,aAAgB,UAChB,KAAQ,QACR,KAAQ,WAEV,CACE,aAAgB,UAChB,KAAQ,QACR,KAAQ,YAGZ,KAAQ,sBACR,QAAW,CACT,CACE,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGZ,gBAAmB,OACnB,KAAQ,YAEV,CACE,OAAU,CACR,CACE,aAAgB,UAChB,KAAQ,UACR,KAAQ,YAGZ,KAAQ,WACR,QAAW,CACT,CACE,aAAgB,SAChB,KAAQ,GACR,KAAQ,WAGZ,gBAAmB,OACnB,KAAQ,YAEV,CACE,OAAU,GACV,KAAQ,cACR,QAAW,CACT,CACE,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGZ,gBAAmB,OACnB,KAAQ,YAEV,CACE,OAAU,CACR,CACE,aAAgB,UAChB,KAAQ,OACR,KAAQ,WAEV,CACE,aAAgB,UAChB,KAAQ,KACR,KAAQ,WAEV,CACE,aAAgB,UAChB,KAAQ,UACR,KAAQ,YAGZ,KAAQ,eACR,QAAW,GACX,gBAAmB,aACnB,KAAQ,YAEV,CACE,OAAU,CACR,CACE,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGZ,KAAQ,eACR,QAAW,CACT,CACE,aAAgB,UAChB,KAAQ,GACR,KAAQ,YAGZ,gBAAmB,OACnB,KAAQ,c,mBCpkBZD,EAAOC,QAAU,s/pB,mBCAjBD,EAAOC,QAAU,CAAC,oB,kZC2BZC,EAAe,SAACC,EAAcC,GAClC,IAAMC,EAAc,IAAIC,IACtBC,QAAQ,YAAgBJ,EAAjB,gBACPI,OAAQ,YAAgBJ,EAAjB,YACPC,GAEF,IACEC,EAAYG,SAAWD,OAAQ,YAAgBJ,EAAjB,iBAC9B,MAAOT,GACPe,QAAQC,IAAIhB,GAEd,OAAOW,GAGM,SAASM,EAAkBC,GAAmB,IAAD,EACxBC,qBADwB,mBACnDC,EADmD,KACxCC,EADwC,KAiC1D,OA/BAC,qBAAU,WAAM,4CACd,kCAAAC,EAAA,yDACkC,qBAArBL,EADb,8BAMUA,GAA6D,oBAAlCA,EAAiBM,aANtD,gCAOyBN,EAAiBM,eAP1C,OAOQC,EAPR,cAWQf,EADEe,GAAYA,EAASC,OAAS,EACvBR,EAAiBS,YAEjBT,EAGLU,EAAef,EAAQ,MAEvBgB,EAAeD,EAAaE,QAAO,SAACC,EAAatB,GAErD,OADAsB,EAAYtB,GAAgBD,EAAaC,EAAcC,GAChDqB,IACN,IACHV,EAAaQ,GAtBnB,kDAwBMd,QAAQC,IAAI,4BAAZ,MAxBN,2DADc,uBAAC,WAAD,wBA6BdgB,KACC,CAACd,IACGE,E,YCrCMa,EAnBoB,SAACC,EAAUC,GAAqB,IAAD,EACZhB,oBAAS,GADG,mBACzDiB,EADyD,KACrCC,EADqC,KAgBhE,OAVAf,qBAAU,WAER,IAAMgB,EAAe,uCAAG,4BAAAf,EAAA,yDACjBgB,YAAUJ,GADO,0CACkB,GADlB,uBAECD,EAASM,QAAQL,GAFlB,OAEhBrB,EAFgB,OAGtBuB,EAAmC,QAAbvB,GAHA,2CAAH,qDAKjBoB,GAAUI,MACb,CAACJ,EAAUC,IAEPC,G,qDCjCIK,EAAY,mCAaZC,EAAU,CAAC,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,YAAY,SAAU,EAAM,gBAAkB,aAAa,KAAO,eAAe,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,MAAM,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,MAAM,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,MAAM,KAAO,YAAY,KAAO,WAAW,KAAO,SAAS,CAAC,WAAY,EAAK,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,SAAS,KAAO,MAAM,KAAO,UAAU,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,MAAM,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,OAAO,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,QAAQ,KAAO,OAAO,KAAO,UAAU,KAAO,UAAU,KAAO,SAAS,CAAC,WAAY,EAAM,OAAS,CAAC,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,MAAM,KAAO,WAAW,CAAC,SAAU,EAAK,aAAe,UAAU,KAAO,MAAM,KAAO,WAAW,CAAC,SAAU,EAAM,aAAe,UAAU,KAAO,MAAM,KAAO,YAAY,KAAO,WAAW,KAAO,SAAS,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,mBAAmB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,kBAAkB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,KAAO,YAAY,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,MAAM,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,MAAM,KAAO,YAAY,KAAO,UAAU,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,KAAO,YAAY,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,MAAM,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,MAAM,KAAO,YAAY,KAAO,OAAO,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,WAAW,QAAU,CAAC,CAAC,aAAe,QAAQ,KAAO,GAAG,KAAO,UAAU,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,MAAM,KAAO,YAAY,KAAO,OAAO,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,MAAM,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,MAAM,KAAO,YAAY,KAAO,OAAO,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,MAAM,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,MAAM,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,MAAM,KAAO,YAAY,KAAO,OAAO,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,OAAO,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,WAAW,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,KAAO,SAAS,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,aAAe,OAAO,KAAO,UAAU,KAAO,QAAQ,CAAC,aAAe,QAAQ,KAAO,IAAI,KAAO,SAAS,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,YAAY,KAAO,SAAS,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,MAAM,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,MAAM,KAAO,YAAY,KAAO,OAAO,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,MAAM,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,MAAM,KAAO,YAAY,KAAO,OAAO,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,MAAM,KAAO,YAAY,KAAO,OAAO,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,SAAS,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,WAAW,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,cAAc,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,MAAM,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,MAAM,KAAO,YAAY,KAAO,WAAW,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,MAAM,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,MAAM,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,MAAM,KAAO,YAAY,KAAO,eAAe,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,SAAS,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,UAAU,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,WAAW,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,KAAO,QAAQ,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,aAEnvMC,EAAU,SAACC,GACtB,IAAI,IAAIC,KAAKC,EACX,GAAGA,EAASD,GAAGD,SAASA,EACtB,OAAOE,EAASD,IAKTC,EAAW,CACpBC,UAAW,CACPC,KAAM,YACNC,MAAO,UACPL,QAAS,MACTM,cAAe,GACfC,OAAQ,UAAYC,OAAOC,SAASC,SAAW,SAEnDC,QAAS,CACLP,KAAM,UACNC,MAAO,UACPL,QAAS,EACTO,OAAO,gCAAD,OAAkCV,GACxCS,cAAe,yBAEnBM,MAAO,CACHR,KAAM,QACNC,MAAO,UACPL,QAAS,GACTO,OAAO,8BAAD,OAAgCV,GACtCS,cAAe,8BACfO,OAAQ,0CAEZC,QAAS,CACLV,KAAM,UACNC,MAAO,UACPL,QAAS,EACTO,OAAO,gCAAD,OAAkCV,GACxCgB,OAAQ,6BACRP,cAAe,iCAEnBS,QAAS,CACLX,KAAM,UACNC,MAAO,UACPL,QAAS,EACTa,OAAQ,6BACRP,cAAe,gCACfC,OAAO,gCAAD,OAAkCV,IAE5CmB,OAAQ,CACJZ,KAAM,SACNC,MAAO,UACPL,QAAS,EACTa,OAAQ,kCACRP,cAAe,+BACfC,OAAO,+BAAD,OAAiCV,IAE3CoB,KAAM,CACFb,KAAM,OACNC,MAAO,UACPL,QAAS,IACTkB,MAAO,EACPC,SAAS,IACTZ,OAAQ,0BACRM,OAAQ,2BACRP,cAAe,oCAEnBc,MAAO,CACHhB,KAAM,QACNC,MAAO,UACPL,QAAS,IACTkB,MAAO,EACPC,SAAS,IACTZ,OAAQ,qCACRM,OAAQ,gCACRP,cAAe,6CAEnBe,OAAQ,CACJjB,KAAM,SACNC,MAAO,UACPL,QAAS,MACTkB,MAAO,EACPC,SAAS,IACTZ,OAAQ,oCACRM,OAAQ,gCACRP,cAAe,yCCpCRgB,EAxCS,SAACC,EAAkBC,GAAnB,OACxBC,mBAAQ,WACN,GAAIF,EAEF,OADApD,QAAQC,IAAI,wCACLmD,EAET,GAAKC,EAAL,CAEA,IAAIE,EAAe,GAEnB,GAAGlB,OAAOC,SAASkB,UACdnB,OAAOC,SAASkB,SAASC,QAAQ,QAAQ,EAAE,CAC5C,IACIC,EADAC,EAAatB,OAAOC,SAASsB,KAAKC,QAAQ,IAAI,IAElD,GAAuB,KAApBF,EAAWhD,QAAiC,KAApBgD,EAAWhD,OAAY,CAChDX,QAAQC,IAAI,wCACZyD,EAAMC,EACNJ,EAAaO,WAAaJ,EAC1BrB,OAAO0B,QAAQC,UAAU,GAAG,GAAI,KAChC,IAAIC,EAAoB5B,OAAO6B,aAAaC,QAAQ,kBACjDF,GAAqBA,IAAoBP,GAC1CrB,OAAO6B,aAAaE,QAAQ,wBAAwBC,KAAKC,MAAML,GAEjE5B,OAAO6B,aAAaE,QAAQ,iBAAiBV,IAMnD,GADA1D,QAAQC,IAAI,qCAA2BsD,GACnCF,EAAckB,YAAclB,EAAckB,WAAWC,IAEvD,OADAjB,EAAanB,OAASiB,EAAckB,WAAWC,IACxC,IAAIC,IAAa,IAAIC,IAAenB,IAG3C,IAAMoB,EAActB,EAAcuB,UAAYvB,EAAcuB,SAAS3C,KAErE,OADAsB,EAAanB,OAAb,kBAAiCuC,GAAe,UAAhD,yBAA0EjD,GACnE,IAAI+C,IAAa,IAAIC,IAAenB,OAE5C,CAACH,EAAkBC,K,QCzDP,SAASwB,EAAUC,EAAIC,EAAOC,GAC3C,IAAMC,EAAgBC,mBAEtB3E,qBAAU,WACR0E,EAAcE,QAAUL,IACvB,CAACA,IAGJvE,qBAAU,WAKR,GAJAP,QAAQC,IAAI,QAIE,OAAV8E,EAAgB,CAClB,IAAMlG,EAAKuG,aAJb,WACEH,EAAcE,YAGeJ,GAC7B,OAAO,kBAAMM,cAAcxG,OAE5B,CAACkG,IAEJxE,qBAAU,WACRuE,MACA,CAAEE,ICJS,SAASM,EAAkBjF,EAAWX,EAAc6F,EAAcC,EAAMC,EAAUC,EAAWC,GAAW,IAAD,OAChHC,EAAiB,KACjBH,EACFG,EAAiBH,EACPA,GAA4B,kBAATD,IAE7BI,EAAiBJ,GANiG,MAS1FpF,qBAT0F,mBAS7GyF,EAT6G,KAStGC,EATsG,KAyCpH,OA/BAvF,qBAAU,WACgB,oBAAboF,GACTI,WAAWJ,EAASK,KAAK,EAAMH,GAAQ,KAExC,CAACA,EAAOF,IAEXd,EAAS,sBAAC,8BAAArE,EAAA,0DACJH,IAAaA,EAAUX,GADnB,+BAKA8F,GAAQA,EAAK7E,OAAS,GALtB,kCAMe,EAAAN,EAAUX,IAAc6F,GAAxB,oBAAyCC,IANxD,OAMFS,EANE,gDAUe5F,EAAUX,GAAc6F,KAVvC,QAUFU,EAVE,eAYAP,GAAkC,oBAAdA,IACtBO,EAAWP,EAAUO,IAGnBA,IAAaJ,GACfC,EAASG,GAjBP,kDAoBJjG,QAAQC,IAAR,MApBI,0DAuBP2F,EAAgBvF,GAAaA,EAAUX,IAEnCmG,EC5CM,SAASK,EAAW/E,EAAUgF,EAASV,GAAW,IAAD,EAClCrF,qBADkC,mBACzDgG,EADyD,KAChDC,EADgD,KAahE,OAFAxB,EATiB,uCAAG,4BAAArE,EAAA,0DACd2F,IAAWhF,EADG,gCAESA,EAASmF,WAAWH,GAF7B,QAEVI,EAFU,UAGGH,GAEjBC,EAAWE,GALG,2CAAH,qDASM,MAAOJ,GAAWhF,GAElCiF,ECZQ,SAASI,EAAiBnG,EAAWX,EAAc+G,EAAWtF,EAAUuF,EAAYlB,GAAO,IAAD,EACzEpF,mBAAS,IADgE,mBAChGuG,EADgG,KACvFC,EADuF,KAuBvG,OApBArG,qBAAU,WAKR,GAJwB,qBAAbY,GAAkD,qBAAfuF,GAE5CvF,EAAS0F,iBAAiBH,GAExBrG,GAAaX,GAAgBW,EAAUX,GACzC,IAKE,OAJAW,EAAUX,GAAcoH,GAAGL,GAAW,WAAc,IAAD,uBAATjB,EAAS,yBAATA,EAAS,gBACjD,IAAIuB,EAAcvB,EAAKA,EAAK7E,OAAO,GAAGoG,YACtCH,GAAW,SAAAI,GAAQ,OAAK3H,OAAO4H,OAAO,CAACF,eAAavB,EAAK0B,MAAM1B,OAA5C,mBAAsDwB,UAEpE,WACL3G,EAAUX,GAAcyH,eAAeV,IAEzC,MAAOxH,GACPe,QAAQC,IAAIhB,MAGf,CAACkC,EAAUuF,EAAYrG,EAAWX,EAAc+G,IAE5CE,ECtBT,IAAMS,EAAa,uCAAG,WAAOjG,EAAUgF,GAAjB,iBAAA3F,EAAA,+EAISW,EAASiG,cAAcjB,GAJhC,cAIZkB,EAJY,gBAMYlG,EAASmG,YAAYD,GANjC,UAMZE,EANY,OAQdC,YAAWrB,KAAaqB,YAAWD,GARrB,yCASTF,GATS,0FAcb,GAda,0DAAH,wDA0CJI,EAzBU,SAACtG,EAAUgF,GAAa,IAAD,EAChB/F,mBAAS+F,GADO,mBACvCuB,EADuC,KAC9BC,EAD8B,OCnCjC,SAAyBC,EAAKC,GAAc,MAGnBzH,oBAAS,WAC7C,IAEE,IAAM0H,EAAOzF,OAAO6B,aAAaC,QAAQyD,GAEzC,OAAOE,EAAOC,KAAKC,MAAMF,GAAQD,EACjC,MAAOI,GAGP,OADAjI,QAAQC,IAAIgI,GACLJ,MAZ8C,mBAGlDK,EAHkD,KAGrCC,EAHqC,KAiCzD,MAAO,CAACD,EAfS,SAAArC,GACf,IAEE,IAAMuC,EACJvC,aAAiBwC,SAAWxC,EAAMqC,GAAerC,EAEnDsC,EAAeC,GAEf/F,OAAO6B,aAAaE,QAAQwD,EAAKG,KAAKO,UAAUF,IAChD,MAAOH,GAEPjI,QAAQC,IAAIgI,MDQgBM,CAAgB,YAAYpC,GAFd,mBAEvCqC,EAFuC,KAE7BC,EAF6B,KAsB9C,OAlBAlI,qBAAU,WACJiI,GAAYA,EAASE,UAAUrE,KAAKC,MACtCqD,EAAWa,EAASvG,MAEhBd,GACFiG,EAAcjG,EAAUgF,GAASwC,MAAK,SAAC1G,GACjCA,IACF0F,EAAW1F,GACXwG,EAAY,CACVC,UAAUrE,KAAKC,MAAM,KACrBrC,KAAKA,UAMd,CAACuG,EAAUrH,EAAUgF,EAASwB,EAAYc,IAEtCf,G,sDE7BDkB,GAASC,KAATD,KAIO,SAASE,GAAQC,GAE9B,IAAM5C,EAAU4C,EAAMlD,OAASkD,EAAM5C,QAE/B6C,EAAMvB,EAAiBsB,EAAME,YAAa9C,GAEhD,IAAKA,EACH,OACE,8BACE,kBAAC,KAAD,CAAU+C,QAAM,EAACC,UAAW,CAAEC,KAAM,MAK1C,IAAIC,EAAiBlD,EAAQmD,OAAO,EAAG,GAEnCN,GAAOA,EAAIvF,QAAQ,MAAM,EAC3B4F,EAAiBL,EACO,UAAfD,EAAMQ,KACfF,GAAkB,MAAQlD,EAAQmD,QAAQ,GAClB,SAAfP,EAAMQ,OACfF,EAAiBlD,GAGnB,IAWIqD,EAXEC,EA1BkB,SAACtD,EAAShE,GAAV,gBAA+BA,GAAiB,wBAA0B,YAA1E,OAAuFgE,GA0BzFuD,CAAkBvD,EAAS4C,EAAM5G,eACvD,OAAI4G,EAAMY,UAEN,0BAAMC,MAAO,CAAEC,cAAe,WAC5B,uBAAoCC,OAAQ,SAAUC,KAAMN,EAAeO,IAAI,uBAC7E,kBAAC,KAAD,CAAUC,KAAM9D,EAAQ+D,cAAeX,KAAM,EAAGY,MAAO,OAQ7DX,EADET,EAAMpD,SAEN,kBAACiD,GAAD,CAAMwB,SAAU,CAAEzE,SAAUoD,EAAMpD,UAAY0E,SAAU,CAAEb,KAAMrD,IAC9D,uBAAoC2D,OAAQ,SAAUC,KAAMN,EAAeO,IAAI,uBAC5EX,IAML,kBAACT,GAAD,CAAMyB,SAAU,CAAEb,KAAMrD,IACtB,uBAAoC2D,OAAQ,SAAUC,KAAMN,EAAeO,IAAI,uBAC5EX,IAOP,8BACE,0BAAMO,MAAO,CAAEC,cAAe,WAC5B,kBAAC,KAAD,CAAUI,KAAM9D,EAAQ+D,cAAeX,KAAM,EAAGY,MAAOpB,EAAMuB,SAASvB,EAAMuB,SAAS,EAAE,KAEzF,0BAAMV,MAAO,CAAEC,cAAe,SAAUU,YAAa,EAAGD,SAAUvB,EAAMuB,SAASvB,EAAMuB,SAAS,KAAOd,K,aC9D9F,SAASgB,GAAQzB,GAAQ,IAAD,EACD3I,oBAAS,GADR,mBAC9BqK,EAD8B,KAClBC,EADkB,OAEPtK,qBAFO,mBAE9BgG,EAF8B,KAErBC,EAFqB,KAI/BC,EAAU,uCAAG,4BAAA9F,EAAA,0DACbuI,EAAM5C,UAAW4C,EAAM5H,SADV,0CAGY4H,EAAM5H,SAASmF,WAAWyC,EAAM5C,SAH5C,OAGPI,EAHO,OAIbF,EAAWE,GAJE,gDAMbvG,QAAQC,IAAR,MANa,yDAAH,qDAWhB4E,aACE,WACEyB,MAEFyC,EAAMtD,SAAWsD,EAAMtD,SAAW,MAGpC,IAAIkF,EAAeC,WAAW,QAE1BC,EAAezE,EASnB,GAP6B,qBAAlB2C,EAAM3C,UACfyE,EAAe9B,EAAM3C,SAEI,qBAAhB2C,EAAMlD,QACfgF,EAAe9B,EAAMlD,OAGnBgF,EAAc,CAChB,IAAMC,EAAeC,aAAYF,GACjCD,WAAWE,GAAcE,QAAQ,GACjCL,EAAeC,WAAWE,GAG5B,IAAIG,EAAiBN,EAAaK,QAAQ,GAEpCjI,EAAQgG,EAAMhG,OAASgG,EAAMmC,iBAMnC,OAJInI,GAAS0H,IACXQ,EAAiB,KAAON,EAAe5H,GAAOiI,QAAQ,IAItD,0BACEpB,MAAO,CACLC,cAAe,SACfS,SAAUvB,EAAMQ,KAAOR,EAAMQ,KAAO,GACpC4B,QAAS,EACTC,OAAQ,WAEVC,QAAS,WACPX,GAAeD,KAGhBQ,G,gIC/EQ,SAASK,GAAWnK,EAAU6B,EAAUuI,GACrD,GAAwB,qBAAbpK,EAET,8CAAO,WAAMqK,GAAN,6BAAAhL,EAAA,6DACCb,EAASwB,EAASP,YADnB,SAEiBO,EAASsK,aAF1B,UAECC,EAFD,OAGL1L,QAAQC,IAAI,UAAWyL,GACjBC,EAAU,CACdC,OVZ0B,uCUa1BC,OAAQ,WACRC,UAAWJ,EAAQ7J,QAEnBkK,mBAAoB,SAAAC,GAClBhM,QAAQC,IAAI,YAAa+L,KAGvBC,EAASC,aAAOP,GAElBQ,EAAmB,GACnBT,EAAQzJ,MAAQyJ,EAAQ7J,QAAU,IACpCsK,EAAmBT,EAAQzJ,KAAO,KAGhCmK,EAAiB,WAAaD,EAAmB,mBAC7B,MAApBT,EAAQ7J,UACVuK,EAAiB,uCAtBd,YA2BCZ,aAAca,SA3Bf,wBA4BDrM,QAAQC,IAAI,cAAeuL,GA5B1B,UA6BcA,EA7Bd,QA6BDc,EA7BC,sCA+BId,EAAGxI,WACNwI,EAAGxI,SAAWA,GAAYuJ,aAAW,MAAO,SAEzCf,EAAGgB,WACNhB,EAAGgB,SAAWC,aAAQ,OAExBzM,QAAQC,IAAI,aAAcuL,GArCzB,UAsCc7L,EAAO+M,gBAAgBlB,GAtCrC,QAsCDc,EAtCC,sBAwCHtM,QAAQC,IAAI,UAAWqM,GAInB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,KAAK7I,QAAQiI,EAAQ7J,UAAY,GAAI,EACpCoK,EAAOrI,KAAK0I,EAAO1I,MADgB,EAC/C+I,QACA7F,GAAG,OAAO,SAAA8F,GAChB,MAAO,CACLC,QAAS,kBAAMxK,OAAOyK,MAAMvB,GAAaa,GAAkBQ,EAAYhJ,YAI3EmJ,KAAaC,KAAK,CAChBC,QAAS,yBACTC,YAAaZ,EAAO1I,KACpBuJ,UAAW,gBAvDZ,kBA2DIb,GA3DJ,mCA6DHtM,QAAQC,IAAR,MACAD,QAAQC,IAAI,qBAAsB,KAAEgN,SACpCF,KAAa9E,MAAM,CACjBgF,QAAS,oBACTC,YAAa,KAAED,UAjEd,2DAAP,sD,+CCTW,SAASG,GAAQrE,GAC9B,OAAKA,EAAM5C,SAAgD,oBAA9B4C,EAAM5C,QAAQ+D,YAIpC,kBAAC,KAAD,eAAUD,KAAMlB,EAAM5C,QAAQ+D,eAAmBnB,IAH/C,+BC2BI,SAASsE,GAAatE,GAAQ,IAAD,EAChB3I,mBAAS2I,EAAMlD,OADC,mBACnCA,EADmC,KAC5BC,EAD4B,OAElB1F,oBAAS,GAFS,mBAEnCkN,EAFmC,KAE7BC,EAF6B,KAIpCC,EAAsC,qBAAhBzE,EAAMlD,MAAwBkD,EAAMlD,MAAQA,EAClEmD,EAAMvB,YAAiBsB,EAAME,YAAauE,GAE1CC,EACJ,yBACE7D,MAAO,CAAE8D,UAAW,EAAGtC,OAAQ,WAC/BC,QAAS,WACPkC,GAASD,KAGX,kBAAC,KAAD,CAAOK,MAAO,kBAACC,GAAA,EAAD,CAAgBhE,MAAO,CAAEU,SAAU,MAC/C,kBAACuD,GAAA,EAAD,CAAgBjE,MAAO,CAAEU,SAAU,OAC5B,IARX,QAaKrB,EAAyBF,EAAzBE,YAAatD,EAAYoD,EAAZpD,SACdmI,EAAgBC,sBAAW,uCAC/B,WAAM9H,GAAN,iBAAAzF,EAAA,yDAC0B,qBAAbyF,EADb,uBAEQE,EAAUF,GACFxC,QAAQ,QAAU,GAAK0C,EAAQ1C,QAAQ,QAAU,GAHjE,0CAKsCwF,EAAY3B,YAAYnB,GAL9D,QAKc6H,EALd,UAOU7H,EAAU6H,GAPpB,0DAYIlI,EAASK,GACe,oBAAbR,GACTA,EAASQ,GAdf,0DAD+B,sDAmB/B,CAAC8C,EAAatD,IAGVsI,EAAUX,EACd,yBACE1D,MAAO,CACLsE,OAAQ,IACRC,SAAU,WACVC,KAAM,EACNC,IAAK,EACLC,MAAO,QAETjD,QAAS,WACPkC,GAAQ,KAGV,kBAAC,KAAD,CACExI,MAAO,IACPwJ,WAAY,KACZC,QAAS,SAAAvP,GACPe,QAAQC,IAAI,aAAchB,GAC1BsO,GAAQ,IAEVkB,OAAQ,SAAAxI,GACN,GAAIA,EAAU,CACZjG,QAAQC,IAAI,aAAcgG,GAC1B,IAAIyI,EAAmBzI,EACnByI,EAAiBjL,QAAQ,MAAQ,IACnCiL,EAAmBA,EAAiBpF,OAAOoF,EAAiBC,YAAY,OACxE3O,QAAQC,IAAI,gBAAiByO,IAE/BnB,GAAQ,GACRO,EAAcY,KAGlB9E,MAAO,CAAE0E,MAAO,WAIpB,GAGF,OACE,6BACGL,EACD,kBAAC,IAAD,CACEpP,GAAI,YACJoD,KAAM,YACN2M,aAAa,MACbC,UAAW9F,EAAM8F,UACjBC,YAAa/F,EAAM+F,YAAc/F,EAAM+F,YAAc,UACrDC,OAAQ,kBAAC3B,GAAD,CAASjH,QAASqH,EAAcjE,KAAM,EAAGY,MAAO,IACxDtE,MAAOmD,GAAOwE,EACdwB,WAAYvB,EACZ9H,SAAU,SAAA1G,GACR6O,EAAc7O,EAAE6K,OAAOjE,WCpGlB,SAASoJ,GAAWlG,GAAQ,IAgCrCgG,EACAC,EAjCoC,EAChB5O,mBAAS2I,EAAMhG,MAAQ,MAAQ,OADf,mBACjCmM,EADiC,KAC3BC,EAD2B,OAEV/O,qBAFU,mBAEjCgP,EAFiC,KAExBC,EAFwB,OAGdjP,qBAHc,mBAGjCyF,EAHiC,KAG1BC,EAH0B,KAKlC0H,EAAsC,qBAAhBzE,EAAMlD,MAAwBkD,EAAMlD,MAAQA,EAElEyJ,EAAS,SAAAC,GACb,OAAKxG,EAAMhG,MAET,yBACE6G,MAAO,CAAEwB,OAAQ,WACjBC,QAAS,WACP,GAAa,QAAT6D,EACFC,EAAQ,OACRE,EAAW7B,QAGX,GADA2B,EAAQ,OACJ3B,EAAc,CAChB,IAAMgC,EAAW,IAAM5E,WAAW4C,GAAgBzE,EAAMhG,OAAOiI,QAAQ,GACvEqE,EAAWG,QAEXH,EAAW7B,KAKhB+B,GAnBoB,IA0C3B,MAhBa,QAATL,GACFH,EAAS,IACTC,EAAaM,EAAO,sBAEpBP,EAAS,SACTC,EAAaM,EAAO,qBAGtB/O,qBACE,WACMiN,GACF6B,EAAW,MAGhB,CAAE7B,IAGD,kBAAC,IAAD,CACEsB,YAAa/F,EAAM+F,YAAc/F,EAAM+F,YAAc,aAAeI,EACpEL,UAAW9F,EAAM8F,UACjBE,OAAQA,EACRlJ,MAAOuJ,EACPJ,WAAYA,EACZrJ,SAAQ,uCAAE,WAAM1G,GAAN,mBAAAuB,EAAA,sDACFyF,EAAWhH,EAAE6K,OAAOjE,MACb,QAATqJ,GACIR,EAAmB9D,WAAW3E,KAE5BwJ,EAAWf,EAAmB3F,EAAMhG,MAC1C+C,EAAS2J,GACqB,oBAAnB1G,EAAMpD,UACfoD,EAAMpD,SAAS8J,GAEjBJ,EAAWpJ,IAEXoJ,EAAWpJ,IAGbH,EAASG,GACqB,oBAAnB8C,EAAMpD,UACfoD,EAAMpD,SAASM,GAEjBoJ,EAAWpJ,IAnBL,2CAAF,wD,cC3EN2C,GAAoBC,KAApBD,KAAM8G,GAAc7G,KAAd6G,UA8BC,SAASC,GAAO5G,GAC7B,IA6BIqG,EACAQ,EACAC,EA/BEC,EAAgBC,YAAehH,EAAM5H,UACrC6O,EAAkBjH,EAAM5C,SAAW2J,EAFL,EAIZ1P,qBAJY,mBAI7B0M,EAJ6B,KAIvBmD,EAJuB,OAKhB7P,qBALgB,mBAK7B8P,EAL6B,KAKzBC,EALyB,OAMR/P,qBANQ,mBAM7BgQ,EAN6B,KAMrBC,EANqB,OAOFjQ,qBAPE,mBAO7BkQ,EAP6B,KAOlBC,EAPkB,OAQhBnQ,qBARgB,mBAQ7BoQ,EAR6B,KAQzBC,EARyB,KAU9BC,EAAe3H,EAAM5H,SACzB,kBAAC,KAAD,CAASoO,MAAM,UACb,kBAACoB,GAAA,EAAD,CACEtF,QAAS,WACP4E,GAASnD,IAEX8D,QAAS,GACThH,MAAO,CACLuB,QAAS,EACTjJ,MAAO6G,EAAM7G,MAAQ6G,EAAM7G,MAAQ,GACnCkJ,OAAQ,UACRd,SAAU,GACVT,cAAe,aAKrB,GAMF,GAAIqG,EACFd,EACE,6BACE,6BACE,kBAAC,GAAD,CAAM/E,UAAQ,GAAE2F,IAElB,kBAAC,KAAD,CACEnK,MAAOmK,EACPzG,KAAK,MACLsH,MAAM,IACNC,eAAa,EACbC,SAAS,MACTC,cAAe,CAAEC,UAAU,MAIjCrB,EACE,kBAAC,IAAD,CACEhI,IAAI,OACJyD,QAAS,WACP8E,EAAM,MAGR,kBAACtC,GAAA,EAAD,MANF,SASFgC,EACC,kBAAC,IAAD,CAAQjI,IAAI,OAAOyD,QAAS,WAAKoF,EAAMT,GAAiBG,EAAM,MAC5D,kBAACe,GAAA,EAAD,MADF,qBAIE,GAAGV,EAAG,CAEV,IAAIA,EAAKtM,aAAaC,QAAQ,kBAC1BgN,EAAS,IAAIC,UAAOzB,OAAOa,GAE/B,GAAGW,EAAOhL,UAAU6J,EAClBZ,EACE,6BACE,2EAGD,CAEH,IAAIiC,EAAsB,GACtBC,EAAiB,GASrB,IAAK,IAAI1J,KARTyJ,EAAoBF,EAAOhL,UAAW,EACtCmL,EAAeC,KACb,yBAAK3H,MAAO,CAACU,SAAS,GAAGa,QAAQ,EAAEqG,gBAAgB,YAChD,uBAAGzH,KAAM,OAAOyG,GACd,kBAAC1H,GAAD,CAASa,WAAW,EAAMxD,QAASgL,EAAOhL,QAAS8C,YAAaF,EAAME,cADxE,IACyFkI,EAAOhL,QAAQmD,OAAO,EAAE,MAItGpF,aACd,GAAG0D,EAAInE,QAAQ,0BAA0B,EAAE,CACzCzD,QAAQC,IAAI2H,GACZ,IAAI6J,EAASvN,aAAaC,QAAQyD,GAC9B8J,EAAa,IAAIN,UAAOzB,OAAO8B,GAC/BJ,EAAoBK,EAAWvL,WACjCkL,EAAoBK,EAAWvL,UAAW,EAC1CmL,EAAeC,KACb,yBAAK3H,MAAO,CAACU,SAAS,KACnB,uBAAGP,KAAM,OAAO0H,GACd,kBAAC3I,GAAD,CAASa,WAAW,EAAMxD,QAASuL,EAAWvL,QAAS8C,YAAaF,EAAME,cAD5E,IAC6FyI,EAAWvL,QAAQmD,OAAO,EAAE,OASpI8F,EACE,6BACE,2CAEA,6BACC,kBAAC,GAAD,CAAM/E,UAAQ,GAAEmG,IAGhB,6BAED,2EACE,uBAAG1G,OAAO,SAASC,KAAM,mBAAmByG,EAAIxG,IAAI,uBAApD,iBADF,KAGA,kBAAC,KAAD,CAAInE,MAAO,mBAAmB2K,EAAIjH,KAAM,MAAOsH,MAAO,IAAKC,eAAe,EAAMC,SAAU,MAAOC,cAAe,CAACC,UAAS,KAE1H,kBAACvB,GAAD,CAAW9F,MAAO,CAACU,SAAS,MAAOD,UAAQ,GAAE,mBAAmBmG,GAE/Dc,EACC,6BACE,mDAGCA,EACD,kBAAC,IAAD,CAAQjG,QAAS,WACf,IAAIpH,EAAoB5B,OAAO6B,aAAaC,QAAQ,kBACjDF,GACD5B,OAAO6B,aAAaE,QAAQ,wBAAwBC,KAAKC,MAAML,GAEjE,IACMH,EADesN,UAAOzB,OAAOgC,eACHC,cAAc9N,WAC9CzB,OAAO6B,aAAaE,QAAQ,iBAAiBN,GAC7CzB,OAAOC,SAASuP,WARlB,aAaF,IAMRjC,EACE,kBAAC,IAAD,CAAQhI,IAAI,UAAUyD,QAAS,WAAK8E,EAAMH,GAAiBS,EAAM,MAC/D,kBAAC5C,GAAA,EAAD,MADF,YAIFgC,EACE,kBAAC,IAAD,CAAQjI,IAAI,OAAOyD,QAAS,WAAKoF,EAAM,IAAIN,EAAM,MAC/C,kBAACe,GAAA,EAAD,MADF,aAII,CACL,IAAMY,EAAa,CACjB3G,QAAS,IAGXiE,EACE,6BACE,yBAAKxF,MAAOkI,GACV,kBAACzE,GAAD,CACEwB,WAAS,EACT5F,YAAaF,EAAME,YACnB6F,YAAY,aACZ3I,QAASmK,EACT3K,SAAU4K,KAGd,yBAAK3G,MAAOkI,GACV,kBAAC7C,GAAD,CACElM,MAAOgG,EAAMhG,MACb8C,MAAOuK,EACPzK,SAAU,SAAAE,GACRwK,EAAUxK,QAMpB+J,EACE,kBAAC,IAAD,CACEhI,IAAI,UACJyD,QAAS,WACP8E,EAAMH,GACNS,EAAM,MAGR,kBAAC5C,GAAA,EAAD,MAPF,YAUFgC,EACE,kBAAC,IAAD,CAAQjI,IAAI,OAAOyD,QAAS,WAAKoF,EAAMT,GAAiBG,EAAM,MAC5D,kBAACe,GAAA,EAAD,MADF,gBAMJ,OACE,8BACGR,EACD,kBAAC,KAAD,CACEqB,QAASjF,EACTyC,MACE,6BACGS,EAAkB,kBAAClH,GAAD,CAAS3C,QAAS6J,EAAiB/G,YAAaF,EAAME,cAAkB,kBAAC,KAAD,MAC3F,yBAAKW,MAAO,CAAEoI,MAAO,QAASC,aAAc,KAC1C,kBAACzH,GAAD,CAASrE,QAAS6J,EAAiB7O,SAAU4H,EAAM5H,SAAU+J,iBAAkBnC,EAAMhG,UAI3FmP,KAAM,WACJ/B,IACAM,IACAR,GAASnD,IAEXqF,SAAU,WACRhC,IACAM,IACAR,GAASnD,IAEXsF,OAAQ,CACNvC,EAAkBD,EAClB,kBAAC,IAAD,CACEhI,IAAI,SACJyK,KAAK,UACLC,UAAWlC,IAAWE,GAAaJ,EACnCqC,SAAS,EACTlH,QAAS,WACP,IAEIxF,EAFE2F,EAAKF,GAAWvC,EAAM5H,UAG5B,IACE0E,EAAQ2M,aAAW,GAAKpC,GACxB,MAAOnR,GAEP4G,EAAQ2M,aAAW,GAAK5H,WAAWwF,GAAQpF,QAAQ,IAGrDQ,EAAG,CACDiH,GAAInC,EACJzK,UAEFoK,GAASnD,GACTqD,MAGF,kBAACuC,GAAA,EAAD,MAxBF,WA4BDtD,IClQM,SAASuD,GAAT,GAWX,IAVFxM,EAUC,EAVDA,QACAyM,EASC,EATDA,aACAvP,EAQC,EARDA,cACAwP,EAOC,EAPDA,gBACA9P,EAMC,EANDA,MACA4G,EAKC,EALDA,UACAmJ,EAIC,EAJDA,UACAC,EAGC,EAHDA,cACAC,EAEC,EAFDA,kBACA7Q,EACC,EADDA,cAEM8Q,EAAe,GACjBH,IACEA,EAAUI,eACZD,EAAa1B,KACX,kBAAC,IAAD,CACE3J,IAAI,eACJgC,MAAO,CAAEC,cAAe,MAAOsJ,WAAY,EAAGzF,UAAW,GACzD0F,MAAM,QACN7J,KAAK,QACL8B,QAAS2H,GALX,WAWFC,EAAa1B,KACX,kBAAC,IAAD,CACE3J,IAAI,cACJgC,MAAO,CAAEC,cAAe,MAAOsJ,WAAY,EAAGzF,UAAW,GACzD0F,MAAM,QACN7J,KAAK,QAEL8B,QAAS0H,GANX,aAcN,IAAM3D,EAAUzF,EACd,GAEA,8BACGxD,EAAU,kBAAC2C,GAAD,CAAS3C,QAASA,EAAS8C,YAAa4J,EAAiB1Q,cAAeA,IAAoB,gBACvG,kBAACqI,GAAD,CAASrE,QAASA,EAAShF,SAAUkC,EAAeN,MAAOA,IAC3D,kBAAC4M,GAAD,CAAQxJ,QAASA,EAAShF,SAAUyR,EAAc3J,YAAa4J,EAAiB9P,MAAOA,KAI3F,OACE,6BACGqM,EACA6D,G,eCvEQI,GAnBM,SAAAC,GACnB,GAAIA,GAASA,EAAMC,SACjB,IACE,OAAOD,EAAMC,WACb,MAAOtU,GACP,MAAO,SAAIuU,aAAYF,EAAO,SAGlC,OAAGA,GAASA,EAAM7P,SAAgC,GAArB6P,EAAM7P,QAAQ,OAA4B,IAAhB6P,EAAM3S,OAEzD,kBAACmI,GAAD,CACE3C,QAASmN,EACThJ,SAAU,KAITvC,KAAKO,UAAUgL,ICgCTG,GA/CS,SAAC,GAAwE,IAAtEC,EAAqE,EAArEA,iBAAkBC,EAAmD,EAAnDA,aAAcC,EAAqC,EAArCA,gBAAiBC,EAAoB,EAApBA,eAAoB,EAC9DzT,mBAAS,IADqD,mBACvF0T,EADuF,KAC7EC,EAD6E,KAGxFC,EAAUjG,sBAAW,sBAAC,4BAAAvN,EAAA,+EAEGkT,IAFH,OAElBO,EAFkB,OAGxBF,EAAYE,GACZJ,GAAe,GAJS,gDAMxB7T,QAAQC,IAAR,MANwB,yDAQzB,CAAC8T,EAAaL,EAAkBG,IAMnC,OAJAtT,qBAAU,WACRyT,MACC,CAACA,EAASJ,EAAiBF,IAG5B,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEQ,KAAM,EACNtK,MAAO,CACLuK,UAAW,QACXC,QAAS,KACTnC,aAAc,EACd3H,SAAU,KAGXqJ,EAAa1R,MAEhB,kBAAC,IAAD,CAAKiS,KAAM,IACT,4BAAKb,GAAaS,KAEpB,kBAAC,IAAD,CAAKI,KAAM,GACT,4BACE,uBAAGnK,KAAK,IAAIsB,QAAS2I,GAArB,mBAMN,kBAAC,KAAD,Q,SCtCEK,GAAUvU,EAAQ,KAAlBuU,MAGO,SAASC,GAAT,GAA+F,IAAvEZ,EAAsE,EAAtEA,iBAAkBC,EAAoD,EAApDA,aAAcxS,EAAsC,EAAtCA,SAAU6B,EAA4B,EAA5BA,SAAU6Q,EAAkB,EAAlBA,eAAkB,EACnFzT,mBAAS,IAD0E,mBACpGmU,EADoG,KAC9FC,EAD8F,OAE7EpU,qBAF6E,mBAEpGqU,EAFoG,KAE3FC,EAF2F,OAGrEtU,qBAHqE,mBAGpGuU,EAHoG,KAGvFC,EAHuF,KAKrGpJ,EAAKF,GAAWnK,EAAU6B,GAE5B6R,EAAa,EACXC,EAASnB,EAAamB,OAAOpW,KAAI,SAAAqW,GAErC,IAAMnN,EAAM+L,EAAa1R,KAAO,IAAM8S,EAAM9S,KAAO,IAAM8S,EAAM1C,KAAO,IAAMwC,IAExEG,EAAU,GACd,GAAmB,YAAfD,EAAM1C,KACR2C,EACE,kBAAC,KAAD,CAAS7H,UAAU,QAAQoC,MAAO,cAChC,yBACE8C,KAAK,SACLzI,MAAO,CAAEwB,OAAQ,WACjBC,QAAO,sBAAE,8BAAA7K,EAAA,sDACH6T,GAAMY,YAAYV,EAAK3M,MACnBsN,EAD0B,eACRX,IACb3M,GAAOyM,GAAMc,mBAAmBZ,EAAK3M,IAChD4M,EAAQU,MAEFA,EADD,eACmBX,IACb3M,GAAOyM,GAAMe,oBAAoBb,EAAK3M,IACjD4M,EAAQU,IARH,4CAHX,uBAmBC,GAAmB,UAAfH,EAAM1C,KACf2C,EACE,kBAAC,KAAD,CAAS7H,UAAU,QAAQoC,MAAO,UAChC,yBACE8C,KAAK,SACLzI,MAAO,CAAEwB,OAAQ,WACjBC,QAAO,sBAAE,8BAAA7K,EAAA,sDACH6T,GAAMY,YAAYV,EAAK3M,MACnBsN,EAD0B,eACRX,IACb3M,GAAOyM,GAAMgB,aAAad,EAAK3M,IAC1C4M,EAAQU,MAEFA,EADD,eACmBX,IACb3M,GAAOyM,GAAM5H,QAAQ4H,GAAMiB,YAAYf,EAAK3M,KACvD4M,EAAQU,IARH,4CAHX,uBAmBC,GAAkB,WAAdH,EAAM1C,KACf2C,EACE,kBAAC,KAAD,CAAS7H,UAAU,QAAQoC,MAAO,cAChC,yBACE8C,KAAK,SACLzI,MAAO,CAAEwB,OAAQ,WACjBC,QAAO,sBAAE,4BAAA7K,EAAA,uDACD0U,EADC,eACiBX,IACb3M,GAAOyM,GAAM7B,WAAW+B,EAAK3M,IACxC4M,EAAQU,GAHD,4CAHX,sBAaC,GAAkB,WAAdH,EAAM1C,KAAmB,CAClC,IAAMrE,EAAkBuG,EAAK3M,IAAM2M,EAAK3M,GAAKsC,aAAaqK,EAAK3M,GAAKsC,cAAcqL,OAC/EvH,GAA2C,IAAxBA,EAAgBrN,SACpCqU,EACE,kBAAC,KAAD,CAAS7H,UAAU,QAAQoC,MAAO,WAChC,kBAAC,KAAD,CAAUtF,KAAM+D,EAAiB7D,MAAO,MAShD,OACE,yBAAKP,MAAO,CAAE4L,OAAQ,GAAK5N,IAAKA,GAC9B,kBAAC,IAAD,CACE2B,KAAK,QACLuF,YAAaiG,EAAM9S,KAAO8S,EAAM1C,KAAO,IAAM0C,EAAM9S,KAAO8S,EAAM1C,KAChEzD,aAAa,MACb/I,MAAO0O,EAAK3M,GACZ3F,KAAM2F,EACNjC,SAAU,SAAC8P,GACT,IAAMP,EAAU,eAAQX,GACxBW,EAAWO,EAAM3L,OAAO7H,MAAQwT,EAAM3L,OAAOjE,MAC7C2O,EAAQU,IAEVQ,OAAQV,QAMVW,EACJ,yBAAK/L,MAAO,CAAE4L,OAAQ,GAAK5N,IAAK,gBAC9B,kBAAC,IAAD,CACEkH,YAAY,oBACZnJ,SAAU,SAAA1G,GAAC,OAAIyV,EAAWzV,EAAE6K,OAAOjE,QACnCA,MAAO4O,EACPzF,WACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKkF,KAAM,IACT,kBAAC,KAAD,CAAS/G,UAAU,QAAQoC,MAAO,aAChC,yBACE8C,KAAK,SACLzI,MAAO,CAAEwB,OAAQ,WACjBC,QAAO,sBAAE,4BAAA7K,EAAA,uDACHoV,EAAahL,WAAW6J,KACbC,EAAW,GAAKkB,EAAU,SAAG,GAAM,KAF3C,4CAHX,kBAYJ,kBAAC,IAAD,CAAK1B,KAAM,IACT,kBAAC,KAAD,CAAS/G,UAAU,QAAQoC,MAAO,iBAChC,yBACE8C,KAAK,SACLzI,MAAO,CAAEwB,OAAQ,WACjBC,QAAO,sBAAE,sBAAA7K,EAAA,sDACPkU,EAAWmB,KAAUC,KAAKrB,GAASsB,eAD5B,4CAHX,wBAkBZpC,EAAaqC,SACflB,EAAOvD,KAAKoE,GAGd,IAAMM,EAAmC,SAAtBtC,EAAatB,KAAkB,kBAAC,IAAD,CAAQzI,MAAO,CAAEuJ,YAAa,KAA9B,oBAAsD,kBAAC,IAAD,CAAQvJ,MAAO,CAAEuJ,YAAa,KAA9B,oBA6DxG,OA5DA2B,EAAOvD,KACL,yBAAK3H,MAAO,CAAEwB,OAAQ,UAAWoK,OAAQ,GAAK5N,IAAK,YACjD,kBAAC,IAAD,CACEjC,SAAU,SAAA1G,GAAC,OAAI2V,EAAe3V,EAAE6K,OAAOjE,QACvCqQ,aAAa,GACbC,UAAU,EACV7D,UAAU,EACVzM,MAAO8O,EACPe,OACE,yBACE9L,MAAO,CAAE0E,MAAO,GAAI8H,OAAQ,GAAIZ,OAAQ,GACxCnD,KAAK,UACLhH,QAAO,sBAAE,sCAAA7K,EAAA,yDACH6V,EAAa,EACX7Q,EAAOmO,EAAamB,OAAOpW,KAAI,SAACqW,GACpC,IAAMnN,EAAM+L,EAAa1R,KAAO,IAAM8S,EAAM9S,KAAO,IAAM8S,EAAM1C,KAAO,IAAMgE,IACxExQ,EAAQ0O,EAAK3M,GAUjB,MATmB,SAAhBmN,EAAMuB,SACPzQ,EAAQkC,KAAKC,MAAMnC,GACI,SAAfkP,EAAM1C,OAEZxM,EADS,SAARA,GAA0B,MAARA,GAAwB,QAATA,GAA0B,SAATA,GAA2B,WAATA,EAC7D,EAEA,GAGLA,KAI2B,SAAjC8N,EAAa4C,iBAA6D,SAAjC5C,EAAa4C,gBAlBlD,gCAmBkB7C,EAAgB,WAAhB,cAAoBlO,IAnBtC,OAmBCgR,EAnBD,OAoBLlK,EAAS+G,GAAamD,GApBjB,8BAsBCC,EAAY,GACdhC,IACFgC,EAAU5Q,MAAQ4O,GAxBf,UA+BkBjJ,EAAGkI,EAAgB,WAAhB,cAAoBlO,GAApB,QAA0BiR,MA/B/C,QA+BCD,EA/BD,OAgCLlK,EAAS+G,GAAamD,GAhCjB,QAoCPxW,QAAQC,IAAI,kBAAmBqM,GAC/BsI,EAAetI,GACfuH,GAAe,GAtCR,6CAyCRoC,OAQT,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE/B,KAAM,EACNtK,MAAO,CACLuK,UAAW,QACXC,QAAS,KACTnC,aAAc,EACd3H,SAAU,KAGXqJ,EAAa1R,MAEhB,kBAAC,IAAD,CAAKiS,KAAM,IAAKY,IAElB,kBAAC,KAAD,OC5ON,IAAM4B,GACJ,0CACa,IACX,yBAAK9M,MAAO,CAAEuB,QAAS,KAAvB,kBACkB,IAChB,0BAAMwL,MAAM,YAAY/M,MAAO,CAAEuJ,WAAY,EAAmChI,QAAS,EAAGyL,aAAc,EAAGC,WAAY,WAAzH,kBAEQ,IAJV,MAKM,IACJ,0BAAMF,MAAM,YAAY/M,MAAO,CAAEuJ,WAAY,EAAmChI,QAAS,EAAGyL,aAAc,EAAGC,WAAY,WAAzH,mBAEQ,IARV,8BAWA,yBAAKjN,MAAO,CAAEuB,QAAS,KACrB,0BAAMvB,MAAO,CAAEkN,YAAa,GAAKC,KAAK,MAAMC,aAAW,WAAvD,gBADF,iCAKE,0BAAML,MAAM,YAAY/M,MAAO,CAAEuJ,WAAY,EAAmChI,QAAS,EAAGyL,aAAc,EAAGC,WAAY,WAAzH,mBAEQ,IACR,oCARF,kCAeW,SAAShX,GAAT,GAA8G,IAGvHoX,EAH6BC,EAAyF,EAAzFA,eAAgBC,EAAyE,EAAzEA,QAASnU,EAAgE,EAAhEA,SAAUrD,EAAsD,EAAtDA,OAAQwB,EAA8C,EAA9CA,SAAUc,EAAoC,EAApCA,KAAMmV,EAA8B,EAA9BA,KAAMrU,EAAwB,EAAxBA,MAAOZ,EAAiB,EAAjBA,cAEnG9B,EAAYH,EAAkBiB,GAQ9BgF,GAHJ8Q,EAHEC,IACS7W,EAAYA,EAAU4B,GAAQ,KAKhBgV,EAAS9Q,QAAU,GACxC9E,EAAqBH,EAA2BC,EAAUgF,GAE1DkR,EAA6B/T,mBACjC,kBACE2T,EACI5X,OAAOiY,OAAOL,EAASM,UAAUC,WAAWC,QAC1C,SAAA3S,GAAE,MAAgB,aAAZA,EAAGuN,QAAyB+E,GAAQA,EAAK3T,QAAQqB,EAAG7C,MAAQ,MAEpE,KACN,CAACgV,EAAUG,IApB6G,EAuBhFhX,oBAAS,GAvBuE,mBAuBnHwT,EAvBmH,KAuBlGC,EAvBkG,KAwBpH6D,EAAkBL,EAA2B3Y,KAAI,SAAAoG,GACrD,OA3BgB,SAAAA,GAAE,OAA4B,SAAvBA,EAAGyR,iBAAqD,SAAvBzR,EAAGyR,kBAAoD,IAArBzR,EAAGgQ,OAAOnU,OA2BhGgX,CAAY7S,GAEP,kBAAC,GAAD,CAAiB8C,IAAK9C,EAAG7C,KAAMyR,iBAAkBuD,EAASnS,EAAG7C,MAAO0R,aAAc7O,EAAI8O,gBAAiBA,EAAiBC,eAAgBA,IAI/I,kBAACS,GAAD,CACE1M,IAAK,KAAO9C,EAAG7C,KACfyR,iBAA0C,SAAvB5O,EAAGyR,iBAAqD,SAAvBzR,EAAGyR,gBAA4BU,EAASnS,EAAG7C,MAAMgV,EAASW,QAAQjY,GAAQmF,EAAG7C,MACjI0R,aAAc7O,EACd3D,SAAUA,EACV6B,SAAUA,EACV6Q,eAAgBA,OAKtB,OACE,yBAAKjK,MAAO,CAAE4L,OAAQ,OAAQlH,MAAO,SACnC,kBAAC,IAAD,CACEiB,MACE,6BACGtN,EACD,yBAAK2H,MAAO,CAAEoI,MAAO,UACnB,kBAACW,GAAD,CACExM,QAASA,EACT9C,cAAelC,EACfiC,iBAAkBjC,EAClB0R,gBAAiB1R,EACjB4B,MAAOA,EACPZ,cAAeA,IAEhBgV,IAIP5N,KAAK,QACLK,MAAO,CAAE8D,UAAW,GAAIY,MAAO,QAC/BiE,QAASmF,GAAmBA,EAAgB/W,QAAU,GAErDU,EAAqBqW,EAAkBhB,K,yBC1EjC,SAASmB,GAAK9O,GAAQ,IAAD,EACJ3I,mBAAS,QADL,mBAC3B0X,EAD2B,KAClBC,EADkB,KAG5B1F,EAAO,UAET2F,EAAa,GALiB,WAM1BlW,GACwB,OAA3BiH,EAAMkP,SAASnW,GAAGD,SAA2C,GAA3BkH,EAAMkP,SAASnW,GAAGD,SACrDmW,EAAWzG,KACT,uBAAG3J,IAAKmB,EAAMkP,SAASnW,GAAGjD,IACxB,kBAAC,IAAD,CACE+K,MAAO,CAAC1H,MAAM6G,EAAMkP,SAASnW,GAAGI,OAChCmQ,KAAMA,EACN9I,KAAK,QACL6J,MAAM,QACN/H,QAAS,WACPhJ,OAAOyK,KAAK/D,EAAMkP,SAASnW,GAAGY,UAG/BqG,EAAMkP,SAASnW,GAAGG,SAb7B,IAAI,IAAIH,KAAKiH,EAAMkP,SAAU,EAArBnW,GAoBR,OACE,6BACE,kBAAC,IAAD,CACEyH,KAAK,QACL6J,MAAM,QACN/H,QAAS,WACP0M,EAAW,QAGb,kBAACG,GAAA,EAAD,CAAsBtO,MAAO,CAAE1H,MAAO,aAPxC,IAO+E,oBAAf6G,EAAMhG,MAAuB,EAAIgG,EAAMhG,MAAMiI,QAAQ,IAErH,kBAAC,KAAD,CACEuE,MAAM,UACNwC,QAAqB,OAAZ+F,EACT3F,SAAU,WACR4F,EAAW,SAEb3F,OAAQ,CACN,kBAAC,IAAD,CACExK,IAAI,OACJyD,QAAS,WACP0M,EAAW,UAHf,YAUF,2BACE,kBAAC,IAAD,CACE1F,KAAMA,EACN9I,KAAK,QACL6J,MAAM,QACN/H,QAAS,WACPhJ,OAAOyK,KAAK,2EAA6E/D,EAAM5C,WAGjG,0BAAMyD,MAAO,CAAEqI,aAAc,IAAM8E,KAAK,OACtC,0BAAMA,KAAK,MAAMC,aAAW,WAA5B,6BATJ,SAcF,2BACG,IACD,kBAAC,IAAD,CACE3E,KAAMA,EACN9I,KAAK,QACL6J,MAAM,QACN/H,QAAS,WACP,IAAI8M,KAAe,CACjBC,YAAa,eACbC,YAAa,0CACbC,WAAY,qBACZC,UAAW,MACXC,YAAazP,EAAM5C,UAElBW,GAAG,KAAK,SAAA2O,GAAK,OAAIzV,QAAQC,IAAIwV,MAC7B2B,SAGL,0BAAMxN,MAAO,CAAEqI,aAAc,IAAM8E,KAAK,OACxC,0BAAMA,KAAK,MAAMC,aAAW,WAA5B,6BAjBF,SAuBF,2BACE,kBAAC,IAAD,CACE3E,KAAMA,EACN9I,KAAK,QACL6J,MAAM,QACN/H,QAAS,WACPhJ,OAAOyK,KAAK,2CAGd,0BAAMlD,MAAO,CAAEqI,aAAc,IAAM8E,KAAK,MAAMC,aAAW,QAAzD,gBARF,aAeF,kBAAC,KAAD,MAEA,2CAECgB,ICxGM,SAASS,GAAO1P,GAAQ,IAGjC2P,EAHgC,EACNtY,qBADM,mBAC7B+F,EAD6B,KACpBwS,EADoB,KAKlCD,EADEvS,GAA0C,oBAAxBA,EAAQ+D,YAClB,kBAAC,KAAD,CAAUD,KAAM9D,EAAQ+D,cAAeX,KAAM,EAAGY,MAAO,IAEvD,8BAGZ,IAAMnB,EAAMvB,YAAiBsB,EAAME,YAAa9C,GAE1C2H,EAAgBC,sBAAW,uCAC/B,WAAM9H,GAAN,iBAAAzF,EAAA,yDAC0B,qBAAbyF,EADb,uBAEQE,EAAUF,GACFxC,QAAQ,QAAU,GAAK0C,EAAQ1C,QAAQ,QAAU,GAHjE,0CAKsCsF,EAAME,YAAY3B,YAAYnB,GALpE,QAKc6H,EALd,UAOU7H,EAAU6H,GAPpB,0DAYI2K,EAAWxS,GAZf,0DAD+B,sDAgB/B,CAAC4C,EAAME,YAAaF,EAAMpD,WAGtB6F,EAAKF,GAAWvC,EAAM1F,eAE5B,OACE,8BACE,kBAAC,IAAD,CACEkG,KAAK,QACLuF,YAAa/F,EAAM+F,YAAc/F,EAAM+F,YAAc,eACrDC,OAAQ2J,EAER7S,MAAOmD,GAAO7C,EACdR,SAAU,SAAA1G,GAER6O,EAAc7O,EAAE6K,OAAOjE,QAEzB6P,OACE,kBAAC,KAAD,CAASnG,MAAM,2CACb,kBAAC,IAAD,CACElE,QAAS,WACPG,EAAG,CACDiH,GAAItM,EACJN,MAAO2M,aAAW,SAEpBmG,EAAW,KAEbvF,MAAM,SACNwF,KAAM,kBAAClG,GAAA,EAAD,QAER,kBAAC/C,GAAD,CAAQzN,MAAM,UAAUf,SAAU4H,EAAM1F,cAAe4F,YAAaF,EAAME,YAAalG,MAAOgG,EAAMhG,Y,eC1FjG,SAAS8V,KACtB,OACE,uBAAG9O,KAAK,kDAAkDD,OAAO,SAASE,IAAI,uBAC5E,kBAAC,KAAD,CACEuF,MAAM,4BACNuJ,SAAS,gEACTlP,MAAO,CAAEwB,OAAQ,c,uBCNRvC,KAATD,KCgBO,SAASmQ,GAAShQ,GAE/B,OACE,kBAAC,IAAD,CACEsC,QAAS,WACPhJ,OAAOyK,KAAK,gCAEdvD,KAAK,QACL6J,MAAM,SAEN,0BAAMxJ,MAAO,CAAEkN,YAAa,IAAK,0BAAMC,KAAK,MAAMC,aAAW,YAA5B,iBACP,oBAAlBjO,EAAM/F,SAA0B,EAAIgW,SAASjQ,EAAM/F,SAAU,IAAzB,SAA+B,GAAM,GARnF,K,OCtByBlD,EAAQ,K,GAA7BuU,M,GAAO4E,U,qECQIC,KAAXC,OACStQ,KAATD,KA+eOwQ,I,qBCtfA,SAASC,KAEtB,IAAMC,EAAQjX,OAAO6B,aAAaC,QAAQ,SAFJ,EAGF/D,sBAAUkZ,GAAkB,SAATA,IAHjB,mBAG/BC,EAH+B,KAGnBC,EAHmB,OAIaC,8BAA3CC,EAJ8B,EAI9BA,SAAUC,EAJoB,EAIpBA,aAAsBC,GAJF,EAINC,OAJM,EAIED,QAExCrZ,qBAAU,WACR8B,OAAO6B,aAAaE,QAAQ,QAASuV,KACpC,CAACA,IAYJ,OACE,yBAAKG,UAAU,eAAelQ,MAAO,CAACuE,SAAS,QAAQ4L,MAAM,EAAEC,OAAO,IACpE,0BAAMpQ,MAAO,CAACuB,QAAQ,IAAmB,SAAdwO,EAAwB,eAAO,gBAC1D,kBAAC,KAAD,CAAQM,QAASV,EAAY5T,SAbb,SAACuU,GACnBV,EAAcU,GACdR,EAAS,CAAEJ,MAAOY,EAAYN,EAAOO,KAAOP,EAAOQ,Y,cCRpClB,KAAXC,O,8DCuJOkB,I,0CC/JA,IAAC,+CAAiD,CAAC,KAAO,WAAW,YAAc,iDAAiD,aAAe,yBAAyB,MAAQ,oEAAoE,WAAa,CAAC,CAAC,WAAa,4CAA4C,MAAQ,OAAQ,+CAAiD,CAAC,KAAO,WAAW,YAAc,iDAAiD,aAAe,yBAAyB,MAAQ,oEAAoE,WAAa,CAAC,CAAC,WAAa,4CAA4C,MAAQ,OAAQ,+CAAiD,CAAC,KAAO,WAAW,YAAc,iDAAiD,aAAe,yBAAyB,MAAQ,oEAAoE,WAAa,CAAC,CAAC,WAAa,4CAA4C,MAAQ,OAAQ,+CAAiD,CAAC,KAAO,WAAW,YAAc,iDAAiD,aAAe,yBAAyB,MAAQ,oEAAoE,WAAa,CAAC,CAAC,WAAa,4CAA4C,MAAQ,OAAQ,+CAAiD,CAAC,KAAO,WAAW,YAAc,iDAAiD,aAAe,yBAAyB,MAAQ,oEAAoE,WAAa,CAAC,CAAC,WAAa,4CAA4C,MAAQ,OAAQ,+CAAiD,CAAC,KAAO,iCAAiC,YAAc,UAAU,aAAe,yBAAyB,MAAQ,wEAAwE,WAAa,CAAC,CAAC,WAAa,4CAA4C,MAAQ,OAAO,+CAAiD,CAAC,KAAO,oBAAoB,YAAc,mBAAmB,aAAe,yBAAyB,MAAQ,wEAAwE,WAAa,CAAC,CAAC,WAAa,4CAA4C,MAAQ,OAAO,+CAAiD,CAAC,KAAO,eAAe,YAAc,4BAA4B,aAAe,yBAAyB,MAAQ,wEAAwE,WAAa,CAAC,CAAC,WAAa,4CAA4C,MAAQ,OAAO,+CAAiD,CAAC,KAAO,cAAc,YAAc,sBAAsB,aAAe,yBAAyB,MAAQ,gEAAgE,WAAa,CAAC,CAAC,WAAa,4CAA4C,MAAQ,QCuB73FC,GAAexa,EAAQ,MAAvBwa,WAGFC,GADUza,EAAQ,KACX0a,CAAQ,CAACC,KAAM,iBAAkBC,KAAM,OAAQC,SAAU,UAEtE3a,QAAQC,IAAI,wBAAc2a,IAuB1B,IAAMC,GAAgB9Y,EAAQ,KAMxB+Y,GAAgB,CACpB,YAAe,yBACf,aAAgB,kDAChB,MAAS,0DACT,KAAQ,UACR,WAAc,CACX,CACE,WAAc,kBACd,MAAS,SAEX,CACE,WAAc,OACd,MAAS,YAOVC,GAAW,uCAAG,WAAMC,GAAN,2CAAAxa,EAAA,uFACO+Z,GAAKU,IAAID,IADhB,4HACDE,EADC,EAEhBlb,QAAQC,IAAIib,EAAKC,MACZD,EAAKE,QAHM,wDAIVA,EAAU,IAAId,GAJJ,kCAKUY,EAAKE,SALf,4HAKCC,EALD,EAMdD,EAAQE,OAAOD,GAND,0TAQhBrb,QAAQC,IAAImb,GARI,kBASTA,GATS,+YAAH,sDAcPpb,QAAQC,IAAI,+CAKtB,IAAMsb,GAAsB,IAAIC,IAAgB,oCAC1CC,GAAgB,IAAID,IAAgB,gCAAkC9Z,GAItEga,GAAmBb,GAAczY,OAEjCuZ,GAA0BC,oHAAYC,mBAAqBD,oHAAYC,mBAAqBH,GACxF1b,QAAQC,IAAI,uCAA8B0b,IACpD,IAAMtY,GAAgB,IAAImY,IAAgBG,IAIpCxZ,GAAgB0Y,GAAc1Y,cA2jBpC,IAAM2Q,GAAY,IAAIgJ,IAAU,CAE9BC,eAAe,EACfC,gBAAiB,CACfC,cAAe,CACbC,QAASC,IACTxQ,QAAS,CACPyQ,SAAU1a,OAMZsR,GAAiB,uCAAG,sBAAAxS,EAAA,sEAClBsS,GAAUuJ,sBADQ,OAExBtW,YAAW,WACT1D,OAAOC,SAASuP,WACf,GAJqB,2CAAH,qDAOtBxP,OAAOia,UAAYja,OAAOia,SAASxV,GAAG,gBAAgB,SAAAjF,GACrDkE,YAAW,WACT1D,OAAOC,SAASuP,WACf,MAGU0K,OAllBf,SAAaxT,GAEX,IAAM8J,EAAmB0I,IAAuBA,GAAoB3W,SAAY2W,GAAsBE,GAC5Fzb,QAAQC,IAAI,+BAAqB4S,GAHzB,MAK8BzS,qBAL9B,mBAKXgD,EALW,KAKOoZ,EALP,KAOZzZ,EClHO,SAA0B8X,EAAehI,EAAiBpN,GAAW,IAAD,EACvDrF,mBAAS,GAD8C,mBAC1E2C,EAD0E,KACnE0Z,EADmE,KAsBjF,OAFA5X,aAjBkB,WAAM,4CACtB,gCAAArE,EAAA,0DACKqa,EAAc9X,MADnB,gBAEI0Z,EAAS5B,EAAc9X,OAF3B,8BAIU2Z,EAAM,IAAIC,IACd9J,EAAgBnH,QAAUmH,EAAgBnH,QAAQ7J,QAAU,EAC5D,6CACA,IAPN,SASuB+a,IAAQC,cAAcH,EAAKI,IAAKJ,EAAI7a,SAAUgR,GATrE,OASUkK,EATV,OAUUC,EAAQ,IAAIC,IAAM,CAACF,GAAOD,IAAKJ,EAAI7a,UACzC4a,EAAS7R,WAAWoS,EAAME,SAASC,cAAc,KAXrD,6CADsB,uBAAC,WAAD,wBAetBC,KAEmB3X,GAAY,MAE1B1C,ED4FOsa,CAAiBxC,GAAchI,GAGvC7P,EErHO,SAAqB6X,EAAcyC,GAAQ,IAAD,EACvBld,qBADuB,mBAChD4C,EADgD,KACtCua,EADsC,KAEjDC,EAAY,uCAAG,sBAAAhd,EAAA,sDAChBqa,EAAc7X,SACfua,EAAY1C,EAAc7X,UAE1Bya,IACGxC,IAAI,kDACJtS,MAAK,SAAA+U,GACJ,IAAMC,EAA+C,IAAjCD,EAASE,KAAKN,GAAS,QACvCK,IAAgB3a,GAClBua,EAAYI,MAGfE,OAAM,SAAA5V,GAAK,OAAIjI,QAAQC,IAAIgI,MAZb,2CAAH,qDAiBlB,OADApD,YAAU2Y,EAAc,OACjBxa,EFkGU8a,CAAYjD,GAAc,QAErCjI,EAAezP,EAAgBC,EAAkBC,IACjD8C,EAAU4J,YAAe6C,GACrB5S,QAAQC,IAAI,mDAA0BkG,GAGhD,IAAI4X,EAAe1a,IAAiBA,GAAcuB,UAAYvB,GAAcuB,SAAS/C,QAC3E7B,QAAQC,IAAI,4BAAkB8d,GAExC,IAAIC,EAAkBpL,GAAgBA,EAAahO,UAAYgO,EAAahO,SAAS/C,QAC3E7B,QAAQC,IAAI,8DAA2B+d,GAKjD,IAAMxS,EAAKF,GAAWsH,EAAc5P,GAG9Bib,EAAW3S,GAAWjI,GAAeL,GAGrCkb,EAAmBhY,EAAW7C,GAAe8C,GACzCnG,QAAQC,IAAI,gCAAsBie,EAAiBnT,aAAYmT,GAAkB,OAG3F,IAAMC,EAAqBjY,EAAW2M,EAAiB1M,GAC7CnG,QAAQC,IAAI,kCAAwBke,EAAmBpT,aAAYoT,GAAoB,OAGjG,IAAMC,EAAgBle,EAAkBmD,IAC9BrD,QAAQC,IAAI,6BAAmBme,GAGzC,IAAMC,EAAiBne,EAAkB0S,GAC/B5S,QAAQC,IAAI,8BAAoBoe,GAK1C,IAAMC,EG1IO,SAAmCnd,EAAUgF,EAASoY,EAAKC,GAAmB,IAAD,EAC1Dpe,qBAD0D,mBACnF6W,EADmF,KACzEwH,EADyE,KA0B1F,OAxBAle,qBAAU,WAAM,4CACd,gCAAAC,EAAA,yDAC0B,qBAAbW,IAA4BgF,IAAWoY,EADpD,0CAK6Bpd,EAASV,eALtC,OAKYC,EALZ,OAOQf,EADEe,GAAYA,EAASC,OAAS,EACvBQ,EAASP,YAETO,EAGL+V,EAAiB,IAAIrX,IAASsG,EAASoY,EAAK5e,GAC/C6e,IAAkBtH,EAAenX,SAAWye,GAE/CC,EAAYvH,GAflB,kDAiBMlX,QAAQC,IAAI,sCAAsCkG,EAAQ,wCAA1D,MAjBN,2DADc,uBAAC,WAAD,wBAsBd1G,KACC,CAAC0B,EAAUgF,EAASoY,EAAKC,IACrBvH,EHgHoByH,CAA0B7L,E/BrJ5B,6C+BqJ0DlR,GACnF3B,QAAQC,IAAI,wCAA8Bqe,GAG1C,IAAMK,EAAsBrZ,EAAkB,CAACoX,IAAK4B,GAAoB,MAAO,YAAY,CAAC,+CAC5Fte,QAAQC,IAAI,oCAA0B0e,GAItC,IAAMvY,EAAUd,EAAkB8Y,EAAc,kBAAmB,YAAa,CAAEjY,IAClFnG,QAAQC,IAAI,wBAAcmG,GAG1B,IAAMwY,EAAiBpY,EAAiB4X,EAAe,kBAAmB,WAAY/a,GAAe,GACrGrD,QAAQC,IAAI,gCAAsB2e,GAElC,IAAMC,EAAerY,EAAiB4X,EAAe,kBAAmB,SAAU/a,GAAe,GAE3Fyb,EAAaxZ,EAAkB8Y,EAAc,kBAAmB,SAKhEW,GAAc3Y,GAAWA,EAAQmN,UAAYnN,EAAQmN,WAzEzC,GA0EgCnT,qBA1EhC,qBA0EV4e,GA1EU,MA0EQC,GA1ER,MA4ElB1e,qBAAU,YACoB,uCAAG,wCAAAC,EAAA,sDACzB0e,EAAoB,GAChBC,EAAW,EAFU,YAERA,EAAW/Y,GAFH,iCAIzBpG,QAAQC,IAAI,sBAAsBkf,GAJT,SAKHf,EAAcgB,gBAAgBC,oBAAoBlZ,EAASgZ,GALxD,cAKnBG,EALmB,OAMzBtf,QAAQC,IAAI,UAAUqf,GANG,UAOFlB,EAAcgB,gBAAgBG,SAASD,GAPrC,eAOnBC,EAPmB,OAQzBvf,QAAQC,IAAI,WAAWsf,GAEjBC,EAAYD,EAAS1b,QAAQ,wBAAwB,IAC3D7D,QAAQC,IAAI,WAAWuf,GAXE,UAaQzE,GAAYyE,GAbpB,QAanBC,EAbmB,OAezB,IACQC,EAAe3X,KAAKC,MAAMyX,EAAmBE,YACnD3f,QAAQC,IAAI,eAAeyf,GAC3BR,EAAkB3N,KAAlB,aAAyB1S,GAAGygB,EAASM,IAAIL,EAAUM,MAAO1Z,GAAYuZ,IACvE,MAAMzgB,GAAGe,QAAQC,IAAIhB,GAnBG,kDAqBjBe,QAAQC,IAAR,MArBiB,QAEWkf,IAFX,uBAuB7BF,GAAoBC,GAvBS,0DAAH,qDAyB5BY,KACA,CAAE3Z,EAAS4Y,KAQb,IAAIgB,GAAiB,GAEnBA,GADChC,GAAgBC,GAAmBD,GAAgBC,EAElD,yBAAKpU,MAAO,CAACsE,OAAO,EAAGC,SAAS,WAAY4L,MAAM,EAAE1L,IAAI,GAAGlD,QAAQ,KACjE,kBAAC,IAAD,CACE8B,QAAS,6BACTC,YACE,yCACW,2BAAItL,EAAQoc,GAAiB/b,MADxC,mCACiF,2BAAIL,EAAQmc,GAAc9b,MAD3G,KAIFoQ,KAAK,QACL2N,UAAU,KAMd,yBAAKpW,MAAO,CAACsE,QAAQ,EAAGC,SAAS,WAAY4L,MAAM,IAAI1L,IAAI,GAAGlD,QAAQ,GAAGjJ,MAAM2Y,GAAc3Y,QAC1F2Y,GAAc5Y,MAKrB,IAAM8Q,GAAgBhF,sBAAW,sBAAC,4BAAAvN,EAAA,sEACTsS,GAAU8E,UADD,OAC1BzW,EAD0B,OAEhCqb,EAAoB,IAAI/X,IAAatD,IAFL,2CAG/B,CAACqb,IAEJjc,qBAAU,WACJuS,GAAUI,gBACZH,OAED,CAACA,KAhJc,OAkJQ3S,qBAlJR,qBAkJX4c,GAlJW,MAkJJiD,GAlJI,MAmJlB1f,qBAAU,WACR0f,GAAS5d,OAAOC,SAASkB,YACxB,CAACyc,KAEJ,IAAIC,GAAa,GACXC,GAAkB9c,IAAiBA,GAAckB,YAAclB,GAAckB,WAAWC,KAAOnB,GAAckB,WAAWC,IAAIf,QAAQpB,OAAOC,SAASC,WAAW,IAAMqZ,oHAAYC,oBAAsB9Y,EAAQ,EAxJnM,GA0J0B3C,oBAAU,GA1JpC,qBA0JVggB,GA1JU,MA0JKC,GA1JL,OA2JdD,IAAe/c,IAAeA,GAAcuB,UAA0C,OAAhCvB,GAAcuB,SAAS/C,SAAgBqc,GAAkBnT,aAAYmT,IAAmB,IAChJgC,GACE,yBAAKtW,MAAO,CAACuB,QAAQ,KACnB,kBAAC,IAAD,CAAQkH,KAAM,UAAWhH,QAAS,WAChC4S,EAAS,CACPxL,GAAItM,EACJN,MAAO2M,aAAW,UAEpB6N,IAAiB,KALnB,0DA9JY,OA4KgBjgB,mBAAU0a,IA5K1B,qBA4KVwF,GA5KU,MA4KAC,GA5KA,SA6KcngB,qBA7Kd,qBA6KVogB,GA7KU,MA6KDC,GA7KC,SA8KgBrgB,qBA9KhB,qBA8KVof,GA9KU,MA8KAkB,GA9KA,SA+KwBtgB,qBA/KxB,qBA+KVugB,GA/KU,MA+KIC,GA/KJ,SAiLsBxgB,qBAjLtB,qBAiLGygB,IAjLH,gBAkLsBzgB,qBAlLtB,qBAkLV0gB,GAlLU,MAkLGC,GAlLH,SAoLsC3gB,mBAAS,IApL/C,qBAoLV4gB,GApLU,MAoLWC,GApLX,SAsLwB7gB,qBAtLxB,qBAsLV8gB,GAtLU,MAsLIC,GAtLJ,MAuLlB5gB,qBAAU,WACR,IAAMuf,EAAsB,uCAAG,mBAAAtf,EAAA,iBAAAA,EAAA,sDACzB4gB,EAAc,GADW,OAAA5gB,EAAA,KAEhBoa,IAFgB,qDAErBpa,EAFqB,6BAIH4d,EAAcgB,gBAAgBiC,QAAQhN,SAAMxV,GAAG2B,IAJ5C,cAInB6gB,EAJmB,iBAKMjD,EAAcgB,gBAAgBkC,iBAAiBjN,SAAMxV,GAAG2B,IAL9D,WAKnB8gB,EALmB,OAMrBzB,OANqB,EAOrBwB,EAPqB,kCAQDjD,EAAcgB,gBAAgBmC,aAAalN,SAAMxV,GAAG2B,IARnD,eAQjB8e,EARiB,iBASTlB,EAAcgB,gBAAgBoC,QAAQlC,GAT7B,QASvBO,EATuB,eAWzBuB,EAAY7P,KAAZ,yBAAkB1S,GAAG2B,GAAKoa,GAAOpa,IAAjC,IAAoC6gB,QAAQA,EAAQC,iBAAiBA,EAAiBzB,MAAMA,KAXnE,kDAYjB7f,QAAQC,IAAR,MAZiB,+BAc7BkhB,GAAgBC,GAda,0DAAH,qDAgBzBhD,GAAiBA,EAAcgB,iBAAiBU,MAClD,CAAElF,GAAQwD,EAAeQ,EAAgBC,IAE5C,IAAI4C,GAAc,GA3MA,YA4MVjhB,GACNR,QAAQC,IAAI,eAAeO,EAAE0gB,GAAa1gB,IAE1C,IAAIkhB,EAAc,GAEfR,GAAa1gB,GAAG6gB,QACjBK,EAAYnQ,KACV,6BACE,kBAAC,IAAD,CAAQlG,QAAS,WACfrL,QAAQC,IAAI,YAAY+C,GACxBwI,EAAI6S,EAAee,gBAAgBuC,SAAST,GAAa1gB,GAAG3B,GAAG,CAACgH,MAAOiZ,OAFzE,WAUJ4C,EAAYnQ,KACV,0CACY,kBAACzI,GAAD,CACR3C,QAAS+a,GAAa1gB,GAAGqf,MACzB5W,YAAa4J,EACb1Q,cAAeA,GACfwH,WAAW,MAKbuX,GAAa1gB,GAAGqf,OAAS1Z,GAAY+a,GAAa1gB,GAAG8gB,iBAShDJ,GAAa1gB,GAAGqf,OAAS1Z,GAAW+a,GAAa1gB,GAAG8gB,iBAC3DI,EAAYnQ,KACV,kBAAC,IAAD,CAAQlG,QAAS,WACfG,EAAI6S,EAAee,gBAAgBwC,eAAeV,GAAa1gB,GAAG3B,GAAG,CAACmE,SAASA,OADjF,iBAOKke,GAAa1gB,GAAG8gB,iBACvBI,EAAYnQ,KACV,kBAAC,IAAD,CAAQlG,QAAS,WACfG,EAAI6S,EAAee,gBAAgByC,QAAQX,GAAa1gB,GAAG3B,GAAG,CAACgH,MAAOiZ,OADxE,QAQF4C,EAAYnQ,KACV,8CA5BFmQ,EAAYnQ,KACV,kBAAC,IAAD,CAAQlG,QAAS,WACfG,EAAI6S,EAAee,gBAAgB0C,SAASZ,GAAa1gB,GAAG3B,GAAG,CAACmE,SAASA,OAD3E,UAgCNye,GAAYlQ,KACV,kBAAC,IAAD,CAAM3H,MAAO,CAAC0E,MAAM,KAAM1G,IAAKsZ,GAAa1gB,GAAGyB,KAC7C8f,QAASL,EACTnS,MACE,6BACG2R,GAAa1gB,GAAGyB,KADnB,IACyB,uBAAG2H,MAAO,CAACwB,OAAO,UAAUgJ,QAAQ,KAAOrK,KAAMmX,GAAa1gB,GAAGwhB,aAAclY,OAAO,UAAS,kBAACmY,EAAA,EAAD,SAI1H,yBAAKrY,MAAO,CAACsY,SAAS,KAAMC,IAAKjB,GAAa1gB,GAAG4hB,QACjD,yBAAKxY,MAAO,CAACwK,QAAQ,MAClB8M,GAAa1gB,GAAG0M,gBA1EzB,IAAI,IAAI1M,MAAK0gB,GAAc,GAAnB1gB,IAgFR,OACE,yBAAKsZ,UAAU,OAGb,kBAACjB,GAAD,MACCkH,GAED,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAMnW,MAAO,CAAEuK,UAAU,UAAYkO,aAAc,CAACrF,IAAQ9N,KAAK,cAC/D,kBAAC,IAAKoT,KAAN,CAAW1a,IAAI,KACb,kBAAC,IAAD,CAAMyD,QAAS,WAAK4U,GAAS,MAAOxN,GAAG,KAAvC,YAEF,kBAAC,IAAK6P,KAAN,CAAW1a,IAAI,qBACb,kBAAC,IAAD,CAAMyD,QAAS,WAAK4U,GAAS,sBAAuBxN,GAAG,qBAAvD,qBAEF,kBAAC,IAAK6P,KAAN,CAAW1a,IAAI,cACb,kBAAC,IAAD,CAAMyD,QAAS,WAAK4U,GAAS,eAAgBxN,GAAG,cAAhD,cAEF,kBAAC,IAAK6P,KAAN,CAAW1a,IAAI,WACb,kBAAC,IAAD,CAAMyD,QAAS,WAAK4U,GAAS,YAAaxN,GAAG,WAA7C,gBAEF,kBAAC,IAAK6P,KAAN,CAAW1a,IAAI,aACb,kBAAC,IAAD,CAAMyD,QAAS,WAAK4U,GAAS,cAAexN,GAAG,aAA/C,kBAEF,kBAAC,IAAK6P,KAAN,CAAW1a,IAAI,mBACb,kBAAC,IAAD,CAAMyD,QAAS,WAAK4U,GAAS,oBAAqBxN,GAAG,mBAArD,qBAIJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8P,OAAK,EAACpH,KAAK,KAOhB,yBAAKvR,MAAO,CAAEsY,SAAS,IAAK1M,OAAQ,OAAQ9H,UAAU,GAAI8U,cAAc,MACtE,qCAAW1D,GAAc/T,aAAY+T,GAArC,WACA,kBAAC,KAAD,CACE2D,YAAa,IACbC,YAAa,GACbC,aAAc,IAEblB,MAMP,kBAAC,IAAD,CAAOtG,KAAK,qBACV,yBAAKvR,MAAO,CAAE0E,MAAM,IAAKkH,OAAQ,OAAQ9H,UAAU,GAAI8U,cAAc,KACnE,kBAAC,IAAD,CACErM,UAAQ,EACRyM,WAAY5D,GACZ6D,WAAY,SAAC/a,GACX,IAAMjJ,EAAKiJ,EAAKjJ,GAAG0U,WACnB,OACE,kBAAC,IAAK+O,KAAN,CAAW1a,IAAK/I,EAAG,IAAIiJ,EAAK8X,IAAI,IAAI9X,EAAK+X,OACvC,kBAAC,IAAD,CAAMtQ,MACJ,6BACE,0BAAM3F,MAAO,CAACU,SAAS,GAAIwM,YAAY,IAAvC,IAA6CjY,GAD/C,IAC2DiJ,EAAK7F,OAGhE,6BAAK,yBAAKkgB,IAAKra,EAAKsa,MAAOxY,MAAO,CAACsY,SAAS,QAC5C,6BAAMpa,EAAKoF,cAGb,uCACS,kBAACpE,GAAD,CACH3C,QAAS2B,EAAK+X,MACd5W,YAAa4J,EACb1Q,cAAeA,GACfmI,SAAU,KAEd,kBAAC+C,GAAD,CACEpE,YAAa4J,EACb/D,YAAY,sBACZjJ,MAAOmb,GAAoBniB,GAC3B8G,SAAU,SAACM,GACT,IAAI6c,EAAS,GACbA,EAAOjkB,GAAMoH,EACbgb,GAAuB,2BAAKD,IAAwB8B,OAGxD,kBAAC,IAAD,CAAQzX,QAAS,WACfrL,QAAQC,IAAI,iBAAiBoe,GAC7B7S,EAAI6S,EAAee,gBAAgB2D,aAAa5c,EAAS6a,GAAoBniB,GAAKA,MAFpF,mBAcd,kBAAC,IAAD,CAAOsc,KAAK,cACV,yBAAKvR,MAAO,CAAE0E,MAAM,IAAKkH,OAAQ,OAAQ9H,UAAU,GAAI8U,cAAc,KACnE,kBAAC,IAAD,CACErM,UAAQ,EACRyM,WAAYhE,EACZiE,WAAY,SAAC/a,GACX,OACE,kBAAC,IAAKwa,KAAN,CAAW1a,IAAKE,EAAK,GAAG,IAAIA,EAAK,GAAG,IAAIA,EAAKf,YAAY,IAAIe,EAAK,GAAGyL,YACnE,0BAAM3J,MAAO,CAACU,SAAS,GAAIwM,YAAY,IAAvC,IAA6ChP,EAAK,GAAGyL,YACrD,kBAACzK,GAAD,CACI3C,QAAS2B,EAAK,GACdmB,YAAa4J,EACbvI,SAAU,KALhB,MAOE,kBAACxB,GAAD,CACI3C,QAAS2B,EAAK,GACdmB,YAAa4J,EACbvI,SAAU,SAOtB,kBAAC,IAAD,CACE6L,UAAQ,EACRyM,WAAY/D,EACZgE,WAAY,SAAC/a,GACX,OACE,kBAAC,IAAKwa,KAAN,CAAW1a,IAAKE,EAAK,GAAG,IAAIA,EAAK,GAAG,IAAIA,EAAKf,aAC3C,0BAAM6C,MAAO,CAACU,SAAS,GAAIwM,YAAY,IAAvC,IAA6ChP,EAAK,GAAGyL,YACrD,kBAACzK,GAAD,CACI3C,QAAS2B,EAAK,GACdmB,YAAa4J,EACbvI,SAAU,KALhB,MAOGxC,EAAK,SAQlB,kBAAC,IAAD,CAAOqT,KAAK,WACV,yBAAKvR,MAAO,CAAEoZ,WAAW,GAAI1U,MAAM,IAAKkH,OAAO,OAAQrB,UAAU,SAC/D,kBAAC,KAAD,CACEvK,MAAO,CAAEuB,QAAQ,GACjBgX,IAAK7B,GACLhH,MAAO,MACP2J,iBAAiB,EACjBC,OAAQ,SAACC,EAAK3iB,GACZ+f,GAAY4C,EAAKC,cAEnBC,MAAO,SAACC,EAAI9iB,GACV+f,GAAY+C,EAAIF,cAElBG,SAAU,SAACC,EAAIhjB,GACb+f,GAAYiD,EAAIJ,iBAKtB,kBAAC,IAAD,CAAQxZ,MAAO,CAAC4L,OAAO,GAAIjD,QAASiO,GAASjX,KAAK,QAAQ6J,MAAM,QAAQf,KAAK,UAAUhH,QAAO,sBAAE,4BAAA7K,EAAA,6DAC5FR,QAAQC,IAAI,eAAeqgB,IAC3BG,IAAW,GACXC,KAH4F,SAIvEnG,GAAK+I,IAAIvb,KAAKO,UAAUgY,KAJ+C,QAItFhU,EAJsF,SAK/EA,EAAO6O,MAClBuF,GAAYpU,EAAO6O,MAErBsF,IAAW,GACXzgB,QAAQC,IAAI,UAAUqM,GATsE,4CAAhG,kBAYA,yBAAM1C,MAAO,CAACuB,QAAQ,GAAGqX,cAAc,MACpChD,KAIL,kBAAC,IAAD,CAAOrE,KAAK,aACR,yBAAKvR,MAAO,CAAEoZ,WAAW,GAAI1U,MAAM,IAAKkH,OAAO,SAC7C,kBAAC,IAAD,CACE3P,MAAO8a,GACP8C,YAAa,kEACb9d,SAAU,SAAC1G,GACT2hB,GAAgB3hB,EAAE6K,OAAOjE,WAI/B,kBAAC,IAAD,CAAQ+D,MAAO,CAAC4L,OAAO,GAAIjD,QAASiO,GAASjX,KAAK,QAAQ6J,MAAM,QAAQf,KAAK,UAAUhH,QAAO,sBAAE,4BAAA7K,EAAA,6DAC5FR,QAAQC,IAAI,iBAAiB0gB,IAC7BE,IAAe,GACfE,KAH4F,SAIvEhG,GAAY4F,IAJ2D,QAItFrU,EAJsF,SAK/EA,EAAOqT,UAClBoB,GAAezU,EAAOqT,YAExBkB,IAAe,GAR6E,4CAAhG,sBAWA,yBAAMjX,MAAO,CAACuB,QAAQ,GAAImD,MAAM,IAAKkH,OAAO,OAAOgN,cAAc,MAC9D1B,KAGP,kBAAC,IAAD,CAAO3F,KAAK,mBACR,kBAACtb,GAAD,CACEoC,KAAK,kBACLtC,OAAQiT,EAAahS,YACrBO,SAAUkC,GACV8C,QAASA,EACThE,cAAeA,QAMzB,kBAAC,GAAD,MAIA,yBAAKyH,MAAO,CAAEuE,SAAU,QAASgG,UAAW,QAAS4F,MAAO,EAAG1L,IAAK,EAAGlD,QAAS,KAC7E,kBAACwH,GAAD,CACExM,QAASA,EACT9C,cAAeA,GACfuP,aAAcA,EACdC,gBAAiBA,EACjB9P,MAAOA,EACP+P,UAAWA,GACXC,cAAeA,GACfC,kBAAmBA,GACnB7Q,cAAeA,KAEhB+d,IAIH,yBAAKtW,MAAO,CAAEuE,SAAU,QAASgG,UAAW,OAAQ/F,KAAM,EAAG4L,OAAQ,GAAI7O,QAAS,KAChF,kBAAC,IAAD,CAAKuY,MAAM,SAASC,OAAQ,CAAC,EAAG,IAC9B,kBAAC,IAAD,CAAKzP,KAAM,GACT,kBAAC2D,GAAD,CAAM9U,MAAOA,EAAOoD,QAASA,EAAS8R,SAAUlW,KAGlD,kBAAC,IAAD,CAAKmS,KAAM,EAAGtK,MAAO,CAAEuK,UAAW,SAAUC,QAAS,KACnD,kBAAC2E,GAAD,CAAU/V,SAAUA,KAEtB,kBAAC,IAAD,CAAKkR,KAAM,EAAGtK,MAAO,CAAEuK,UAAW,SAAUC,QAAS,IACnD,kBAAC,IAAD,CACE/I,QAAS,WACPhJ,OAAOyK,KAAK,iDAEdvD,KAAK,QACL6J,MAAM,SAEN,0BAAMxJ,MAAO,CAAEkN,YAAa,GAAKC,KAAK,MAAMC,aAAW,WAAvD,gBAPF,aAeJ,kBAAC,IAAD,CAAK0M,MAAM,SAASC,OAAQ,CAAC,EAAG,IAC9B,kBAAC,IAAD,CAAKzP,KAAM,IAGPiM,GACE,kBAAC1H,GAAD,CAAQpV,cAAeA,GAAeN,MAAOA,EAAOkG,YAAa4J,IAEjE,QIhpBX+G,GAAS,CACbO,KAAK,GAAD,OAAKyB,IAAL,mBACJxB,MAAM,GAAD,OAAKwB,IAAL,qBAGDgI,GAAYvhB,OAAO6B,aAAaC,QAAQ,SAE1C0f,GAAc,kEAEZC,GAAS,IAAIC,eAAa,CAC9BnE,IAAKiE,GACLG,MAAO,IAAIC,kBAGbC,IAASC,OACP,kBAAC,iBAAD,CAAgBL,OAAQA,IACtB,kBAAC,yBAAD,CAAuBM,SAAUxK,GAAQyK,aAAcT,IAAwB,SAC7E,kBAAC,GAAD,CAAKC,YAAaA,OAGtBS,SAASC,eAAe,U,oBC5B1B,IAAI7lB,EAAM,CACT,2BAA4B,MAI7B,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,oBCtBpB,IAAIH,EAAM,CACT,gCAAiC,MAIlC,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K","file":"static/js/main.cb72f468.chunk.js","sourcesContent":["var map = {\n\t\"./YourCollectible.address.js\": 1236\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1235;","module.exports = \"0xE6A553033Fd4664385F9d2b33c5E1CE65F5Ca9c4\";","module.exports = [\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes32[]\",\n        \"name\": \"assetsForSale\",\n        \"type\": \"bytes32[]\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"sender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"action\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"Action\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"approved\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"bool\",\n        \"name\": \"approved\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"ApprovalForAll\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"baseURI\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"tokenURI\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"buyItem\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"tokenURI\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"cancelSellItem\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"name\": \"forSale\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"name\": \"forSecondarySale\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"getApproved\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"isApprovedForAll\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"tokenURI\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"mintItem\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ownerOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"price\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"safeTransferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"_data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"safeTransferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"tokenURI\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"sellItem\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"approved\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"setApprovalForAll\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes4\",\n        \"name\": \"interfaceId\",\n        \"type\": \"bytes4\"\n      }\n    ],\n    \"name\": \"supportsInterface\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"index\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"tokenByIndex\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"index\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"tokenOfOwnerByIndex\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"tokenURI\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"name\": \"uriToTokenId\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n];","module.exports = \"0x60806040523480156200001157600080fd5b50604051620029f8380380620029f8833981810160405260208110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82518660208202830111640100000000821117156200008c57600080fd5b82525081516020918201928201910280838360005b83811015620000bb578181015183820152602001620000a1565b505050509050016040525050506040518060400160405280600f81526020016e596f7572436f6c6c65637469626c6560881b815250604051806040016040528060038152602001622ca1a160e91b815250620001246301ffc9a760e01b6200029260201b60201c565b81516200013990600690602085019062000330565b5080516200014f90600790602084019062000330565b506200016b6380ac58cd60e01b6001600160e01b036200029216565b62000186635b5e139f60e01b6001600160e01b036200029216565b620001a163780e9d6360e01b6001600160e01b036200029216565b505060408051808201909152601581527f68747470733a2f2f697066732e696f2f697066732f00000000000000000000006020820152620001eb906001600160e01b036200031716565b60005b81518110156200027d576001600c60008484815181106200020b57fe5b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600d60008484815181106200024b57fe5b6020908102919091018101518252810191909152604001600020805460ff1916911515919091179055600101620001ee565b505068056bc75e2d63100000600b55620003d5565b6001600160e01b03198082161415620002f2576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b80516200032c90600990602084019062000330565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200037357805160ff1916838001178555620003a3565b82800160010185558215620003a3579182015b82811115620003a357825182559160200191906001019062000386565b50620003b1929150620003b5565b5090565b620003d291905b80821115620003b15760008155600101620003bc565b90565b61261380620003e56000396000f3fe6080604052600436106101665760003560e01c80636c0360eb116100d1578063b7416f2a1161008a578063c87b56dd11610064578063c87b56dd146107c3578063cc82bf0d146107ed578063e105b30014610817578063e985e9c5146108c857610166565b8063b7416f2a14610624578063b88d4fde1461064e578063c75458491461071f57610166565b80636c0360eb1461054d57806370a082311461056257806395d89b4114610595578063a035b1fe146105aa578063a22cb465146105bf578063ae374b99146105fa57610166565b806323b872dd1161012357806323b872dd146103895780632f745c59146103cc57806342842e0e146104055780634f1d762f146104485780634f6ccce7146104f95780636352211e1461052357610166565b806301ffc9a71461016b57806306fdde03146101b3578063081812fc1461023d578063095ea7b31461028357806313f19926146102be57806318160ddd14610374575b600080fd5b34801561017757600080fd5b5061019f6004803603602081101561018e57600080fd5b50356001600160e01b031916610903565b604080519115158252519081900360200190f35b3480156101bf57600080fd5b506101c8610926565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102025781810151838201526020016101ea565b50505050905090810190601f16801561022f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561024957600080fd5b506102676004803603602081101561026057600080fd5b50356109bd565b604080516001600160a01b039092168252519081900360200190f35b34801561028f57600080fd5b506102bc600480360360408110156102a657600080fd5b506001600160a01b038135169060200135610a1f565b005b610362600480360360208110156102d457600080fd5b810190602081018135600160201b8111156102ee57600080fd5b82018360208201111561030057600080fd5b803590602001918460018302840111600160201b8311171561032157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610afa945050505050565b60408051918252519081900360200190f35b34801561038057600080fd5b50610362610c42565b34801561039557600080fd5b506102bc600480360360608110156103ac57600080fd5b506001600160a01b03813581169160208101359091169060400135610c53565b3480156103d857600080fd5b50610362600480360360408110156103ef57600080fd5b506001600160a01b038135169060200135610caa565b34801561041157600080fd5b506102bc6004803603606081101561042857600080fd5b506001600160a01b03813581169160208101359091169060400135610cdb565b34801561045457600080fd5b506103626004803603602081101561046b57600080fd5b810190602081018135600160201b81111561048557600080fd5b82018360208201111561049757600080fd5b803590602001918460018302840111600160201b831117156104b857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610cf6945050505050565b34801561050557600080fd5b506103626004803603602081101561051c57600080fd5b5035610e47565b34801561052f57600080fd5b506102676004803603602081101561054657600080fd5b5035610e63565b34801561055957600080fd5b506101c8610e91565b34801561056e57600080fd5b506103626004803603602081101561058557600080fd5b50356001600160a01b0316610ef2565b3480156105a157600080fd5b506101c8610f5a565b3480156105b657600080fd5b50610362610fbb565b3480156105cb57600080fd5b506102bc600480360360408110156105e257600080fd5b506001600160a01b0381351690602001351515610fc1565b34801561060657600080fd5b5061019f6004803603602081101561061d57600080fd5b50356110c6565b34801561063057600080fd5b506103626004803603602081101561064757600080fd5b50356110db565b34801561065a57600080fd5b506102bc6004803603608081101561067157600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b8111156106ab57600080fd5b8201836020820111156106bd57600080fd5b803590602001918460018302840111600160201b831117156106de57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506110ed945050505050565b6103626004803603602081101561073557600080fd5b810190602081018135600160201b81111561074f57600080fd5b82018360208201111561076157600080fd5b803590602001918460018302840111600160201b8311171561078257600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061114b945050505050565b3480156107cf57600080fd5b506101c8600480360360208110156107e657600080fd5b503561127b565b3480156107f957600080fd5b5061019f6004803603602081101561081057600080fd5b50356114fe565b34801561082357600080fd5b506103626004803603602081101561083a57600080fd5b810190602081018135600160201b81111561085457600080fd5b82018360208201111561086657600080fd5b803590602001918460018302840111600160201b8311171561088757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611513945050505050565b3480156108d457600080fd5b5061019f600480360360408110156108eb57600080fd5b506001600160a01b0381358116916020013516611668565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109b25780601f10610987576101008083540402835291602001916109b2565b820191906000526020600020905b81548152906001019060200180831161099557829003601f168201915b505050505090505b90565b60006109c882611696565b610a035760405162461bcd60e51b815260040180806020018281038252602c8152602001806124dc602c913960400191505060405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610a2a82610e63565b9050806001600160a01b0316836001600160a01b03161415610a7d5760405162461bcd60e51b815260040180806020018281038252602181526020018061258c6021913960400191505060405180910390fd5b806001600160a01b0316610a8f6116a9565b6001600160a01b03161480610ab05750610ab081610aab6116a9565b611668565b610aeb5760405162461bcd60e51b815260040180806020018281038252603881526020018061242f6038913960400191505060405180910390fd5b610af583836116ad565b505050565b600080826040516020018082805190602001908083835b60208310610b305780518252601f199092019160209182019101610b11565b51815160209384036101000a60001901801990921691161790526040805192909401828103601f1901835284528151918101919091206000818152600d909252929020549194505060ff169150610bc99050576040805162461bcd60e51b81526020600482015260166024820152754e4f5420464f52205345434f4e444152592053414c4560501b604482015290519081900360640190fd5b6000818152600d60209081526040808320805460ff19169055600e90915281205490610bf482610e63565b9050610c0181338461171b565b600b546040516001600160a01b0383169180156108fc02916000818181858888f19350505050158015610c38573d6000803e3d6000fd5b5090949350505050565b6000610c4e6002611879565b905090565b610c64610c5e6116a9565b82611884565b610c9f5760405162461bcd60e51b81526004018080602001828103825260318152602001806125ad6031913960400191505060405180910390fd5b610af583838361171b565b6001600160a01b0382166000908152600160205260408120610cd2908363ffffffff61192816565b90505b92915050565b610af5838383604051806020016040528060008152506110ed565b600080826040516020018082805190602001908083835b60208310610d2c5780518252601f199092019160209182019101610d0d565b51815160209384036101000a60001901801990921691161790526040805192909401828103601f1901835284528151918101919091206000818152600d909252929020549194505060ff169150610dc59050576040805162461bcd60e51b81526020600482015260166024820152754e4f5420464f52205345434f4e444152592053414c4560501b604482015290519081900360640190fd5b6000818152600d60209081526040808320805460ff19169055600e8252918290205482513381529182018190526060828401819052600b908301526a18d85b98d95b081cd95b1b60aa1b608083015291517f3336641c6160faad02966f62849beb4311d55c83a16b8d620aad420bddb6e9b19181900360a00190a19392505050565b600080610e5b60028463ffffffff61193416565b509392505050565b6000610cd582604051806060016040528060298152602001612491602991396002919063ffffffff61195016565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109b25780601f10610987576101008083540402835291602001916109b2565b60006001600160a01b038216610f395760405162461bcd60e51b815260040180806020018281038252602a815260200180612467602a913960400191505060405180910390fd5b6001600160a01b0382166000908152600160205260409020610cd590611879565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109b25780601f10610987576101008083540402835291602001916109b2565b600b5481565b610fc96116a9565b6001600160a01b0316826001600160a01b0316141561102f576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b806005600061103c6116a9565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff1916921515929092179091556110806116a9565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b600c6020526000908152604090205460ff1681565b600e6020526000908152604090205481565b6110fe6110f86116a9565b83611884565b6111395760405162461bcd60e51b81526004018080602001828103825260318152602001806125ad6031913960400191505060405180910390fd5b61114584848484611967565b50505050565b600080826040516020018082805190602001908083835b602083106111815780518252601f199092019160209182019101611162565b51815160209384036101000a60001901801990921691161790526040805192909401828103601f1901835284528151918101919091206000818152600c909252929020549194505060ff1691506112129050576040805162461bcd60e51b815260206004820152600e60248201526d105314915051164813525395115160921b604482015290519081900360640190fd5b6000818152600c60205260409020805460ff19169055611232600a6119b9565b600061123e600a6119c2565b905061124a33826119c6565b6112548185611b00565b6000828152600e60205260409020819055600b546103e8906107cf0204600b559392505050565b606061128682611696565b6112c15760405162461bcd60e51b815260040180806020018281038252602f81526020018061255d602f913960400191505060405180910390fd5b60008281526008602090815260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452606093928301828280156113565780601f1061132b57610100808354040283529160200191611356565b820191906000526020600020905b81548152906001019060200180831161133957829003601f168201915b505050505090506060611367610e91565b905080516000141561137b57509050610921565b81511561143c5780826040516020018083805190602001908083835b602083106113b65780518252601f199092019160209182019101611397565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b602083106113fe5780518252601f1990920191602091820191016113df565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405292505050610921565b8061144685611b63565b6040516020018083805190602001908083835b602083106114785780518252601f199092019160209182019101611459565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b602083106114c05780518252601f1990920191602091820191016114a1565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405292505050919050565b600d6020526000908152604090205460ff1681565b600080826040516020018082805190602001908083835b602083106115495780518252601f19909201916020918201910161152a565b51815160209384036101000a60001901801990921691161790526040805192909401828103601f1901835284528151918101919091206000818152600d909252929020549194505060ff161591506115ea9050576040805162461bcd60e51b815260206004820152601a60248201527f414c524541445920464f52205345434f4e444152592053414c45000000000000604482015290519081900360640190fd5b6000818152600d60209081526040808320805460ff19166001179055600e8252918290205482513381529182018190526060828401819052600490830152631cd95b1b60e21b608083015291517f3336641c6160faad02966f62849beb4311d55c83a16b8d620aad420bddb6e9b19181900360a00190a19392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000610cd560028363ffffffff611c3e16565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906116e282610e63565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b826001600160a01b031661172e82610e63565b6001600160a01b0316146117735760405162461bcd60e51b81526004018080602001828103825260298152602001806125346029913960400191505060405180910390fd5b6001600160a01b0382166117b85760405162461bcd60e51b81526004018080602001828103825260248152602001806123df6024913960400191505060405180910390fd5b6117c3838383610af5565b6117ce6000826116ad565b6001600160a01b03831660009081526001602052604090206117f6908263ffffffff611c4a16565b506001600160a01b038216600090815260016020526040902061181f908263ffffffff611c5616565b506118326002828463ffffffff611c6216565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000610cd5826119c2565b600061188f82611696565b6118ca5760405162461bcd60e51b815260040180806020018281038252602c815260200180612403602c913960400191505060405180910390fd5b60006118d583610e63565b9050806001600160a01b0316846001600160a01b031614806119105750836001600160a01b0316611905846109bd565b6001600160a01b0316145b8061192057506119208185611668565b949350505050565b6000610cd28383611c78565b60008080806119438686611cdc565b9097909650945050505050565b600061195d848484611d57565b90505b9392505050565b61197284848461171b565b61197e84848484611e21565b6111455760405162461bcd60e51b81526004018080602001828103825260328152602001806123ad6032913960400191505060405180910390fd5b80546001019055565b5490565b6001600160a01b038216611a21576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b611a2a81611696565b15611a7c576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b611a8860008383610af5565b6001600160a01b0382166000908152600160205260409020611ab0908263ffffffff611c5616565b50611ac36002828463ffffffff611c6216565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b611b0982611696565b611b445760405162461bcd60e51b815260040180806020018281038252602c815260200180612508602c913960400191505060405180910390fd5b60008281526008602090815260409091208251610af5928401906122f2565b606081611b8857506040805180820190915260018152600360fc1b6020820152610921565b8160005b8115611ba057600101600a82049150611b8c565b60608167ffffffffffffffff81118015611bb957600080fd5b506040519080825280601f01601f191660200182016040528015611be4576020820181803683370190505b50859350905060001982015b8315611c3557600a840660300160f81b82828060019003935081518110611c1357fe5b60200101906001600160f81b031916908160001a905350600a84049350611bf0565b50949350505050565b6000610cd28383611fa1565b6000610cd28383611fb9565b6000610cd2838361207f565b600061195d84846001600160a01b0385166120c9565b81546000908210611cba5760405162461bcd60e51b815260040180806020018281038252602281526020018061238b6022913960400191505060405180910390fd5b826000018281548110611cc957fe5b9060005260206000200154905092915050565b815460009081908310611d205760405162461bcd60e51b81526004018080602001828103825260228152602001806124ba6022913960400191505060405180910390fd5b6000846000018481548110611d3157fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008281526001840160205260408120548281611df25760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611db7578181015183820152602001611d9f565b50505050905090810190601f168015611de45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50846000016001820381548110611e0557fe5b9060005260206000209060020201600101549150509392505050565b6000611e35846001600160a01b0316612160565b611e4157506001611920565b6060611f67630a85bd0160e11b611e566116a9565b88878760405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611ecf578181015183820152602001611eb7565b50505050905090810190601f168015611efc5780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050506040518060600160405280603281526020016123ad603291396001600160a01b038816919063ffffffff61216616565b90506000818060200190516020811015611f8057600080fd5b50516001600160e01b031916630a85bd0160e11b1492505050949350505050565b60009081526001919091016020526040902054151590565b600081815260018301602052604081205480156120755783546000198083019190810190600090879083908110611fec57fe5b906000526020600020015490508087600001848154811061200957fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061203957fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610cd5565b6000915050610cd5565b600061208b8383611fa1565b6120c157508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610cd5565b506000610cd5565b60008281526001840160205260408120548061212e575050604080518082018252838152602080820184815286546001818101895560008981528481209551600290930290950191825591519082015586548684528188019092529290912055611960565b8285600001600183038154811061214157fe5b9060005260206000209060020201600101819055506000915050611960565b3b151590565b606061195d84846000858561217a85612160565b6121cb576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b6020831061220a5780518252601f1990920191602091820191016121eb565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461226c576040519150601f19603f3d011682016040523d82523d6000602084013e612271565b606091505b509150915061228182828661228c565b979650505050505050565b6060831561229b575081611960565b8251156122ab5782518084602001fd5b60405162461bcd60e51b8152602060048201818152845160248401528451859391928392604401919085019080838360008315611db7578181015183820152602001611d9f565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061233357805160ff1916838001178555612360565b82800160010185558215612360579182015b82811115612360578251825591602001919060010190612345565b5061236c929150612370565b5090565b6109ba91905b8082111561236c576000815560010161237656fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a264697066735822122086a7d12a4633b45ee6df7b419ad3ab7620bdac75aa461525455d83cdc7952d1d64736f6c63430006070033\";","module.exports = [\"YourCollectible\"];","/* eslint-disable import/no-dynamic-require */\n/* eslint-disable global-require */\nimport { Contract } from \"@ethersproject/contracts\";\nimport { useState, useEffect } from \"react\";\n\n/*\n  ~ What it does? ~\n\n  Loads your local contracts and gives options to read values from contracts \n                                              or write transactions into them\n\n  ~ How can I use? ~\n\n  const readContracts = useContractLoader(localProvider) // or\n  const writeContracts = useContractLoader(userProvider)\n\n  ~ Features ~\n\n  - localProvider enables reading values from contracts\n  - userProvider enables writing transactions into contracts\n  - Example of keeping track of \"purpose\" variable by loading contracts into readContracts \n    and using ContractReader.js hook:\n    const purpose = useContractReader(readContracts,\"YourContract\", \"purpose\")\n  - Example of using setPurpose function from our contract and writing transactions by Transactor.js helper:\n    tx( writeContracts.YourContract.setPurpose(newPurpose) )\n*/\n\nconst loadContract = (contractName, signer) => {\n  const newContract = new Contract(\n    require(`../contracts/${contractName}.address.js`),\n    require(`../contracts/${contractName}.abi.js`),\n    signer,\n  );\n  try {\n    newContract.bytecode = require(`../contracts/${contractName}.bytecode.js`);\n  } catch (e) {\n    console.log(e);\n  }\n  return newContract;\n};\n\nexport default function useContractLoader(providerOrSigner) {\n  const [contracts, setContracts] = useState();\n  useEffect(() => {\n    async function loadContracts() {\n      if (typeof providerOrSigner !== \"undefined\") {\n        try {\n          // we need to check to see if this providerOrSigner has a signer or not\n          let signer;\n          let accounts;\n          if (providerOrSigner && typeof providerOrSigner.listAccounts === \"function\") {\n            accounts = await providerOrSigner.listAccounts();\n          }\n\n          if (accounts && accounts.length > 0) {\n            signer = providerOrSigner.getSigner();\n          } else {\n            signer = providerOrSigner;\n          }\n\n          const contractList = require(\"../contracts/contracts.js\");\n\n          const newContracts = contractList.reduce((accumulator, contractName) => {\n            accumulator[contractName] = loadContract(contractName, signer);\n            return accumulator;\n          }, {});\n          setContracts(newContracts);\n        } catch (e) {\n          console.log(\"ERROR LOADING CONTRACTS!!\", e);\n        }\n      }\n    }\n    loadContracts();\n  }, [providerOrSigner]);\n  return contracts;\n}\n","import { useEffect, useState } from \"react\";\nimport { isAddress } from \"@ethersproject/address\";\n\n/*\n  ~ What it does? ~\n\n  Checks whether a contract exists on the blockchain, returns true if it exists, otherwise false\n\n  ~ How can I use? ~\n\n  const contractIsDeployed = useContractExistsAtAddress(localProvider, contractAddress);\n\n  ~ Features ~\n\n  - Provide contractAddress to check if the contract is deployed\n  - Change provider to check contract address on different chains (ex. mainnetProvider)\n*/\n\nconst useContractExistsAtAddress = (provider, contractAddress) => {\n  const [contractIsDeployed, setContractIsDeployed] = useState(false);\n\n  // We can look at the blockchain and see what's stored at `contractAddress`\n  // If we find code then we know that a contract exists there.\n  // If we find nothing (0x0) then there is no contract deployed to that address\n  useEffect(() => {\n    // eslint-disable-next-line consistent-return\n    const checkDeployment = async () => {\n      if (!isAddress(contractAddress)) return false;\n      const bytecode = await provider.getCode(contractAddress);\n      setContractIsDeployed(bytecode !== \"0x0\");\n    };\n    if (provider) checkDeployment();\n  }, [provider, contractAddress]);\n\n  return contractIsDeployed;\n};\n\nexport default useContractExistsAtAddress;\n","// MY INFURA_ID, SWAP IN YOURS FROM https://infura.io/dashboard/ethereum\nexport const INFURA_ID = \"460f40a260564ac4a4f4b3fffb032dad\";\n\n//MY ETHERSCAN_ID, SWAP IN YOURS FROM https://etherscan.io/myapikey\nexport const ETHERSCAN_KEY = \"PSW8C433Q667DVEX5BCRMGNAH9FSGFZ7Q8\";\n\n//BLOCKNATIVE ID FOR Notify.js:\nexport const BLOCKNATIVE_DAPPID = \"0b58206a-f3c0-4701-a62f-73c7243e8c77\"\n\n\n// EXTERNAL CONTRACTS\n\nexport const DAI_ADDRESS = \"0x6B175474E89094C44Da98b954EedeAC495271d0F\"\n\nexport const DAI_ABI = [{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg1\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg2\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]\n\nexport const NETWORK = (chainId)=>{\n  for(let n in NETWORKS){\n    if(NETWORKS[n].chainId==chainId){\n      return NETWORKS[n]\n    }\n  }\n}\n\nexport const NETWORKS = {\n    localhost: {\n        name: \"localhost\",\n        color: '#666666',\n        chainId: 31337,\n        blockExplorer: '',\n        rpcUrl: \"http://\" + window.location.hostname + \":8545\",\n    },\n    mainnet: {\n        name: \"mainnet\",\n        color: '#ff8b9e',\n        chainId: 1,\n        rpcUrl: `https://mainnet.infura.io/v3/${INFURA_ID}`,\n        blockExplorer: \"https://etherscan.io/\",\n    },\n    kovan: {\n        name: \"kovan\",\n        color: '#7003DD',\n        chainId: 42,\n        rpcUrl: `https://kovan.infura.io/v3/${INFURA_ID}`,\n        blockExplorer: \"https://kovan.etherscan.io/\",\n        faucet: \"https://gitter.im/kovan-testnet/faucet\",//https://faucet.kovan.network/\n    },\n    rinkeby: {\n        name: \"rinkeby\",\n        color: '#e0d068',\n        chainId: 4,\n        rpcUrl: `https://rinkeby.infura.io/v3/${INFURA_ID}`,\n        faucet: \"https://faucet.rinkeby.io/\",\n        blockExplorer: \"https://rinkeby.etherscan.io/\",\n    },\n    ropsten: {\n        name: \"ropsten\",\n        color: '#F60D09',\n        chainId: 3,\n        faucet: \"https://faucet.ropsten.be/\",\n        blockExplorer: \"https://ropsten.etherscan.io/\",\n        rpcUrl: `https://ropsten.infura.io/v3/${INFURA_ID}`,\n    },\n    goerli: {\n        name: \"goerli\",\n        color: '#0975F6',\n        chainId: 5,\n        faucet: \"https://goerli-faucet.slock.it/\",\n        blockExplorer: \"https://goerli.etherscan.io/\",\n        rpcUrl: `https://goerli.infura.io/v3/${INFURA_ID}`,\n    },\n    xdai: {\n        name: \"xdai\",\n        color: '#48a9a6',\n        chainId: 100,\n        price: 1,\n        gasPrice:1000000000,\n        rpcUrl: \"https://dai.poa.network\",\n        faucet: \"https://xdai-faucet.top/\",\n        blockExplorer: \"https://blockscout.com/poa/xdai/\",\n    },\n    matic: {\n        name: \"matic\",\n        color: '#2bbdf7',\n        chainId: 137,\n        price: 1,\n        gasPrice:1000000000,\n        rpcUrl: \"https://rpc-mainnet.maticvigil.com\",\n        faucet: \"https://faucet.matic.network/\",\n        blockExplorer: \"https://explorer-mainnet.maticvigil.com//\",\n    },\n    mumbai: {\n        name: \"mumbai\",\n        color: '#92D9FA',\n        chainId: 80001,\n        price: 1,\n        gasPrice:1000000000,\n        rpcUrl: \"https://rpc-mumbai.maticvigil.com\",\n        faucet: \"https://faucet.matic.network/\",\n        blockExplorer: \"https://mumbai-explorer.matic.today/\",\n    }\n}\n","import { useMemo } from \"react\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport BurnerProvider from \"burner-provider\";\nimport { INFURA_ID } from \"../constants\";\n\n/*\n  ~ What it does? ~\n\n  Gets user provider\n\n  ~ How can I use? ~\n\n  const userProvider = useUserProvider(injectedProvider, localProvider);\n\n  ~ Features ~\n\n  - Specify the injected provider from Metamask\n  - Specify the local provider\n  - Usage examples:\n    const address = useUserAddress(userProvider);\n    const tx = Transactor(userProvider, gasPrice)\n*/\n\nconst useUserProvider = (injectedProvider, localProvider) =>\nuseMemo(() => {\n  if (injectedProvider) {\n    console.log(\"🦊 Using injected provider\");\n    return injectedProvider;\n  }\n  if (!localProvider) return undefined;\n\n  let burnerConfig = {}\n\n  if(window.location.pathname){\n    if(window.location.pathname.indexOf(\"/pk\")>=0){\n      let incomingPK = window.location.hash.replace(\"#\",\"\")\n      let rawPK\n      if(incomingPK.length===64||incomingPK.length===66){\n        console.log(\"🔑 Incoming Private Key...\");\n        rawPK=incomingPK\n        burnerConfig.privateKey = rawPK\n        window.history.pushState({},\"\", \"/\");\n        let currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n        if(currentPrivateKey && currentPrivateKey!==rawPK){\n          window.localStorage.setItem(\"metaPrivateKey_backup\"+Date.now(),currentPrivateKey);\n        }\n        window.localStorage.setItem(\"metaPrivateKey\",rawPK);\n      }\n    }\n  }\n\n  console.log(\"🔥 Using burner provider\",burnerConfig);\n  if (localProvider.connection && localProvider.connection.url) {\n    burnerConfig.rpcUrl = localProvider.connection.url\n    return new Web3Provider(new BurnerProvider(burnerConfig));\n  }else{\n    // eslint-disable-next-line no-underscore-dangle\n    const networkName = localProvider._network && localProvider._network.name;\n    burnerConfig.rpcUrl = `https://${networkName || \"mainnet\"}.infura.io/v3/${INFURA_ID}`\n    return new Web3Provider(new BurnerProvider(burnerConfig));\n  }\n}, [injectedProvider, localProvider]);\n\nexport default useUserProvider;\n","import { useEffect, useRef } from \"react\";\n\n// helper hook to call a function regularly in time intervals \n\nexport default function usePoller(fn, delay, extraWatch) {\n  const savedCallback = useRef();\n  // Remember the latest fn.\n  useEffect(() => {\n    savedCallback.current = fn;\n  }, [fn]);\n  // Set up the interval.\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    console.log(\"tick\")\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n  // run at start too\n  useEffect(() => {\n    fn();\n  },[ extraWatch ]);\n}\n","import { useState, useEffect } from \"react\";\nimport usePoller from \"./Poller\";\n\nconst DEBUG = false;\n\n/*\n  ~ What it does? ~\n\n  Enables you to read values from contracts and keep track of them in the local React states\n\n  ~ How can I use? ~\n\n  const purpose = useContractReader(readContracts,\"YourContract\", \"purpose\")\n\n  ~ Features ~\n\n  - Provide readContracts by loading contracts (see more on ContractLoader.js)\n  - Specify the name of the contract, in this case it is \"YourContract\"\n  - Specify the name of the variable in the contract, in this case we keep track of \"purpose\" variable\n*/\n\nexport default function useContractReader(contracts, contractName, functionName, args, pollTime, formatter, onChange) {\n  let adjustPollTime = 1777;\n  if (pollTime) {\n    adjustPollTime = pollTime;\n  } else if (!pollTime && typeof args === \"number\") {\n    // it's okay to pass poll time as last argument without args for the call\n    adjustPollTime = args;\n  }\n\n  const [value, setValue] = useState();\n  useEffect(() => {\n    if (typeof onChange === \"function\") {\n      setTimeout(onChange.bind(this, value), 1);\n    }\n  }, [value, onChange]);\n\n  usePoller(async () => {\n    if (contracts && contracts[contractName]) {\n      try {\n        let newValue;\n        if (DEBUG) console.log(\"CALLING \", contractName, functionName, \"with args\", args);\n        if (args && args.length > 0) {\n          newValue = await contracts[contractName][functionName](...args);\n          if (DEBUG)\n            console.log(\"contractName\", contractName, \"functionName\", functionName, \"args\", args, \"RESULT:\", newValue);\n        } else {\n          newValue = await contracts[contractName][functionName]();\n        }\n        if (formatter && typeof formatter === \"function\") {\n          newValue = formatter(newValue);\n        }\n        // console.log(\"GOT VALUE\",newValue)\n        if (newValue !== value) {\n          setValue(newValue);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }, adjustPollTime, contracts && contracts[contractName]);\n\n  return value;\n}\n","import { useState } from \"react\";\nimport usePoller from \"./Poller\";\n\n/*\n  ~ What it does? ~\n\n  Gets your balance in ETH from given address and provider\n\n  ~ How can I use? ~\n\n  const yourLocalBalance = useBalance(localProvider, address);\n\n  ~ Features ~\n\n  - Provide address and get balance corresponding to given address\n  - Change provider to access balance on different chains (ex. mainnetProvider)\n*/\n\nexport default function useBalance(provider, address, pollTime) {\nconst [balance, setBalance] = useState();\nconst pollBalance = async () => {\n  if (address && provider) {\n    const newBalance = await provider.getBalance(address);\n    if (newBalance !== balance) {\n      // console.log(\"NEW BALANCE:\",newBalance,\"Current balance\",balance)\n      setBalance(newBalance);\n    }\n  }\n};\nusePoller(pollBalance, 27777, address && provider );\n\nreturn balance;\n}\n","import { useState, useEffect } from \"react\";\n\n/*\n  ~ What it does? ~\n\n  Enables you to keep track of events \n\n  ~ How can I use? ~\n\n  const setPurposeEvents = useEventListener(readContracts, \"YourContract\", \"SetPurpose\", localProvider, 1);\n\n  ~ Features ~\n\n  - Provide readContracts by loading contracts (see more on ContractLoader.js)\n  - Specify the name of the contract, in this case it is \"YourContract\"\n  - Specify the name of the event in the contract, in this case we keep track of \"SetPurpose\" event\n  - Specify the provider \n*/\n\nexport default function useEventListener(contracts, contractName, eventName, provider, startBlock, args) {\n  const [updates, setUpdates] = useState([]);\n\n  useEffect(() => {\n    if (typeof provider !== \"undefined\" && typeof startBlock !== \"undefined\") {\n      // if you want to read _all_ events from your contracts, set this to the block number it is deployed\n      provider.resetEventsBlock(startBlock);\n    }\n    if (contracts && contractName && contracts[contractName]) {\n      try {\n        contracts[contractName].on(eventName, (...args) => {\n          let blockNumber = args[args.length-1].blockNumber\n          setUpdates(messages => [Object.assign({blockNumber},args.pop().args), ...messages]);\n        });\n        return () => {\n          contracts[contractName].removeListener(eventName);\n        };\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }, [provider, startBlock, contracts, contractName, eventName]);\n\n  return updates;\n}\n","import { useState, useEffect } from \"react\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { useLocalStorage } from \".\"\n\n// resolved if(name){} to not save \"\" into cache \n\n/*\n  ~ What it does? ~\n\n  Gets ENS name from given address and provider\n\n  ~ How can I use? ~\n\n  const ensName = useLookupAddress(mainnetProvider, address);\n\n  ~ Features ~\n\n  - Provide address and get ENS name corresponding to given address\n*/\n\nconst lookupAddress = async (provider, address) => {\n  try {\n    // Accuracy of reverse resolution is not enforced.\n    // We then manually ensure that the reported ens name resolves to address\n    const reportedName = await provider.lookupAddress(address);\n    \n    const resolvedAddress = await provider.resolveName(reportedName);\n\n    if (getAddress(address) === getAddress(resolvedAddress)) {\n      return reportedName;\n    }\n  } catch (e) {\n    // Do nothing\n  }\n  return 0;\n};\n\nconst useLookupAddress = (provider, address) => {\n  const [ensName, setEnsName] = useState(address);\n  const [ensCache, setEnsCache] = useLocalStorage('ensCache_'+address);\n\n  useEffect(() => {\n    if( ensCache && ensCache.timestamp>Date.now()){\n      setEnsName(ensCache.name)\n    }else{\n      if (provider) {\n        lookupAddress(provider, address).then((name) => {\n          if (name) {\n            setEnsName(name);\n            setEnsCache({\n              timestamp:Date.now()+360000,\n              name:name\n            })\n          }\n        });\n      }\n    }\n  }, [ensCache, provider, address, setEnsName, setEnsCache]);\n\n  return ensName;\n};\n\nexport default useLookupAddress;\n","import { useState } from 'react';\n// Hook from useHooks! (https://usehooks.com/useLocalStorage/)\nexport default function useLocalStorage(key, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import React from \"react\";\nimport Blockies from \"react-blockies\";\nimport { Typography, Skeleton } from \"antd\";\nimport { useLookupAddress } from \"../hooks\";\n\n// changed value={address} to address={address}\n\n/*\n  ~ What it does? ~\n\n  Displays an address with a blockie image and option to copy address\n\n  ~ How can I use? ~\n\n  <Address\n    address={address}\n    ensProvider={mainnetProvider}\n    blockExplorer={blockExplorer}\n    fontSize={fontSize}\n  />\n\n  ~ Features ~\n\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\")\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\n  - Provide fontSize={fontSize} to change the size of address text\n*/\n\nconst { Text } = Typography;\n\nconst blockExplorerLink = (address, blockExplorer) => `${blockExplorer || \"https://etherscan.io/\"}${\"address/\"}${address}`;\n\nexport default function Address(props) {\n\n  const address = props.value || props.address;\n\n  const ens = useLookupAddress(props.ensProvider, address);\n\n  if (!address) {\n    return (\n      <span>\n        <Skeleton avatar paragraph={{ rows: 1 }} />\n      </span>\n    );\n  }\n\n  let displayAddress = address.substr(0, 6);\n\n  if (ens && ens.indexOf(\"0x\")<0) {\n    displayAddress = ens;\n  } else if (props.size === \"short\") {\n    displayAddress += \"...\" + address.substr(-4);\n  } else if (props.size === \"long\") {\n    displayAddress = address;\n  }\n\n  const etherscanLink = blockExplorerLink(address, props.blockExplorer);\n  if (props.minimized) {\n    return (\n      <span style={{ verticalAlign: \"middle\" }}>\n        <a /*style={{ color: \"#222222\" }}*/ target={\"_blank\"} href={etherscanLink} rel=\"noopener noreferrer\">\n          <Blockies seed={address.toLowerCase()} size={8} scale={2} />\n        </a>\n      </span>\n    );\n  }\n\n  let text;\n  if (props.onChange) {\n    text = (\n      <Text editable={{ onChange: props.onChange }} copyable={{ text: address }}>\n        <a /*style={{ color: \"#222222\" }}*/ target={\"_blank\"} href={etherscanLink} rel=\"noopener noreferrer\">\n          {displayAddress}\n        </a>\n      </Text>\n    );\n  } else {\n    text = (\n      <Text copyable={{ text: address }}>\n        <a /*style={{ color: \"#222222\" }}*/ target={\"_blank\"} href={etherscanLink} rel=\"noopener noreferrer\">\n          {displayAddress}\n        </a>\n      </Text>\n    );\n  }\n\n  return (\n    <span>\n      <span style={{ verticalAlign: \"middle\" }}>\n        <Blockies seed={address.toLowerCase()} size={8} scale={props.fontSize?props.fontSize/7:4} />\n      </span>\n      <span style={{ verticalAlign: \"middle\", paddingLeft: 5, fontSize: props.fontSize?props.fontSize:28 }}>{text}</span>\n    </span>\n  );\n}\n","import React, { useState } from \"react\";\nimport { formatEther } from \"@ethersproject/units\";\nimport { usePoller } from \"eth-hooks\";\n\n/*\n  ~ What it does? ~\n\n  Displays a balance of given address in ether & dollar\n\n  ~ How can I use? ~\n\n  <Balance\n    address={address}\n    provider={mainnetProvider}\n    price={price}\n  />\n\n  ~ If you already have the balance as a bignumber ~\n  <Balance\n    balance={balance}\n    price={price}\n  />\n\n  ~ Features ~\n\n  - Provide address={address} and get balance corresponding to given address\n  - Provide provider={mainnetProvider} to access balance on mainnet or any other network (ex. localProvider)\n  - Provide price={price} of ether and get your balance converted to dollars\n*/\n\n\nexport default function Balance(props) {\n  const [dollarMode, setDollarMode] = useState(true);\n  const [balance, setBalance] = useState();\n\n  const getBalance = async () => {\n    if (props.address && props.provider) {\n      try {\n        const newBalance = await props.provider.getBalance(props.address);\n        setBalance(newBalance);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n\n  usePoller(\n    () => {\n      getBalance();\n    },\n    props.pollTime ? props.pollTime : 1999,\n  );\n\n  let floatBalance = parseFloat(\"0.00\");\n\n  let usingBalance = balance;\n\n  if (typeof props.balance !== \"undefined\") {\n    usingBalance = props.balance;\n  }\n  if (typeof props.value !== \"undefined\") {\n    usingBalance = props.value;\n  }\n\n  if (usingBalance) {\n    const etherBalance = formatEther(usingBalance);\n    parseFloat(etherBalance).toFixed(2);\n    floatBalance = parseFloat(etherBalance);\n  }\n\n  let displayBalance = floatBalance.toFixed(4);\n\n  const price = props.price || props.dollarMultiplier\n\n  if (price && dollarMode) {\n    displayBalance = \"$\" + (floatBalance * price).toFixed(2);\n  }\n\n  return (\n    <span\n      style={{\n        verticalAlign: \"middle\",\n        fontSize: props.size ? props.size : 24,\n        padding: 8,\n        cursor: \"pointer\",\n      }}\n      onClick={() => {\n        setDollarMode(!dollarMode);\n      }}\n    >\n      {displayBalance}\n    </span>\n  );\n}\n","import { hexlify } from \"@ethersproject/bytes\";\nimport { parseUnits } from \"@ethersproject/units\";\nimport { notification } from \"antd\";\nimport { BLOCKNATIVE_DAPPID, } from \"../constants\";\n\nimport Notify from \"bnc-notify\";\n\n// this should probably just be renamed to \"notifier\"\n// it is basically just a wrapper around BlockNative's wonderful Notify.js\n// https://docs.blocknative.com/notify\n\nexport default function Transactor(provider, gasPrice, etherscan) {\n  if (typeof provider !== \"undefined\") {\n    // eslint-disable-next-line consistent-return\n    return async tx => {\n      const signer = provider.getSigner();\n      const network = await provider.getNetwork();\n      console.log(\"network\", network);\n      const options = {\n        dappId: BLOCKNATIVE_DAPPID, // GET YOUR OWN KEY AT https://account.blocknative.com\n        system: \"ethereum\",\n        networkId: network.chainId,\n        // darkMode: Boolean, // (default: false)\n        transactionHandler: txInformation => {\n          console.log(\"HANDLE TX\", txInformation);\n        },\n      };\n      const notify = Notify(options);\n\n      let etherscanNetwork = \"\";\n      if (network.name && network.chainId > 1) {\n        etherscanNetwork = network.name + \".\";\n      }\n\n      let etherscanTxUrl = \"https://\" + etherscanNetwork + \"etherscan.io/tx/\";\n      if (network.chainId === 100) {\n        etherscanTxUrl = \"https://blockscout.com/poa/xdai/tx/\";\n      }\n\n      try {\n        let result;\n        if (tx instanceof Promise) {\n          console.log(\"AWAITING TX\", tx);\n          result = await tx;\n        } else {\n          if (!tx.gasPrice) {\n            tx.gasPrice = gasPrice || parseUnits(\"4.1\", \"gwei\");\n          }\n          if (!tx.gasLimit) {\n            tx.gasLimit = hexlify(120000);\n          }\n          console.log(\"RUNNING TX\", tx);\n          result = await signer.sendTransaction(tx);\n        }\n        console.log(\"RESULT:\", result);\n        // console.log(\"Notify\", notify);\n\n        // if it is a valid Notify.js network, use that, if not, just send a default notification\n        if ([1, 3, 4, 5, 42, 100].indexOf(network.chainId) >= 0) {\n          const { emitter } = notify.hash(result.hash);\n          emitter.on(\"all\", transaction => {\n            return {\n              onclick: () => window.open((etherscan || etherscanTxUrl) + transaction.hash),\n            };\n          });\n        } else {\n          notification.info({\n            message: \"Local Transaction Sent\",\n            description: result.hash,\n            placement: \"bottomRight\",\n          });\n        }\n\n        return result;\n      } catch (e) {\n        console.log(e);\n        console.log(\"Transaction Error:\", e.message);\n        notification.error({\n          message: \"Transaction Error\",\n          description: e.message,\n        });\n      }\n    };\n  }\n}\n","import React from \"react\";\nimport Blockies from \"react-blockies\";\n\n// provides a blockie image for the address using \"react-blockies\" library\n\nexport default function Blockie(props) {\n  if (!props.address || typeof props.address.toLowerCase !== \"function\") {\n    return <span />;\n  }\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <Blockies seed={props.address.toLowerCase()} {...props} />;\n}\n","import React, { useState, useCallback } from \"react\";\nimport QrReader from \"react-qr-reader\";\nimport { CameraOutlined, QrcodeOutlined } from \"@ant-design/icons\";\nimport { Input, Badge } from \"antd\";\nimport { useLookupAddress } from \"eth-hooks\";\nimport Blockie from \"./Blockie\";\n\n// probably we need to change value={toAddress} to address={toAddress}\n\n/*\n  ~ What it does? ~\n\n  Displays an address input with QR scan option\n\n  ~ How can I use? ~\n\n  <AddressInput\n    autoFocus\n    ensProvider={mainnetProvider}\n    placeholder=\"Enter address\"\n    value={toAddress}\n    onChange={setToAddress}\n  />\n\n  ~ Features ~\n\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n  - Provide placeholder=\"Enter address\" value for the input\n  - Value of the address input is stored in value={toAddress}\n  - Control input change by onChange={setToAddress} \n                          or onChange={address => { setToAddress(address);}}\n*/\n\nexport default function AddressInput(props) {\n  const [value, setValue] = useState(props.value);\n  const [scan, setScan] = useState(false);\n\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\n  const ens = useLookupAddress(props.ensProvider, currentValue);\n\n  const scannerButton = (\n    <div\n      style={{ marginTop: 4, cursor: \"pointer\" }}\n      onClick={() => {\n        setScan(!scan);\n      }}\n    >\n      <Badge count={<CameraOutlined style={{ fontSize: 9 }} />}>\n        <QrcodeOutlined style={{ fontSize: 18 }} />\n      </Badge>{\" \"}\n      Scan\n    </div>\n  );\n\n  const {ensProvider, onChange} = props;\n  const updateAddress = useCallback(\n    async newValue => {\n      if (typeof newValue !== \"undefined\") {\n        let address = newValue;\n        if (address.indexOf(\".eth\") > 0 || address.indexOf(\".xyz\") > 0) {\n          try {\n            const possibleAddress = await ensProvider.resolveName(address);\n            if (possibleAddress) {\n              address = possibleAddress;\n            }\n            // eslint-disable-next-line no-empty\n          } catch (e) {}\n        }\n        setValue(address);\n        if (typeof onChange === \"function\") {\n          onChange(address);\n        }\n      }\n    },\n    [ensProvider, onChange],\n  );\n\n  const scanner = scan ? (\n    <div\n      style={{\n        zIndex: 256,\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        width: \"100%\",\n      }}\n      onClick={() => {\n        setScan(false);\n      }}\n    >\n      <QrReader\n        delay={250}\n        resolution={1200}\n        onError={e => {\n          console.log(\"SCAN ERROR\", e);\n          setScan(false);\n        }}\n        onScan={newValue => {\n          if (newValue) {\n            console.log(\"SCAN VALUE\", newValue);\n            let possibleNewValue = newValue;\n            if (possibleNewValue.indexOf(\"/\") >= 0) {\n              possibleNewValue = possibleNewValue.substr(possibleNewValue.lastIndexOf(\"0x\"));\n              console.log(\"CLEANED VALUE\", possibleNewValue);\n            }\n            setScan(false);\n            updateAddress(possibleNewValue);\n          }\n        }}\n        style={{ width: \"100%\" }}\n      />\n    </div>\n  ) : (\n    \"\"\n  );\n\n  return (\n    <div>\n      {scanner}\n      <Input\n        id={\"0xAddress\"}//name it something other than address for auto fill doxxing\n        name={\"0xAddress\"}//name it something other than address for auto fill doxxing\n        autoComplete=\"off\"\n        autoFocus={props.autoFocus}\n        placeholder={props.placeholder ? props.placeholder : \"address\"}\n        prefix={<Blockie address={currentValue} size={8} scale={3} />}\n        value={ens || currentValue}\n        addonAfter={scannerButton}\n        onChange={e => {\n          updateAddress(e.target.value);\n        }}\n      />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Input } from \"antd\";\n\n// small change in useEffect, display currentValue if it's provided by user\n\n/*\n  ~ What it does? ~\n\n  Displays input field for ETH/USD amount, with an option to convert between ETH and USD\n\n  ~ How can I use? ~\n\n  <EtherInput\n    autofocus\n    price={price}\n    value=100\n    placeholder=\"Enter amount\"\n    onChange={value => {\n      setAmount(value);\n    }}\n  />\n\n  ~ Features ~\n\n  - Provide price={price} of ether and easily convert between USD and ETH\n  - Provide value={value} to specify initial amount of ether\n  - Provide placeholder=\"Enter amount\" value for the input\n  - Control input change by onChange={value => { setAmount(value);}}\n*/\n\nexport default function EtherInput(props) {\n  const [mode, setMode] = useState(props.price ? \"USD\" : \"ETH\");\n  const [display, setDisplay] = useState();\n  const [value, setValue] = useState();\n\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\n\n  const option = title => {\n    if (!props.price) return \"\";\n    return (\n      <div\n        style={{ cursor: \"pointer\" }}\n        onClick={() => {\n          if (mode === \"USD\") {\n            setMode(\"ETH\");\n            setDisplay(currentValue);\n          } else {\n            setMode(\"USD\");\n            if (currentValue) {\n              const usdValue = \"\" + (parseFloat(currentValue) * props.price).toFixed(2);\n              setDisplay(usdValue);\n            } else {\n              setDisplay(currentValue);\n            }\n          }\n        }}\n      >\n        {title}\n      </div>\n    );\n  };\n\n  let prefix;\n  let addonAfter;\n  if (mode === \"USD\") {\n    prefix = \"$\";\n    addonAfter = option(\"USD 🔀\");\n  } else {\n    prefix = \"Ξ\";\n    addonAfter = option(\"ETH 🔀\");\n  }\n\n  useEffect(\n    ()=>{\n      if(!currentValue){\n        setDisplay(\"\");\n      }\n    }\n  ,[ currentValue ])\n\n  return (\n    <Input\n      placeholder={props.placeholder ? props.placeholder : \"amount in \" + mode}\n      autoFocus={props.autoFocus}\n      prefix={prefix}\n      value={display}\n      addonAfter={addonAfter}\n      onChange={async e => {\n        const newValue = e.target.value;\n        if (mode === \"USD\") {\n          const possibleNewValue = parseFloat(newValue)\n          if(possibleNewValue){\n            const ethValue = possibleNewValue / props.price;\n            setValue(ethValue);\n            if (typeof props.onChange === \"function\") {\n              props.onChange(ethValue);\n            }\n            setDisplay(newValue);\n          }else{\n            setDisplay(newValue);\n          }\n        } else {\n          setValue(newValue);\n          if (typeof props.onChange === \"function\") {\n            props.onChange(newValue);\n          }\n          setDisplay(newValue);\n        }\n      }}\n    />\n  );\n}\n","import React, { useState } from \"react\";\nimport { WalletOutlined, QrcodeOutlined, SendOutlined, KeyOutlined } from \"@ant-design/icons\";\nimport { Tooltip, Spin, Modal, Button, Typography } from \"antd\";\nimport QR from \"qrcode.react\";\nimport { parseEther } from \"@ethersproject/units\";\nimport { useUserAddress } from \"eth-hooks\";\nimport { Transactor } from \"../helpers\";\nimport Address from \"./Address\";\nimport Balance from \"./Balance\";\nimport AddressInput from \"./AddressInput\";\nimport EtherInput from \"./EtherInput\";\nimport { ethers } from \"ethers\";\nconst { Text, Paragraph } = Typography;\n\n/*\n  ~ What it does? ~\n\n  Displays a wallet where you can specify address and send USD/ETH, with options to\n  scan address, to convert between USD and ETH, to see and generate private keys,\n  to send, receive and extract the burner wallet\n\n  ~ How can I use? ~\n\n  <Wallet\n    provider={userProvider}\n    address={address}\n    ensProvider={mainnetProvider}\n    price={price}\n    color='red'\n  />\n\n  ~ Features ~\n\n  - Provide provider={userProvider} to display a wallet\n  - Provide address={address} if you want to specify address, otherwise\n                                                    your default address will be used\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n  - Provide price={price} of ether and easily convert between USD and ETH\n  - Provide color to specify the color of wallet icon\n*/\n\nexport default function Wallet(props) {\n  const signerAddress = useUserAddress(props.provider);\n  const selectedAddress = props.address || signerAddress;\n\n  const [open, setOpen] = useState();\n  const [qr, setQr] = useState();\n  const [amount, setAmount] = useState();\n  const [toAddress, setToAddress] = useState();\n  const [pk, setPK] = useState()\n\n  const providerSend = props.provider ? (\n    <Tooltip title=\"Wallet\">\n      <WalletOutlined\n        onClick={() => {\n          setOpen(!open);\n        }}\n        rotate={-90}\n        style={{\n          padding: 7,\n          color: props.color ? props.color : \"\",\n          cursor: \"pointer\",\n          fontSize: 28,\n          verticalAlign: \"middle\",\n        }}\n      />\n    </Tooltip>\n  ) : (\n    \"\"\n  );\n\n  let display;\n  let receiveButton;\n  let privateKeyButton\n  if (qr) {\n    display = (\n      <div>\n        <div>\n          <Text copyable>{selectedAddress}</Text>\n        </div>\n        <QR\n          value={selectedAddress}\n          size=\"450\"\n          level=\"H\"\n          includeMargin\n          renderAs=\"svg\"\n          imageSettings={{ excavate: false }}\n        />\n      </div>\n    );\n    receiveButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setQr(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Hide\n      </Button>\n    );\n    privateKeyButton = (\n     <Button key=\"hide\" onClick={()=>{setPK(selectedAddress);setQr(\"\")}}>\n       <KeyOutlined /> Private Key\n     </Button>\n   )\n }else if(pk){\n\n   let pk = localStorage.getItem(\"metaPrivateKey\")\n   let wallet = new ethers.Wallet(pk)\n\n   if(wallet.address!==selectedAddress){\n     display = (\n       <div>\n         <b>*injected account*, private key unknown</b>\n       </div>\n     )\n   }else{\n\n     let extraPkDisplayAdded = {}\n     let extraPkDisplay = []\n     extraPkDisplayAdded[wallet.address] = true\n     extraPkDisplay.push(\n       <div style={{fontSize:16,padding:2,backgroundStyle:\"#89e789\"}}>\n          <a href={\"/pk#\"+pk}>\n            <Address minimized={true} address={wallet.address} ensProvider={props.ensProvider} /> {wallet.address.substr(0,6)}\n          </a>\n       </div>\n     )\n     for (var key in localStorage){\n       if(key.indexOf(\"metaPrivateKey_backup\")>=0){\n         console.log(key)\n         let pastpk = localStorage.getItem(key)\n         let pastwallet = new ethers.Wallet(pastpk)\n         if(!extraPkDisplayAdded[pastwallet.address] /*&& selectedAddress!=pastwallet.address*/){\n           extraPkDisplayAdded[pastwallet.address] = true\n           extraPkDisplay.push(\n             <div style={{fontSize:16}}>\n                <a href={\"/pk#\"+pastpk}>\n                  <Address minimized={true} address={pastwallet.address} ensProvider={props.ensProvider} /> {pastwallet.address.substr(0,6)}\n                </a>\n             </div>\n           )\n         }\n       }\n     }\n\n\n     display = (\n       <div>\n         <b>Private Key:</b>\n\n         <div>\n          <Text copyable>{pk}</Text>\n          </div>\n\n          <hr/>\n\n         <i>Point your camera phone at qr code to open in\n           <a target=\"_blank\" href={\"https://xdai.io/\"+pk} rel=\"noopener noreferrer\">burner wallet</a>:\n         </i>\n         <QR value={\"https://xdai.io/\"+pk} size={\"450\"} level={\"H\"} includeMargin={true} renderAs={\"svg\"} imageSettings={{excavate:false}}/>\n\n         <Paragraph style={{fontSize:\"16\"}} copyable>{\"https://xdai.io/\"+pk}</Paragraph>\n\n         {extraPkDisplay?(\n           <div>\n             <h3>\n              Known Private Keys:\n             </h3>\n             {extraPkDisplay}\n             <Button onClick={()=>{\n               let currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n               if(currentPrivateKey){\n                 window.localStorage.setItem(\"metaPrivateKey_backup\"+Date.now(),currentPrivateKey);\n               }\n               const randomWallet = ethers.Wallet.createRandom()\n               const privateKey = randomWallet._signingKey().privateKey\n               window.localStorage.setItem(\"metaPrivateKey\",privateKey);\n               window.location.reload()\n             }}>\n              Generate\n             </Button>\n           </div>\n         ):\"\"}\n\n       </div>\n     )\n   }\n\n   receiveButton = (\n     <Button key=\"receive\" onClick={()=>{setQr(selectedAddress);setPK(\"\")}}>\n       <QrcodeOutlined /> Receive\n     </Button>\n   )\n   privateKeyButton = (\n     <Button key=\"hide\" onClick={()=>{setPK(\"\");setQr(\"\")}}>\n       <KeyOutlined /> Hide\n     </Button>\n   )\n  } else {\n    const inputStyle = {\n      padding: 10,\n    };\n\n    display = (\n      <div>\n        <div style={inputStyle}>\n          <AddressInput\n            autoFocus\n            ensProvider={props.ensProvider}\n            placeholder=\"to address\"\n            address={toAddress}\n            onChange={setToAddress}\n          />\n        </div>\n        <div style={inputStyle}>\n          <EtherInput\n            price={props.price}\n            value={amount}\n            onChange={value => {\n              setAmount(value);\n            }}\n          />\n        </div>\n      </div>\n    );\n    receiveButton = (\n      <Button\n        key=\"receive\"\n        onClick={() => {\n          setQr(selectedAddress);\n          setPK(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Receive\n      </Button>\n    );\n    privateKeyButton = (\n      <Button key=\"hide\" onClick={()=>{setPK(selectedAddress);setQr(\"\")}}>\n        <KeyOutlined /> Private Key\n      </Button>\n    );\n  }\n\n  return (\n    <span>\n      {providerSend}\n      <Modal\n        visible={open}\n        title={\n          <div>\n            {selectedAddress ? <Address address={selectedAddress} ensProvider={props.ensProvider} /> : <Spin />}\n            <div style={{ float: \"right\", paddingRight: 25 }}>\n              <Balance address={selectedAddress} provider={props.provider} dollarMultiplier={props.price} />\n            </div>\n          </div>\n        }\n        onOk={() => {\n          setQr();\n          setPK();\n          setOpen(!open);\n        }}\n        onCancel={() => {\n          setQr();\n          setPK();\n          setOpen(!open);\n        }}\n        footer={[\n          privateKeyButton, receiveButton,\n          <Button\n            key=\"submit\"\n            type=\"primary\"\n            disabled={!amount || !toAddress || qr}\n            loading={false}\n            onClick={() => {\n              const tx = Transactor(props.provider);\n\n              let value;\n              try {\n                value = parseEther(\"\" + amount);\n              } catch (e) {\n                // failed to parseEther, try something else\n                value = parseEther(\"\" + parseFloat(amount).toFixed(8));\n              }\n\n              tx({\n                to: toAddress,\n                value,\n              });\n              setOpen(!open);\n              setQr();\n            }}\n          >\n            <SendOutlined /> Send\n          </Button>,\n        ]}\n      >\n        {display}\n      </Modal>\n    </span>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport Address from \"./Address\";\nimport Balance from \"./Balance\";\nimport Wallet from \"./Wallet\";\n\n/*\n  ~ What it does? ~\n\n  Displays an Address, Balance, and Wallet as one Account component, \n  also allows users to log in to existing accounts and log out\n\n  ~ How can I use? ~\n\n  <Account\n    address={address}\n    localProvider={localProvider}\n    userProvider={userProvider}\n    mainnetProvider={mainnetProvider}\n    price={price}\n    web3Modal={web3Modal}\n    loadWeb3Modal={loadWeb3Modal}\n    logoutOfWeb3Modal={logoutOfWeb3Modal}\n    blockExplorer={blockExplorer}\n  />\n\n  ~ Features ~\n  \n  - Provide address={address} and get balance corresponding to the given address\n  - Provide localProvider={localProvider} to access balance on local network\n  - Provide userProvider={userProvider} to display a wallet\n  - Provide mainnetProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\")\n  - Provide price={price} of ether and get your balance converted to dollars\n  - Provide web3Modal={web3Modal}, loadWeb3Modal={loadWeb3Modal}, logoutOfWeb3Modal={logoutOfWeb3Modal}\n              to be able to log in/log out to/from existing accounts\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\n*/\n\nexport default function Account({\n  address,\n  userProvider,\n  localProvider,\n  mainnetProvider,\n  price,\n  minimized,\n  web3Modal,\n  loadWeb3Modal,\n  logoutOfWeb3Modal,\n  blockExplorer,\n}) {\n  const modalButtons = [];\n  if (web3Modal) {\n    if (web3Modal.cachedProvider) {\n      modalButtons.push(\n        <Button\n          key=\"logoutbutton\"\n          style={{ verticalAlign: \"top\", marginLeft: 8, marginTop: 4 }}\n          shape=\"round\"\n          size=\"large\"\n          onClick={logoutOfWeb3Modal}\n        >\n          logout\n        </Button>,\n      );\n    } else {\n      modalButtons.push(\n        <Button\n          key=\"loginbutton\"\n          style={{ verticalAlign: \"top\", marginLeft: 8, marginTop: 4 }}\n          shape=\"round\"\n          size=\"large\"\n          /*type={minimized ? \"default\" : \"primary\"}     too many people just defaulting to MM and having a bad time*/\n          onClick={loadWeb3Modal}\n        >\n          connect\n        </Button>,\n      );\n    }\n  }\n\n  const display = minimized ? (\n    \"\"\n  ) : (\n    <span>\n      {address ? <Address address={address} ensProvider={mainnetProvider} blockExplorer={blockExplorer} /> : \"Connecting...\"}\n      <Balance address={address} provider={localProvider} price={price} />\n      <Wallet address={address} provider={userProvider} ensProvider={mainnetProvider} price={price} />\n    </span>\n  );\n\n  return (\n    <div>\n      {display}\n      {modalButtons}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { isAddress } from \"@ethersproject/address\";\nimport { Address } from \"../../components\";\n\nconst tryToDisplay = thing => {\n  if (thing && thing.toNumber) {\n    try {\n      return thing.toNumber();\n    } catch (e) {\n      return \"Ξ\"+formatUnits(thing, \"ether\");\n    }\n  }\n  if(thing && thing.indexOf && thing.indexOf(\"0x\")==0 && thing.length == 42){\n    return (\n      <Address\n        address={thing}\n        fontSize={22}\n      />\n    )\n  }\n  return JSON.stringify(thing);\n};\n\nexport default tryToDisplay;\n","/* eslint-disable jsx-a11y/accessible-emoji */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { Row, Col, Divider } from \"antd\";\nimport tryToDisplay from \"./utils\";\n\nconst DisplayVariable = ({ contractFunction, functionInfo, refreshRequired, triggerRefresh}) => {\n  const [variable, setVariable] = useState(\"\");\n\n  const refresh = useCallback(async () => {\n    try {\n      const funcResponse = await contractFunction();\n      setVariable(funcResponse);\n      triggerRefresh(false);\n    } catch (e) {\n      console.log(e);\n    }\n  }, [setVariable, contractFunction, triggerRefresh]);\n\n  useEffect(() => {\n    refresh();\n  }, [refresh, refreshRequired, contractFunction]);\n\n  return (\n    <div>\n      <Row>\n        <Col\n          span={8}\n          style={{\n            textAlign: \"right\",\n            opacity: 0.333,\n            paddingRight: 6,\n            fontSize: 24,\n          }}\n        >\n          {functionInfo.name}\n        </Col>\n        <Col span={14}>\n          <h2>{tryToDisplay(variable)}</h2>\n        </Col>\n        <Col span={2}>\n          <h2>\n            <a href=\"#\" onClick={refresh}>\n              🔄\n            </a>\n          </h2>\n        </Col>\n      </Row>\n      <Divider />\n    </div>\n  );\n};\n\nexport default DisplayVariable;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState } from \"react\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexlify } from \"@ethersproject/bytes\";\nimport { Row, Col, Input, Divider, Tooltip, Button } from \"antd\";\nimport { Transactor } from \"../../helpers\";\nimport tryToDisplay from \"./utils\";\nimport Blockies from \"react-blockies\";\nconst { utils } = require(\"ethers\");\n\n\nexport default function FunctionForm({ contractFunction, functionInfo, provider, gasPrice, triggerRefresh }) {\n  const [form, setForm] = useState({});\n  const [txValue, setTxValue] = useState();\n  const [returnValue, setReturnValue] = useState();\n\n  const tx = Transactor(provider, gasPrice);\n\n  let inputIndex = 0;\n  const inputs = functionInfo.inputs.map(input => {\n\n    const key = functionInfo.name + \"_\" + input.name + \"_\" + input.type + \"_\" + inputIndex++\n\n    let buttons = \"\"\n    if (input.type === \"bytes32\") {\n      buttons = (\n        <Tooltip placement=\"right\" title={\"to bytes32\"}>\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              if (utils.isHexString(form[key])) {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.parseBytes32String(form[key]);\n                setForm(formUpdate);\n              } else {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.formatBytes32String(form[key]);\n                setForm(formUpdate);\n              }\n            }}\n          >\n            #️⃣\n            </div>\n        </Tooltip>\n      )\n    } else if (input.type === \"bytes\") {\n      buttons = (\n        <Tooltip placement=\"right\" title={\"to hex\"}>\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              if (utils.isHexString(form[key])) {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.toUtf8String(form[key]);\n                setForm(formUpdate);\n              } else {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.hexlify(utils.toUtf8Bytes(form[key]))\n                setForm(formUpdate);\n              }\n            }}\n          >\n            #️⃣\n            </div>\n        </Tooltip>\n      )\n    } else if (input.type == \"uint256\") {\n      buttons = (\n        <Tooltip placement=\"right\" title={\"* 10 ** 18\"}>\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              const formUpdate = { ...form };\n              formUpdate[key] = utils.parseEther(form[key])\n              setForm(formUpdate);\n            }}\n          >\n            ✴️\n            </div>\n        </Tooltip>\n      )\n    } else if (input.type == \"address\") {\n      const possibleAddress = form[key]&&form[key].toLowerCase&&form[key].toLowerCase().trim()\n      if(possibleAddress && possibleAddress.length==42){\n        buttons = (\n          <Tooltip placement=\"right\" title={\"blockie\"}>\n            <Blockies seed={possibleAddress} scale={3} />\n          </Tooltip>\n        )\n      }\n    }\n\n\n\n\n    return (\n      <div style={{ margin: 2 }} key={key}>\n        <Input\n          size=\"large\"\n          placeholder={input.name ? input.type + \" \" + input.name : input.type}\n          autoComplete=\"off\"\n          value={form[key]}\n          name={key}\n          onChange={(event) => {\n            const formUpdate = { ...form };\n            formUpdate[event.target.name] = event.target.value;\n            setForm(formUpdate);\n          }}\n          suffix={buttons}\n        />\n      </div>\n    )\n  });\n\n  const txValueInput = (\n    <div style={{ margin: 2 }} key={\"txValueInput\"}>\n      <Input\n        placeholder=\"transaction value\"\n        onChange={e => setTxValue(e.target.value)}\n        value={txValue}\n        addonAfter={\n          <div>\n            <Row>\n              <Col span={16}>\n                <Tooltip placement=\"right\" title={\" * 10^18 \"}>\n                  <div\n                    type=\"dashed\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={async () => {\n                      let floatValue = parseFloat(txValue)\n                      if(floatValue) setTxValue(\"\" + floatValue * 10 ** 18);\n                    }}\n                  >\n                    ✳️\n                  </div>\n                </Tooltip>\n              </Col>\n              <Col span={16}>\n                <Tooltip placement=\"right\" title={\"number to hex\"}>\n                  <div\n                    type=\"dashed\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={async () => {\n                      setTxValue(BigNumber.from(txValue).toHexString());\n                    }}\n                  >\n                    #️⃣\n                </div>\n                </Tooltip>\n              </Col>\n            </Row>\n          </div>\n        }\n      />\n    </div>\n  );\n\n  if (functionInfo.payable) {\n    inputs.push(txValueInput);\n  }\n\n  const buttonIcon = functionInfo.type === \"call\" ? <Button style={{ marginLeft: -32 }}>Read📡</Button> : <Button style={{ marginLeft: -32 }}>Send💸</Button>;\n  inputs.push(\n    <div style={{ cursor: \"pointer\", margin: 2 }} key={\"goButton\"}>\n      <Input\n        onChange={e => setReturnValue(e.target.value)}\n        defaultValue=\"\"\n        bordered={false}\n        disabled={true}\n        value={returnValue}\n        suffix={\n          <div\n            style={{ width: 50, height: 30, margin: 0 }}\n            type=\"default\"\n            onClick={async () => {\n              let innerIndex = 0\n              const args = functionInfo.inputs.map((input) => {\n                const key = functionInfo.name + \"_\" + input.name + \"_\" + input.type + \"_\" + innerIndex++\n                let value = form[key]\n                if(input.baseType==\"array\"){\n                  value = JSON.parse(value)\n                } else if(input.type === \"bool\"){\n                  if(value==='true' || value==='1' || value ===\"0x1\"|| value ===\"0x01\"|| value ===\"0x0001\"){\n                    value = 1;\n                  }else{\n                    value = 0;\n                  }\n                }\n                return value\n              });\n\n              let result\n              if(functionInfo.stateMutability === \"view\"||functionInfo.stateMutability === \"pure\"){\n                const returned = await contractFunction(...args)\n                result = tryToDisplay(returned);\n              }else{\n                const overrides = {};\n                if (txValue) {\n                  overrides.value = txValue; // ethers.utils.parseEther()\n                }\n                // Uncomment this if you want to skip the gas estimation for each transaction\n                // overrides.gasLimit = hexlify(1200000);\n\n\n                // console.log(\"Running with extras\",extras)\n                const returned = await tx(contractFunction(...args, overrides));\n                result = tryToDisplay(returned);\n              }\n\n\n              console.log(\"SETTING RESULT:\", result);\n              setReturnValue(result);\n              triggerRefresh(true);\n            }}\n          >\n            {buttonIcon}\n          </div>\n        }\n      />\n    </div>,\n  );\n\n  return (\n    <div>\n      <Row>\n        <Col\n          span={8}\n          style={{\n            textAlign: \"right\",\n            opacity: 0.333,\n            paddingRight: 6,\n            fontSize: 24,\n          }}\n        >\n          {functionInfo.name}\n        </Col>\n        <Col span={16}>{inputs}</Col>\n      </Row>\n      <Divider />\n    </div>\n  );\n}\n","import React, { useMemo, useState } from \"react\";\nimport { Card } from \"antd\";\nimport { useContractLoader, useContractExistsAtAddress } from \"../../hooks\";\nimport Account from \"../Account\";\nimport DisplayVariable from \"./DisplayVariable\";\nimport FunctionForm from \"./FunctionForm\";\n\nconst noContractDisplay = (\n  <div>\n    Loading...{\" \"}\n    <div style={{ padding: 32 }}>\n      You need to run{\" \"}\n      <span class=\"highlight\" style={{ marginLeft: 4, /*backgroundColor: \"#f1f1f1\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n        yarn run chain\n      </span>{\" \"}\n      and{\" \"}\n      <span class=\"highlight\" style={{ marginLeft: 4, /*backgroundColor: \"#f1f1f1\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n        yarn run deploy\n      </span>{\" \"}\n      to see your contract here.\n    </div>\n    <div style={{ padding: 32 }}>\n      <span style={{ marginRight: 4 }} role=\"img\" aria-label=\"warning\">\n        ☢️\n      </span>\n      Warning: You might need to run\n      <span class=\"highlight\" style={{ marginLeft: 4, /*backgroundColor: \"#f1f1f1\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n        yarn run deploy\n      </span>{\" \"}\n      <i>again</i> after the frontend comes up!\n    </div>\n  </div>\n);\n\nconst isQueryable = fn => (fn.stateMutability === \"view\" || fn.stateMutability === \"pure\") && fn.inputs.length === 0;\n\nexport default function Contract({ customContract, account, gasPrice, signer, provider, name, show, price, blockExplorer }) {\n\n  const contracts = useContractLoader(provider);\n  let contract\n  if(!customContract){\n    contract = contracts ? contracts[name] : \"\";\n  }else{\n    contract = customContract\n  }\n\n  const address = contract ? contract.address : \"\";\n  const contractIsDeployed = useContractExistsAtAddress(provider, address);\n\n  const displayedContractFunctions = useMemo(\n    () =>\n      contract\n        ? Object.values(contract.interface.functions).filter(\n            fn => fn.type === \"function\" && !(show && show.indexOf(fn.name) < 0),\n          )\n        : [],\n    [contract, show],\n  );\n\n  const [refreshRequired, triggerRefresh] = useState(false)\n  const contractDisplay = displayedContractFunctions.map(fn => {\n    if (isQueryable(fn)) {\n      // If there are no inputs, just display return value\n      return <DisplayVariable key={fn.name} contractFunction={contract[fn.name]} functionInfo={fn} refreshRequired={refreshRequired} triggerRefresh={triggerRefresh}/>;\n    }\n    // If there are inputs, display a form to allow users to provide these\n    return (\n      <FunctionForm\n        key={\"FF\" + fn.name}\n        contractFunction={(fn.stateMutability === \"view\" || fn.stateMutability === \"pure\")?contract[fn.name]:contract.connect(signer)[fn.name]}\n        functionInfo={fn}\n        provider={provider}\n        gasPrice={gasPrice}\n        triggerRefresh={triggerRefresh}\n      />\n    );\n  });\n\n  return (\n    <div style={{ margin: \"auto\", width: \"70vw\" }}>\n      <Card\n        title={\n          <div>\n            {name}\n            <div style={{ float: \"right\" }}>\n              <Account\n                address={address}\n                localProvider={provider}\n                injectedProvider={provider}\n                mainnetProvider={provider}\n                price={price}\n                blockExplorer={blockExplorer}\n              />\n              {account}\n            </div>\n          </div>\n        }\n        size=\"large\"\n        style={{ marginTop: 25, width: \"100%\" }}\n        loading={contractDisplay && contractDisplay.length <= 0}\n      >\n        {contractIsDeployed ? contractDisplay : noContractDisplay}\n      </Card>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button, Modal, Divider } from \"antd\";\nimport { DollarCircleOutlined } from \"@ant-design/icons\";\nimport { RampInstantSDK } from \"@ramp-network/ramp-instant-sdk\";\n\n// added display of 0 if price={price} is not provided\n\n/*\n  ~ What it does? ~\n\n  Displays current ETH price and gives options to buy ETH through Wyre/Ramp/Coinbase\n                            or get through Rinkeby/Ropsten/Kovan/Goerli\n\n  ~ How can I use? ~\n\n  <Ramp \n    price={price} \n    address={address}\n  />\n\n  ~ Features ~\n\n  - Ramp opens directly in the application, component uses RampInstantSDK\n  - Provide price={price} and current ETH price will be displayed\n  - Provide address={address} and your address will be pasted into Wyre/Ramp instantly\n*/\n\nexport default function Ramp(props) {\n  const [modalUp, setModalUp] = useState(\"down\");\n\n  const type = \"default\";\n\n  let allFaucets = []\n  for(let n in props.networks){\n    if(props.networks[n].chainId!=31337&&props.networks[n].chainId!=1){\n      allFaucets.push(\n        <p key={props.networks[n].id}>\n          <Button\n            style={{color:props.networks[n].color}}\n            type={type}\n            size=\"large\"\n            shape=\"round\"\n            onClick={() => {\n              window.open(props.networks[n].faucet);\n            }}\n          >\n            {props.networks[n].name}\n          </Button>\n        </p>\n      )\n    }\n  }\n\n  return (\n    <div>\n      <Button\n        size=\"large\"\n        shape=\"round\"\n        onClick={() => {\n          setModalUp(\"up\");\n        }}\n      >\n        <DollarCircleOutlined style={{ color: \"#52c41a\" }} /> {typeof props.price == \"undefined\" ? 0 : props.price.toFixed(2)}\n      </Button>\n      <Modal\n        title=\"Buy ETH\"\n        visible={modalUp === \"up\"}\n        onCancel={() => {\n          setModalUp(\"down\");\n        }}\n        footer={[\n          <Button\n            key=\"back\"\n            onClick={() => {\n              setModalUp(\"down\");\n            }}\n          >\n            cancel\n          </Button>,\n        ]}\n      >\n        <p>\n          <Button\n            type={type}\n            size=\"large\"\n            shape=\"round\"\n            onClick={() => {\n              window.open(\"https://pay.sendwyre.com/purchase?destCurrency=ETH&sourceAmount=25&dest=\" + props.address);\n            }}\n          >\n            <span style={{ paddingRight: 15 }} role=\"img\">\n              <span role=\"img\" aria-label=\"flag-us\">🇺🇸</span>\n            </span>\n            Wyre\n          </Button>\n        </p>\n        <p>\n          {\" \"}\n          <Button\n            type={type}\n            size=\"large\"\n            shape=\"round\"\n            onClick={() => {\n              new RampInstantSDK({\n                hostAppName: \"scaffold-eth\",\n                hostLogoUrl: \"https://scaffoldeth.io/scaffold-eth.png\",\n                swapAmount: \"100000000000000000\", // 0.1 ETH in wei  ?\n                swapAsset: \"ETH\",\n                userAddress: props.address,\n              })\n                .on(\"*\", event => console.log(event))\n                .show();\n            }}\n          >\n            <span style={{ paddingRight: 15 }} role=\"img\">\n            <span role=\"img\" aria-label=\"flag-gb\">🇬🇧</span>\n            </span>\n            Ramp\n          </Button>\n        </p>\n\n        <p>\n          <Button\n            type={type}\n            size=\"large\"\n            shape=\"round\"\n            onClick={() => {\n              window.open(\"https://www.coinbase.com/buy-ethereum\");\n            }}\n          >\n            <span style={{ paddingRight: 15 }} role=\"img\" aria-label=\"bank\">\n              🏦\n            </span>\n            Coinbase\n          </Button>\n        </p>\n\n        <Divider />\n\n        <h2>Testnet ETH</h2>\n\n        {allFaucets}\n\n      </Modal>\n    </div>\n  );\n}\n","import React, { useState, useCallback } from \"react\";\nimport { Input, Button, Tooltip } from \"antd\";\nimport Blockies from \"react-blockies\";\nimport { SendOutlined } from \"@ant-design/icons\";\nimport { parseEther } from \"@ethersproject/units\";\nimport { Transactor } from \"../helpers\";\nimport Wallet from \"./Wallet\";\nimport { useLookupAddress } from \"eth-hooks\";\n\n// improved a bit by converting address to ens if it exists\n// added option to directly input ens name\n// added placeholder option\n\n/*\n  ~ What it does? ~\n\n  Displays a local faucet to send ETH to given address, also wallet is provided\n\n  ~ How can I use? ~\n\n  <Faucet\n    price={price}\n    localProvider={localProvider}\n    ensProvider={mainnetProvider}\n    placeholder={\"Send local faucet\"}\n  />\n\n  ~ Features ~\n\n  - Provide price={price} of ether and convert between USD and ETH in a wallet\n  - Provide localProvider={localProvider} to be able to send ETH to given address\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n              works both in input field & wallet\n  - Provide placeholder=\"Send local faucet\" value for the input\n*/\n\nexport default function Faucet(props) {\n  const [address, setAddress] = useState();\n\n  let blockie;\n  if (address && typeof address.toLowerCase === \"function\") {\n    blockie = <Blockies seed={address.toLowerCase()} size={8} scale={4} />;\n  } else {\n    blockie = <div />;\n  }\n\n  const ens = useLookupAddress(props.ensProvider, address);\n\n  const updateAddress = useCallback(\n    async newValue => {\n      if (typeof newValue !== \"undefined\") {\n        let address = newValue;\n        if (address.indexOf(\".eth\") > 0 || address.indexOf(\".xyz\") > 0) {\n          try {\n            const possibleAddress = await props.ensProvider.resolveName(address);\n            if (possibleAddress) {\n              address = possibleAddress;\n            }\n            // eslint-disable-next-line no-empty\n          } catch (e) {}\n        }\n        setAddress(address);\n      }\n    },\n    [props.ensProvider, props.onChange],\n  );\n\n  const tx = Transactor(props.localProvider);\n\n  return (\n    <span>\n      <Input\n        size=\"large\"\n        placeholder={props.placeholder ? props.placeholder : \"local faucet\"}\n        prefix={blockie}\n        //value={address}\n        value={ens || address}\n        onChange={e => {\n          //setAddress(e.target.value);\n          updateAddress(e.target.value);\n        }}\n        suffix={\n          <Tooltip title=\"Faucet: Send local ether to an address.\">\n            <Button\n              onClick={() => {\n                tx({\n                  to: address,\n                  value: parseEther(\"0.5\"),\n                });\n                setAddress(\"\");\n              }}\n              shape=\"circle\"\n              icon={<SendOutlined />}\n            />\n            <Wallet color=\"#888888\" provider={props.localProvider} ensProvider={props.ensProvider} price={props.price} />\n          </Tooltip>\n        }\n      />\n    </span>\n  );\n}\n","import React from \"react\";\nimport { PageHeader } from \"antd\";\n\n// displays a page header\n\nexport default function Header() {\n  return (\n    <a href=\"https://github.com/austintgriffith/scaffold-eth\" target=\"_blank\" rel=\"noopener noreferrer\">\n      <PageHeader\n        title=\"🏗 scaffold-eth\"\n        subTitle=\"👩‍🔬 Buyer pays to mint NFT example\"\n        style={{ cursor: \"pointer\" }}\n      />\n    </a>\n  );\n}\n","import React from \"react\";\nimport Blockies from \"react-blockies\";\nimport { Timeline, Typography } from \"antd\";\nimport { SendOutlined, DownloadOutlined, EditOutlined } from \"@ant-design/icons\";\n\nconst { Text } = Typography;\n\n// displays a timeline for scaffold-eth usage\n\nexport default function TimelineDisplay(props) {\n  return (\n    <Timeline mode=\"right\">\n      <Timeline.Item dot=\"💾\">\n        <Text delete>\n          Clone and Install from the{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/austintgriffith/scaffold-eth\">\n            github repo\n          </a>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"⚛️\">\n        <Text delete>\n          Start your frontend app with: <Text strong>yarn start</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"⛓\">\n        <Text delete={props.chainIsUp}>\n          Start your local blockchain with: <Text strong>yarn run chain</Text> (and refresh)\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"📝\">\n        <Text delete={props.hasOwner}>\n          Compile and deploy your smart contract: <Text strong>yarn run deploy</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🤡\">\n        <Text delete={props.isNotSmoort}>\n          Fix error in <Text code>SmartContractWallet.sol</Text> then: <Text strong>yarn run deploy</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot={<SendOutlined style={{ fontSize: \"16px\" }} />} color={props.hasEther ? \"green\" : \"blue\"}>\n        <Text delete={props.hasEther}>\n          Send test ether to your{\" \"}\n          <Blockies seed={(props.address ? props.address : \"\").toLowerCase()} size={8} scale={2} /> address using\n          (bottom left) faucet\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item\n        dot={<DownloadOutlined style={{ fontSize: \"16px\" }} />}\n        color={props.contractHasEther ? \"green\" : \"blue\"}\n      >\n        <Text delete={props.contractHasEther}>\n          Deposit some funds into your{\" \"}\n          <Blockies seed={(props.contractAddress ? props.contractAddress : \"\").toLowerCase()} size={8} scale={2} />{\" \"}\n          smart contract wallet\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item\n        dot={<EditOutlined style={{ fontSize: \"16px\" }} />}\n        color={props.amOwnerOfContract ? \"green\" : \"blue\"}\n      >\n        <Text delete={props.amOwnerOfContract}>\n          Set <b>owner</b> of your{\" \"}\n          <Blockies seed={(props.contractAddress ? props.contractAddress : \"\").toLowerCase()} size={8} scale={2} />{\" \"}\n          smart contract wallet to your{\" \"}\n          <Blockies seed={(props.address ? props.address : \"\").toLowerCase()} size={8} scale={2} /> address\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"☢️\">\n        <Text>\n          Yikes, anyone can take ownership of <Text code>SmartContractWallet.sol</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🔬\">\n        <Text>\n          Test your contract with <Text code>buidler/test/myTest.js</Text> then:\n          <Text strong>yarn run test</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🚀\">\n        <Text>\n          Build something awesome with 🏗 <a href=\"https://github.com/austintgriffith/scaffold-eth\">scaffold-eth</a> and{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/austingriffith\">\n            @ me\n          </a>\n          !\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"📖\">\n        <Text>\n          Read more about{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ethereum.org/developers\">\n            Ethereum\n          </a>\n          ,{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://solidity.readthedocs.io/en/develop/contracts.html\">\n            Solidity\n          </a>\n          , and{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://buidler.dev/tutorial\">\n            Buidler\n          </a>\n        </Text>\n      </Timeline.Item>\n    </Timeline>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"antd\";\n\n// added display of 0 instead of NaN if gas price is not provided\n\n/*\n  ~ What it does? ~\n\n  Displays gas gauge \n\n  ~ How can I use? ~\n\n  <GasGauge \n    gasPrice={gasPrice}\n  />\n\n  ~ Features ~\n\n  - Provide gasPrice={gasPrice} and get current gas gauge\n*/\n\nexport default function GasGauge(props) {\n  \n  return (\n    <Button\n      onClick={() => {\n        window.open(\"https://ethgasstation.info/\");\n      }}\n      size=\"large\"\n      shape=\"round\"\n    >\n      <span style={{ marginRight: 8 }}><span role=\"img\" aria-label=\"fuelpump\">⛽️</span></span>\n      {typeof props.gasPrice == \"undefined\" ? 0 : parseInt(props.gasPrice, 10) / 10 ** 9}g\n    </Button>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Input } from \"antd\";\nconst { utils, constants } = require(\"ethers\");\n\n/*\n  ~ What it does? ~\n\n  Displays input field with options to convert between STRING and BYTES32\n\n  ~ How can I use? ~\n\n  <BytesStringInput\n    autofocus\n    value={\"scaffold-eth\"}\n    placeholder=\"Enter value...\"\n    onChange={value => {\n      setValue(value);\n    }}\n  />\n\n  ~ Features ~\n\n  - Provide value={value} to specify initial string\n  - Provide placeholder=\"Enter value...\" value for the input\n  - Control input change by onChange={value => { setValue(value);}}\n\n*/\n\nexport default function BytesStringInput(props) {\n  const [mode, setMode] = useState(\"STRING\");\n  const [display, setDisplay] = useState();\n  const [value, setValue] = useState(constants.HashZero);\n\n  // current value is the value in bytes32\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\n\n  const option = title => {\n\n    return (\n      <div\n        style={{ cursor: \"pointer\" }}\n        onClick={() => {\n          if (mode === \"STRING\") {\n            setMode(\"BYTES32\");\n            if (!utils.isHexString(currentValue)) {\n                /* in case user enters invalid bytes32 number, \n                   it considers it as string and converts to bytes32 */\n                const changedValue = utils.formatBytes32String(currentValue);\n                setDisplay(changedValue);\n            }\n            else {\n                setDisplay(currentValue);\n            }\n            \n            \n          } \n          else {\n            setMode(\"STRING\");\n            if (currentValue && utils.isHexString(currentValue)) {\n              setDisplay(utils.parseBytes32String(currentValue));\n            } \n            else {\n              setDisplay(currentValue);\n            }\n          }\n        }}\n      >\n        {title}\n      </div>\n    );\n  };\n\n  let addonAfter;\n  if (mode === \"STRING\") {\n    addonAfter = option(\"STRING 🔀\");\n  } else {\n    addonAfter = option(\"BYTES32 🔀\");\n  }\n\n  useEffect(\n    ()=>{\n      if(!currentValue){\n        setDisplay(\"\");\n      }\n    }\n  ,[ currentValue ])\n\n  return (\n    <Input\n      placeholder={props.placeholder ? props.placeholder : \"Enter value in \" + mode}\n      autoFocus={props.autoFocus}\n      value={display}\n      addonAfter={addonAfter}\n      onChange={async e => {\n        const newValue = e.target.value;\n        if (mode === \"STRING\") {\n          //const ethValue = parseFloat(newValue) / props.price;\n          //setValue(ethValue);\n          if (typeof props.onChange === \"function\") {\n            props.onChange(utils.formatBytes32String(newValue));\n          }\n          setValue(utils.formatBytes32String(newValue));\n          setDisplay(newValue);\n\n        } else {\n          if (typeof props.onChange === \"function\") {\n            props.onChange(newValue);\n          }\n          setValue(newValue);\n          setDisplay(newValue);\n        }\n      }}\n    />\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Space, Row, InputNumber, Card, notification, Select, Descriptions, Typography, Button, Divider, Tooltip, Drawer, Modal } from \"antd\";\nimport { SettingOutlined, RetweetOutlined } from '@ant-design/icons';\nimport { ChainId, Token, WETH, Fetcher, Trade, TokenAmount, Percent } from '@uniswap/sdk'\nimport { parseUnits, formatUnits } from \"@ethersproject/units\";\nimport { ethers } from \"ethers\";\nimport { useBlockNumber, usePoller } from \"eth-hooks\";\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { useDebounce } from \"../hooks\";\n\nconst { Option } = Select;\nconst { Text } = Typography;\n\nexport const ROUTER_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'\n\nconst erc20Abi = [\n    \"function balanceOf(address owner) view returns (uint256)\",\n    \"function approve(address _spender, uint256 _value) public returns (bool success)\",\n    \"function allowance(address _owner, address _spender) public view returns (uint256 remaining)\"\n];\n\nconst makeCall = async (callName, contract, args, metadata={}) => {\n  if(contract[callName]) {\n    let result\n    if(args) {\n      result = await contract[callName](...args, metadata)\n    } else {\n      result = await contract[callName]()\n    }\n    return result\n  } else {\n    console.log('no call of that name!')\n  }\n}\n\nlet defaultToken = 'ETH'\nlet defaultTokenOut = 'DAI'\nlet defaultSlippage = '0.5'\nlet defaultTimeLimit = 60 * 10\n\nconst tokenListToObject = (array) =>\n   array.reduce((obj, item) => {\n     obj[item.symbol] = new Token(item.chainId, item.address, item.decimals, item.symbol, item.name)\n     return obj\n   }, {})\n\nfunction Swap({ selectedProvider, tokenListURI }) {\n\n  const [tokenIn, setTokenIn] = useState(defaultToken)\n  const [tokenOut, setTokenOut] = useState(defaultTokenOut)\n  const [exact, setExact] = useState()\n  const [amountIn, setAmountIn] = useState()\n  const [amountInMax, setAmountInMax] = useState()\n  const [amountOut, setAmountOut] = useState()\n  const [amountOutMin, setAmountOutMin] = useState()\n  const [trades, setTrades] = useState()\n  const [routerAllowance, setRouterAllowance] = useState()\n  const [balanceIn, setBalanceIn] = useState()\n  const [balanceOut, setBalanceOut] = useState()\n  const [slippageTolerance, setSlippageTolerance] = useState(new Percent(Math.round(defaultSlippage*100).toString(), \"10000\"))\n  const [timeLimit, setTimeLimit] = useState(defaultTimeLimit)\n  const [swapping, setSwapping] = useState(false)\n  const [approving, setApproving] = useState(false)\n  const [settingsVisible, setSettingsVisible] = useState(false)\n  const [swapModalVisible, setSwapModalVisible] = useState(false)\n\n  const [tokenList, setTokenList] = useState([])\n\n  const [tokens, setTokens] = useState()\n\n  const [invertPrice, setInvertPrice] = useState(false)\n\n  let blockNumber = useBlockNumber(selectedProvider, 3000)\n\n  let signer = selectedProvider.getSigner()\n  let routerContract = new ethers.Contract(ROUTER_ADDRESS, IUniswapV2Router02ABI, signer);\n\n  let _tokenListUri = tokenListURI ? tokenListURI : 'https://gateway.ipfs.io/ipns/tokens.uniswap.org'\n\n  const debouncedAmountIn = useDebounce(amountIn, 500);\n  const debouncedAmountOut = useDebounce(amountOut, 500);\n\n  const activeChainId = (process.env.REACT_APP_NETWORK === 'kovan' ? ChainId.KOVAN : ChainId.MAINNET)\n\n  useEffect(() => {\n    const getTokenList = async () => {\n      console.log(_tokenListUri)\n      try {\n      let tokenList = await fetch(_tokenListUri)\n      let tokenListJson = await tokenList.json()\n      let filteredTokens = tokenListJson.tokens.filter(function (t) {\n        return t.chainId === activeChainId\n      })\n      let ethToken = WETH[activeChainId]\n      ethToken.name = 'Ethereum'\n      ethToken.symbol = 'ETH'\n      ethToken.logoURI = \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png\"\n      let _tokenList = [ethToken, ...filteredTokens]\n      setTokenList(_tokenList)\n      let _tokens = tokenListToObject(_tokenList)\n      setTokens(_tokens)\n    } catch (e) {\n      console.log(e)\n    }\n    }\n    getTokenList()\n  },[tokenListURI])\n\n  const getTrades = async () => {\n    if(tokenIn && tokenOut && (amountIn || amountOut)) {\n\n    let pairs = (arr) => arr.map( (v, i) => arr.slice(i + 1).map(w => [v,w]) ).flat();\n\n    let baseTokens = tokenList.filter(function (t) {\n      return ['DAI', 'USDC', 'USDT', 'COMP', 'ETH', 'MKR', 'LINK', tokenIn, tokenOut].includes(t.symbol)\n    }).map((el) => {\n      return new Token(el.chainId, el.address, el.decimals, el.symbol, el.name)\n    })\n\n    let listOfPairwiseTokens = pairs(baseTokens)\n\n    const getPairs = async (list) => {\n\n      let listOfPromises = list.map(item => Fetcher.fetchPairData(item[0], item[1], selectedProvider))\n      return Promise.all(listOfPromises.map(p => p.catch(() => undefined)));\n    }\n\n    let listOfPairs = await getPairs(listOfPairwiseTokens)\n\n    let bestTrade\n\n    if(exact === 'in') {\n      setAmountInMax()\n      bestTrade = Trade.bestTradeExactIn(\n      listOfPairs.filter(item => item),\n      new TokenAmount(tokens[tokenIn], parseUnits(amountIn.toString(), tokens[tokenIn].decimals)),\n      tokens[tokenOut], { maxNumResults: 3, maxHops: 1 })\n      if(bestTrade[0]) {\n        setAmountOut(bestTrade[0].outputAmount.toSignificant(6))\n      } else { setAmountOut() }\n    } else if (exact === 'out') {\n      setAmountOutMin()\n      bestTrade = Trade.bestTradeExactOut(\n      listOfPairs.filter(item => item),\n      tokens[tokenIn],\n      new TokenAmount(tokens[tokenOut], parseUnits(amountOut.toString(), tokens[tokenOut].decimals)),\n     { maxNumResults: 3, maxHops: 1 })\n      if(bestTrade[0]) {\n        setAmountIn(bestTrade[0].inputAmount.toSignificant(6))\n      } else { setAmountIn() }\n    }\n\n    setTrades(bestTrade)\n\n    console.log(bestTrade)\n\n  }\n  }\n\n  useEffect(() => {\n      getTrades()\n  },[tokenIn, tokenOut, debouncedAmountIn, debouncedAmountOut, slippageTolerance, selectedProvider])\n\n  useEffect(() => {\n    if(trades && trades[0]) {\n      if(exact === 'in') {\n        setAmountOutMin(trades[0].minimumAmountOut(slippageTolerance))\n      } else if (exact === 'out') {\n        setAmountInMax(trades[0].maximumAmountIn(slippageTolerance))\n      }\n    }\n  }, [slippageTolerance, amountIn, amountOut, trades])\n\n  const getBalance = async (_token, _account, _contract) => {\n\n    let newBalance\n    if(_token === 'ETH') {\n      newBalance = await selectedProvider.getBalance(_account)\n    } else {\n      newBalance = await makeCall('balanceOf', _contract, [_account])\n    }\n    return newBalance\n  }\n\n  const getAccountInfo = async () => {\n\n    if(tokens) {\n\n      let accountList = await selectedProvider.listAccounts()\n\n      if(tokenIn) {\n        let tempContractIn = new ethers.Contract(tokens[tokenIn].address, erc20Abi, selectedProvider);\n        let newBalanceIn = await getBalance(tokenIn, accountList[0], tempContractIn)\n        setBalanceIn(newBalanceIn)\n\n        let allowance\n\n        if(tokenIn === 'ETH') {\n          setRouterAllowance()\n        } else {\n          allowance = await makeCall('allowance',tempContractIn,[accountList[0],ROUTER_ADDRESS])\n          setRouterAllowance(allowance)\n        }\n        }\n\n      if(tokenOut) {\n        let tempContractOut = new ethers.Contract(tokens[tokenOut].address, erc20Abi, selectedProvider);\n        let newBalanceOut = await getBalance(tokenOut, accountList[0], tempContractOut)\n        setBalanceOut(newBalanceOut)\n      }\n    }\n  }\n\n  usePoller(getAccountInfo, 6000)\n\n  let route = trades ? (trades.length > 0 ? trades[0].route.path.map(function(item) {\n    return item['symbol'];\n  }) : []) : []\n\n  const updateRouterAllowance = async (newAllowance) => {\n    setApproving(true)\n    try {\n    let tempContract = new ethers.Contract(tokens[tokenIn].address, erc20Abi, signer);\n    let result = await makeCall('approve', tempContract, [ROUTER_ADDRESS, newAllowance])\n    console.log(result)\n    setApproving(false)\n    return true\n  } catch(e) {\n      notification.open({\n        message: 'Approval unsuccessful',\n        description:\n        `Error: ${e.message}`,\n      });\n    }\n  }\n\n  const approveRouter = async () => {\n    let approvalAmount = exact === 'in' ? ethers.utils.hexlify(parseUnits(amountIn.toString(), tokens[tokenIn].decimals)) : amountInMax.raw.toString()\n    console.log(approvalAmount)\n    let approval = updateRouterAllowance(approvalAmount)\n    if(approval) {\n      notification.open({\n        message: 'Token transfer approved',\n        description:\n        `You can now swap up to ${amountIn} ${tokenIn}`,\n      });\n    }\n  }\n\n  const removeRouterAllowance = async () => {\n    let approvalAmount = ethers.utils.hexlify(0)\n    console.log(approvalAmount)\n    let removal = updateRouterAllowance(approvalAmount)\n    if(removal) {\n      notification.open({\n        message: 'Token approval removed',\n        description:\n        `The router is no longer approved for ${tokenIn}`,\n      });\n    }\n  }\n\n  const executeSwap = async () => {\n    setSwapping(true)\n    try {\n      let args\n      let metadata = {}\n\n      let call\n      let deadline = Math.floor(Date.now() / 1000) + timeLimit\n      let path = trades[0].route.path.map(function(item) {\n        return item['address'];\n      })\n      console.log(path)\n      let accountList = await selectedProvider.listAccounts()\n      let address = accountList[0]\n\n      if (exact === 'in') {\n        let _amountIn = ethers.utils.hexlify(parseUnits(amountIn.toString(), tokens[tokenIn].decimals))\n        let _amountOutMin = ethers.utils.hexlify(ethers.BigNumber.from(amountOutMin.raw.toString()))\n        if (tokenIn === 'ETH') {\n          call = 'swapExactETHForTokens'\n          args = [_amountOutMin, path, address, deadline]\n          metadata['value'] = _amountIn\n        } else {\n          call = tokenOut === 'ETH' ? 'swapExactTokensForETH' : 'swapExactTokensForTokens'\n          args = [_amountIn, _amountOutMin, path, address, deadline]\n        }\n      } else if (exact === 'out') {\n        let _amountOut = ethers.utils.hexlify(parseUnits(amountOut.toString(), tokens[tokenOut].decimals))\n        let _amountInMax = ethers.utils.hexlify(ethers.BigNumber.from(amountInMax.raw.toString()))\n        if (tokenIn === 'ETH') {\n          call = 'swapETHForExactTokens'\n          args = [_amountOut, path, address, deadline]\n          metadata['value'] = _amountInMax\n        } else {\n          call = tokenOut === 'ETH' ? 'swapTokensForExactETH' : 'swapTokensForExactTokens'\n          args = [_amountOut, _amountInMax, path, address, deadline]\n        }\n      }\n      console.log(call, args, metadata)\n      let result = await makeCall(call, routerContract, args, metadata)\n      console.log(result)\n      notification.open({\n        message: 'Swap complete 🦄',\n        description:\n        <><Text>{`Swapped ${tokenIn} for ${tokenOut}, transaction: `}</Text><Text copyable>{result.hash}</Text></>,\n      });\n      setSwapping(false)\n  } catch (e) {\n    console.log(e)\n    setSwapping(false)\n    notification.open({\n      message: 'Swap unsuccessful',\n      description:\n      `Error: ${e.message}`,\n    });\n  }\n  }\n\n  const showSwapModal = () => {\n    setSwapModalVisible(true);\n  };\n\n  const handleSwapModalOk = () => {\n    setSwapModalVisible(false);\n    executeSwap()\n  };\n\n  const handleSwapModalCancel = () => {\n    setSwapModalVisible(false);\n  };\n\n  let insufficientBalance = balanceIn ? parseFloat(formatUnits(balanceIn,tokens[tokenIn].decimals)) < amountIn : null\n  let inputIsToken = tokenIn !== 'ETH'\n  let insufficientAllowance = !inputIsToken ? false : routerAllowance ? parseFloat(formatUnits(routerAllowance,tokens[tokenIn].decimals)) < amountIn : null\n  let formattedBalanceIn = balanceIn?parseFloat(formatUnits(balanceIn,tokens[tokenIn].decimals)).toPrecision(6):null\n  let formattedBalanceOut = balanceOut?parseFloat(formatUnits(balanceOut,tokens[tokenOut].decimals)).toPrecision(6):null\n\n  let metaIn = tokens && tokenList && tokenIn ? tokenList.filter(function (t) {\n    return t.address === tokens[tokenIn].address\n  })[0] : null\n  let metaOut = tokens && tokenList && tokenOut ? tokenList.filter(function (t) {\n    return t.address === tokens[tokenOut].address\n    })[0] : null\n\n  const cleanIpfsURI = (uri) => {\n    try {\n    return (uri).replace('ipfs://','https://ipfs.io/ipfs/')\n  } catch(e) {\n    console.log(e, uri)\n    return uri\n  }\n  }\n\n  let logoIn = metaIn?cleanIpfsURI(metaIn.logoURI):null\n  let logoOut = metaOut?cleanIpfsURI(metaOut.logoURI):null\n\n  let rawPrice = trades&&trades[0]?trades[0].executionPrice:null\n  let price = rawPrice?rawPrice.toSignificant(7):null\n  let priceDescription = rawPrice ? (invertPrice ? `${(rawPrice.invert()).toSignificant(7)} ${tokenIn} per ${tokenOut}` : `${price} ${tokenOut} per ${tokenIn}`) : null\n\n  let priceWidget = (\n    <Space>\n    <Text type=\"secondary\">{priceDescription}</Text>\n    <Button type=\"text\" onClick={() => {setInvertPrice(!invertPrice)}}><RetweetOutlined /></Button>\n    </Space>\n  )\n\n  let swapModal = (\n    <Modal title=\"Confirm swap\" visible={swapModalVisible} onOk={handleSwapModalOk} onCancel={handleSwapModalCancel}>\n      <Row><Space><img src={logoIn} alt={tokenIn} width='30'/>{amountIn}{tokenIn}</Space></Row>\n      <Row justify='center' align='middle' style={{width:30}}><span>↓</span></Row>\n      <Row><Space><img src={logoOut} alt={tokenOut} width='30'/>{amountOut}{tokenOut}</Space></Row>\n      <Divider/>\n      <Row>{priceWidget}</Row>\n      <Row>{trades&&((amountOutMin && exact==='in') || (amountInMax && exact==='out'))?(exact==='in'?`Output is estimated. You will receive at least ${amountOutMin.toSignificant(6)} ${tokenOut} or the transaction will revert.`:`Input is estimated. You will sell at most ${amountInMax.toSignificant(6)} ${tokenIn} or the transaction will revert.`):null}</Row>\n    </Modal>\n  )\n\n  return (\n    <Card title={<Space><img src=\"https://ipfs.io/ipfs/QmXttGpZrECX5qCyXbBQiqgQNytVGeZW5Anewvh2jc4psg\" width='40' alt='uniswapLogo'/><Typography>Uniswapper</Typography></Space>} extra={<Button type=\"text\" onClick={() => {setSettingsVisible(true)}}><SettingOutlined /></Button>}>\n    <Space direction=\"vertical\">\n    <Row justify=\"center\" align=\"middle\">\n    <Card size=\"small\" type=\"inner\" title={`From${exact==='out' && tokenIn && tokenOut?' (estimate)':''}`} extra={<><img src={logoIn} alt={tokenIn} width='30'/><Button type=\"link\" onClick={() => {\n      setAmountOut()\n      setAmountIn(formatUnits(balanceIn,tokens[tokenIn].decimals))\n      setAmountOutMin()\n      setAmountInMax()\n      setExact('in')\n    }}>{formattedBalanceIn}</Button></>} style={{ width: 400, textAlign: 'left' }}>\n      <InputNumber style={{width: '160px'}} min={0} size={'large'} value={amountIn} onChange={(e) => {\n        setAmountOut()\n        setTrades()\n        setAmountIn(e)\n        setExact('in')\n      }}/>\n      <Select showSearch value={tokenIn} style={{width: '120px'}} size={'large'} bordered={false} defaultValue={defaultToken} onChange={(value) => {\n        console.log(value)\n        if(value===tokenOut) {\n          console.log('switch!', tokenIn)\n          setTokenOut(tokenIn)\n          setAmountOut(amountIn)\n          setBalanceOut(balanceIn)\n        }\n        setTokenIn(value)\n        setTrades()\n        setAmountIn()\n        setExact('out')\n        setBalanceIn()\n      }} filterOption={(input, option) =>\n      option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      } optionFilterProp=\"children\">\n      {tokenList.map(token => (\n        <Option key={token.symbol} value={token.symbol}>{token.symbol}</Option>\n      ))}\n      </Select>\n    </Card>\n    </Row>\n    <Row justify=\"center\" align=\"middle\">\n      <Tooltip title={route.join(\"->\")}><span>↓</span></Tooltip>\n    </Row>\n    <Row justify=\"center\" align=\"middle\">\n    <Card size=\"small\" type=\"inner\" title={`To${exact==='in' && tokenIn && tokenOut?' (estimate)':''}`} extra={<><img src={logoOut} width='30' alt={tokenOut}/><Button type=\"text\">{formattedBalanceOut}</Button></>} style={{ width: 400, textAlign: 'left' }}>\n      <InputNumber style={{width: '160px'}} size={'large'} min={0} value={amountOut} onChange={(e) => {\n        setAmountOut(e)\n        setAmountIn()\n        setTrades()\n        setExact('out')\n      }}/>\n      <Select showSearch value={tokenOut} style={{width: '120px'}} size={'large'} bordered={false} onChange={(value) => {\n        console.log(value, tokenIn, tokenOut)\n        if(value===tokenIn) {\n          console.log('switch!', tokenOut)\n          setTokenIn(tokenOut)\n          setAmountIn(amountOut)\n          setBalanceIn(balanceOut)\n        }\n        setTokenOut(value)\n        setExact('in')\n        setAmountOut()\n        setTrades()\n        setBalanceOut()\n      }} filterOption={(input, option) =>\n      option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      } optionFilterProp=\"children\">\n      {tokenList.map(token => (\n        <Option key={token.symbol} value={token.symbol}>{token.symbol}</Option>\n      ))}\n      </Select>\n    </Card>\n    </Row>\n    <Row justify=\"center\" align=\"middle\">\n      {priceDescription?priceWidget:null}\n    </Row>\n    <Row justify=\"center\" align=\"middle\">\n    <Space>\n      {inputIsToken?<Button size=\"large\" loading={approving} disabled={!insufficientAllowance} onClick={approveRouter}>{(!insufficientAllowance&&amountIn&&amountOut)?'Approved':'Approve'}</Button>:null}\n      <Button size=\"large\" loading={swapping} disabled={insufficientAllowance || insufficientBalance || !amountIn || !amountOut} onClick={showSwapModal}>{insufficientBalance?'Insufficient balance':'Swap!'}</Button>\n      {swapModal}\n    </Space>\n    </Row>\n    </Space>\n    <Drawer visible={settingsVisible} onClose={() => { setSettingsVisible(false) }} width={500}>\n    <Descriptions title=\"Details\" column={1} style={{textAlign: 'left'}}>\n      <Descriptions.Item label=\"blockNumber\">{blockNumber}</Descriptions.Item>\n      <Descriptions.Item label=\"routerAllowance\"><Space>{routerAllowance?formatUnits(routerAllowance,tokens[tokenIn].decimals):null}{routerAllowance>0?<Button onClick={removeRouterAllowance}>Remove Allowance</Button>:null}</Space></Descriptions.Item>\n      <Descriptions.Item label=\"route\">{route.join(\"->\")}</Descriptions.Item>\n      <Descriptions.Item label=\"exact\">{exact}</Descriptions.Item>\n      <Descriptions.Item label=\"bestPrice\">{trades ? (trades.length > 0 ? trades[0].executionPrice.toSignificant(6) : null) : null}</Descriptions.Item>\n      <Descriptions.Item label=\"nextMidPrice\">{trades ? (trades.length > 0 ? trades[0].nextMidPrice.toSignificant(6) : null) : null}</Descriptions.Item>\n      <Descriptions.Item label=\"priceImpact\">{trades ? (trades.length > 0 ? trades[0].priceImpact.toSignificant(6) : null) : null}</Descriptions.Item>\n      <Descriptions.Item label=\"slippageTolerance\">{<InputNumber\n        defaultValue={defaultSlippage}\n        min={0}\n        max={100}\n        precision={2}\n        formatter={value => `${value}%`}\n        parser={value => value.replace('%', '')}\n        onChange={(value) => {\n          console.log(value)\n\n         let slippagePercent = new Percent(Math.round(value*100).toString(), \"10000\")\n         setSlippageTolerance(slippagePercent)\n       }}\n      />}</Descriptions.Item>\n      <Descriptions.Item label=\"amountInMax\">{amountInMax?amountInMax.toExact():null}</Descriptions.Item>\n      <Descriptions.Item label=\"amountOutMin\">{amountOutMin?amountOutMin.toExact():null}</Descriptions.Item>\n      <Descriptions.Item label=\"timeLimitInSeconds\">{<InputNumber\n              min={0}\n              max={3600}\n              defaultValue={defaultTimeLimit}\n              onChange={(value) => {\n              console.log(value)\n              setTimeLimit(value)\n             }}\n            />}</Descriptions.Item>\n    </Descriptions>\n    </Drawer>\n    </Card>\n  )\n\n}\n\nexport default Swap;\n","import React, { useEffect, useState } from \"react\";\nimport { Switch } from \"antd\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\n\nexport default function ThemeSwitcher() {\n\n  const theme = window.localStorage.getItem(\"theme\");\n  const [isDarkMode, setIsDarkMode] = useState(!theme || theme == \"light\" ? false : true);\n  const { switcher, currentTheme, status, themes } = useThemeSwitcher();\n\n  useEffect(() => {\n    window.localStorage.setItem(\"theme\", currentTheme);\n  }, [currentTheme]);\n\n  const toggleTheme = (isChecked) => {\n    setIsDarkMode(isChecked);\n    switcher({ theme: isChecked ? themes.dark : themes.light });\n  };\n\n  // Avoid theme change flicker\n  // if (status === \"loading\") {\n  //   return null;\n  // }\n\n  return (\n    <div className=\"main fade-in\" style={{position:\"fixed\",right:8,bottom:8}}>\n      <span style={{padding:8}}>{currentTheme==\"light\" ? \"☀️\" : \"🌜\"}</span>\n      <Switch checked={isDarkMode} onChange={toggleTheme} />\n    </div>\n  );\n}\n","/* eslint-disable jsx-a11y/accessible-emoji */\n\nimport React, { useState } from \"react\";\nimport { formatEther } from \"@ethersproject/units\";\nimport { Address, AddressInput } from \"../components\";\nimport { Select } from \"antd\";\nimport { useTokenList } from \"../hooks\";\n\nconst { Option } = Select;\n\nexport default function Hints({yourLocalBalance, mainnetProvider, price, address }) {\n\n  // Get a list of tokens from a tokenlist -> see tokenlists.org!\n  const [selectedToken, setSelectedToken] = useState(\"Pick a token!\");\n  let listOfTokens = useTokenList(\"https://raw.githubusercontent.com/SetProtocol/uniswap-tokenlist/main/set.tokenlist.json\")\n\n  return (\n    <div>\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>👷</span>\n        Edit your <b>contract</b> in\n        <span class=\"highlight\" style={{ marginLeft: 4, /*backgroundColor: \"#f9f9f9\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          packages/hardhat/contracts\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🛰</span>\n        <b>compile/deploy</b> with\n        <span class=\"highlight\" style={{ marginLeft: 4, /*backgroundColor: \"#f1f1f1\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          yarn run deploy\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🚀</span>\n        Your <b>contract artifacts</b> are automatically injected into your frontend at\n        <span class=\"highlight\" style={{ marginLeft: 4, /*backgroundColor: \"#f9f9f9\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          packages/react-app/src/contracts/\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🎛</span>\n        Edit your <b>frontend</b> in\n        <span class=\"highlight\" style={{ marginLeft: 4, /*backgroundColor: \"#f9f9f9\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          packages/reactapp/src/App.js\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>🔭</span>\n        explore the\n        <span\n          class=\"highlight\"\n          style={{\n            marginLeft: 4,\n            marginRight: 4,\n            /*backgroundColor: \"#f9f9f9\",*/\n            padding: 4,\n            borderRadius: 4,\n            fontWeight: \"bolder\",\n          }}\n        >\n          🖇 hooks\n        </span>\n        and\n        <span class=\"highlight\" style={{ marginLeft: 4, /*backgroundColor: \"#f9f9f9\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          📦 components\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        for example, the\n        <span class=\"highlight\" style={{ margin: 4, /*backgroundColor: \"#f9f9f9\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          useBalance()\n        </span>{\" \"}\n        hook keeps track of your balance: <b>{formatEther(yourLocalBalance?yourLocalBalance:0)}</b>\n      </div>\n\n      <div style={{margin:8}}>\n      <div><b>useTokenList()</b> can get you an array of tokens from <a href=\"https://tokenlists.org\" target=\"_blank\">tokenlists.org!</a></div>\n      <Select showSearch value={selectedToken}\n        onChange={(value) => {\n          console.log(`selected ${value}`)\n          setSelectedToken(value)\n          }}\n        filterOption={(input, option) =>\n          option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n        optionFilterProp=\"children\">\n        {listOfTokens.map(token => (\n        <Option key={token.symbol} value={token.symbol}>{token.symbol}</Option>\n        ))}\n        </Select>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        as you build your app you'll need web3 specific components like an\n        <span class=\"highlight\" style={{ margin: 4, /*backgroundColor: \"#f9f9f9\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          {\"<AddressInput/>\"}\n        </span>\n        component:\n        <div style={{ width: 350, padding: 16, margin: \"auto\" }}>\n          <AddressInput ensProvider={mainnetProvider} />\n        </div>\n        <div>(try putting in your address, an ens address, or scanning a QR code)</div>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        this balance could be multiplied by\n        <span class=\"highlight\" style={{ margin: 4, /*backgroundColor: \"#f9f9f9\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          price\n        </span>{\" \"}\n        that is loaded with the\n        <span class=\"highlight\" style={{ margin: 4, /*backgroundColor: \"#f9f9f9\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          usePrice\n        </span>{\" \"}\n        hook with the current value: <b>${price}</b>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>💧</span>\n        use the <b>faucet</b> to send funds to\n        <span class=\"highlight\" style={{ marginLeft: 4, /*backgroundColor: \"#f9f9f9\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          <Address address={address} minimized /> {address}\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>📡</span>\n        deploy to a testnet or mainnet by editing\n        <span class=\"highlight\" style={{ marginLeft: 4, /*backgroundColor: \"#f9f9f9\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          packages/hardhat/hardhat.config.js\n        </span>\n        and running\n        <span class=\"highlight\" style={{ marginLeft: 4, /*backgroundColor: \"#f1f1f1\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          yarn run deploy\n        </span>\n      </div>\n\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>🔑</span>\n        <span class=\"highlight\" style={{ marginLeft: 4, /*backgroundColor: \"#f1f1f1\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          yarn run generate\n        </span>\n        will create a deployer account in\n        <span class=\"highlight\" style={{ marginLeft: 4, /*backgroundColor: \"#f9f9f9\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          packages/hardhat\n        </span>\n        <div class=\"highlight\" style={{marginTop:8}}>(use <span style={{ marginLeft: 4, /*backgroundColor: \"#f1f1f1\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n            yarn run account\n          </span> to display deployer address and balance)</div>\n      </div>\n\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>⚙️</span>\n        build your app with\n        <span class=\"highlight\" style={{ marginLeft: 4, /*backgroundColor: \"#f1f1f1\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          yarn run build\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>🚢</span>\n        ship it!\n        <span class=\"highlight\" style={{ marginLeft: 4, /*backgroundColor: \"#f1f1f1\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          yarn run surge\n        </span>\n        or\n        <span class=\"highlight\" style={{ marginLeft: 4, /*backgroundColor: \"#f1f1f1\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          yarn run s3\n        </span>\n        or\n        <span class=\"highlight\" style={{ marginLeft: 4, /*backgroundColor: \"#f1f1f1\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          yarn run ipfs\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>💬</span>\n        for support, join this\n        <span class=\"highlight\" style={{ marginLeft: 4, /*backgroundColor: \"#f9f9f9\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\">\n            Telegram Chat\n          </a>\n        </span>\n      </div>\n      <div style={{ padding: 128 }}>\n        🛠 Check out your browser's developer console for more... (inpect -> console) 🚀\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable jsx-a11y/accessible-emoji */\n\nimport React, { useState } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Button, Typography, Table, Input } from \"antd\";\nimport { useQuery, gql } from '@apollo/client';\nimport { Address } from \"../components\";\nimport GraphiQL from 'graphiql';\nimport 'graphiql/graphiql.min.css';\nimport fetch from 'isomorphic-fetch';\n\n  const highlight = { marginLeft: 4, marginRight: 8, /*backgroundColor: \"#f9f9f9\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }\n\nfunction Subgraph(props) {\n\n  function graphQLFetcher(graphQLParams) {\n    return fetch(props.subgraphUri, {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(graphQLParams),\n    }).then(response => response.json());\n  }\n\n  const EXAMPLE_GRAPHQL = `\n  {\n    purposes(first: 25, orderBy: createdAt, orderDirection: desc) {\n      id\n      purpose\n      createdAt\n      sender {\n        id\n      }\n    }\n    senders {\n      id\n      address\n      purposeCount\n    }\n  }\n  `\n  const EXAMPLE_GQL = gql(EXAMPLE_GRAPHQL)\n  const { loading, data } = useQuery(EXAMPLE_GQL,{pollInterval: 2500});\n\n  const purposeColumns = [\n    {\n      title: 'Purpose',\n      dataIndex: 'purpose',\n      key: 'purpose',\n    },\n    {\n      title: 'Sender',\n      key: 'id',\n      render: (record) => <Address\n                        value={record.sender.id}\n                        ensProvider={props.mainnetProvider}\n                        fontSize={16}\n                      />\n    },\n    {\n      title: 'createdAt',\n      key: 'createdAt',\n      dataIndex: 'createdAt',\n      render: d => (new Date(d * 1000)).toISOString()\n    },\n    ];\n\n  const [newPurpose, setNewPurpose] = useState(\"loading...\");\n\n\n  const deployWarning = (\n    <div style={{marginTop:8,padding:8}}>{\"Warning: 🤔 Have you deployed your subgraph yet?\"}</div>\n  )\n\n  return (\n      <>\n          <div style={{ margin: \"auto\", marginTop: 32 }}>\n            You will find that parsing/tracking events with the <span class=\"highlight\" style={highlight}>useEventListener</span> hook becomes a chore for every new project.\n          </div>\n          <div style={{ margin: \"auto\", marginTop: 32 }}>\n            Instead, you can use <a href=\"https://thegraph.com/docs/introduction\" target=\"_blank\" rel=\"noopener noreferrer\">The Graph</a> with 🏗 scaffold-eth (<a href=\"https://youtu.be/T5ylzOTkn-Q\" target=\"_blank\">learn more</a>):\n          </div>\n\n          <div style={{ margin: 32 }}>\n            <span style={{ marginRight: 8 }}>🚮</span>\n            Clean up previous data:\n            <span class=\"highlight\" style={highlight}>\n              rm -rf docker/graph-node/data/\n            </span>\n          </div>\n\n          <div style={{ margin: 32 }}>\n            <span style={{ marginRight: 8 }}>📡</span>\n            Spin up a local graph node by running\n            <span class=\"highlight\" style={highlight}>\n              yarn graph-run-node\n            </span>\n            <span style={{ marginLeft: 4}}> (requires <a href=\"https://www.docker.com/products/docker-desktop\" target=\"_blank\" rel=\"noopener noreferrer\"> Docker</a>) </span>\n          </div>\n\n          <div style={{ margin: 32 }}>\n            <span style={{ marginRight: 8 }}>📝</span>\n            Create your <b>local subgraph</b> by running\n            <span class=\"highlight\" style={highlight}>\n              yarn graph-create-local\n            </span>\n            (only required once!)\n          </div>\n\n          <div style={{ margin: 32 }}>\n            <span style={{ marginRight: 8 }}>🚢</span>\n            Deploy your <b>local subgraph</b> by running\n            <span class=\"highlight\" style={highlight}>\n              yarn graph-ship-local\n            </span>\n          </div>\n\n          <div style={{ margin: 32 }}>\n            <span style={{ marginRight: 8 }}>🖍️</span>\n            Edit your <b>local subgraph</b> in\n            <span class=\"highlight\" style={highlight}>\n              packages/subgraph/src\n            </span>\n             (learn more about subgraph definition <a href=\"https://thegraph.com/docs/define-a-subgraph\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>)\n          </div>\n\n          <div style={{ margin: 32 }}>\n            <span style={{ marginRight: 8 }}>🤩</span>\n            Deploy your <b>contracts and your subgraph</b> in one go by running\n            <span class=\"highlight\" style={highlight}>\n              yarn deploy-and-graph\n            </span>\n          </div>\n\n          <div style={{width:780, margin: \"auto\", paddingBottom:64}}>\n\n            <div style={{margin:32, textAlign:'right'}}>\n              <Input onChange={(e)=>{setNewPurpose(e.target.value)}} />\n              <Button onClick={()=>{\n                console.log(\"newPurpose\",newPurpose)\n                /* look how you call setPurpose on your contract: */\n                props.tx( props.writeContracts.YourContract.setPurpose(newPurpose) )\n              }}>Set Purpose</Button>\n            </div>\n\n            {data?<Table dataSource={data.purposes} columns={purposeColumns} rowKey={\"id\"} />:<Typography>{(loading?\"Loading...\":deployWarning)}</Typography>}\n\n            <div style={{margin:32, height:400, border:\"1px solid #888888\", textAlign:'left'}}>\n              <GraphiQL fetcher={graphQLFetcher} docExplorerOpen={true} query={EXAMPLE_GRAPHQL}/>\n            </div>\n\n          </div>\n\n          <div style={{padding:64}}>\n          ...\n          </div>\n      </>\n  );\n}\n\nexport default Subgraph;\n","export default {\"QmVirWiU7nUqrQDosKA9nKWqf3ic1Hjcg1dxe2TcRmT9Gb\":{\"name\":\"Sample 1\",\"description\":\"Sample 1 - NFT styles of a recent model drop 1\",\"external_url\":\"https://ibb.co/JB60dcZ\",\"image\":\"https://i.ibb.co/0D48Xn5/230af8ee-ff1b-4455-9165-87e57a002a6b.jpg\",\"attributes\":[{\"trait_type\":\"Level 1 fiat value in Auction Game System\",\"value\":1000}]},\"QmS85piopuHH1mjc9dnJwEVDtb3wMGKvb1mSzbWgrR87u8\":{\"name\":\"Sample 2\",\"description\":\"Sample 2 - NFT styles of a recent model drop 2\",\"external_url\":\"https://ibb.co/SRVGjz3\",\"image\":\"https://i.ibb.co/ZWc7j0M/13bbbf96-81ec-47d9-a09a-30e8c778d9ee.jpg\",\"attributes\":[{\"trait_type\":\"Level 1 fiat value in Auction Game System\",\"value\":1000}]},\"QmdytiMqcHfzWHDhgPzwMXeox1d24p4SEYX6V4mWqeSw18\":{\"name\":\"Sample 3\",\"description\":\"Sample 3 - NFT styles of a recent model drop 3\",\"external_url\":\"https://ibb.co/NSrSDny\",\"image\":\"https://i.ibb.co/YZXZnTL/9cd52a1a-f850-4022-bed2-9f8ff15dd002.jpg\",\"attributes\":[{\"trait_type\":\"Level 1 fiat value in Auction Game System\",\"value\":1000}]},\"QmXLXYVvFHikwTSFwvzEnAosAroVqpRnWED3ibdhWzsgXr\":{\"name\":\"Sample 4\",\"description\":\"Sample 4 - NFT styles of a recent model drop 4\",\"external_url\":\"https://ibb.co/nfKKfK7\",\"image\":\"https://i.ibb.co/xGrrGr1/7d3b1d68-adf6-4109-8747-1d39424d4704.jpg\",\"attributes\":[{\"trait_type\":\"Level 1 fiat value in Auction Game System\",\"value\":1000}]},\"QmWzuGUPQxQ3pnXgYGBsYepigP9My2JarjDvuD7mPNU7Bs\":{\"name\":\"Sample 5\",\"description\":\"Sample 5 - NFT styles of a recent model drop 5\",\"external_url\":\"https://ibb.co/kBXf2GQ\",\"image\":\"https://i.ibb.co/PjgnGrw/7a8c2eea-c5d1-4911-9b2a-70ff9a7eac97.jpg\",\"attributes\":[{\"trait_type\":\"Level 1 fiat value in Auction Game System\",\"value\":1000}]},\"QmemaSJ66M1P1XoyUZsHTmNKsNifQYwGnxkVZKKMyiQmsS\":{\"name\":\"God Gets Up Early This Morning\",\"description\":\"Raaaar!\",\"external_url\":\"https://ibb.co/LYLSPHv\",\"image\":\"https://i.ibb.co/VJ7VN53/762b45b6-f4e6-43bb-8a17-e8e0f06c9a1f-066.jpg\",\"attributes\":[{\"trait_type\":\"Level 0 fiat value in Auction Game System\",\"value\":100}]},\"QmR1RxDh7tYWEmaouXCCSgpByFUvanP9c4wsQs2jqh77PX\":{\"name\":\"Celluar Gestation\",\"description\":\"Infinity Is Born\",\"external_url\":\"https://ibb.co/MVzvCrH\",\"image\":\"https://i.ibb.co/fp3gxfW/762b45b6-f4e6-43bb-8a17-e8e0f06c9a1f-649.jpg\",\"attributes\":[{\"trait_type\":\"Level 0 fiat value in Auction Game System\",\"value\":100}]},\"QmecBs6RGVExydtwEEDQxqoQGTucJZR3X6autVtodKU3TG\":{\"name\":\"A Portal Out\",\"description\":\"Portal Out Of The Dungeon\",\"external_url\":\"https://ibb.co/Rvmbr6P\",\"image\":\"https://i.ibb.co/gjp9qWw/762b45b6-f4e6-43bb-8a17-e8e0f06c9a1f-504.jpg\",\"attributes\":[{\"trait_type\":\"Level 0 fiat value in Auction Game System\",\"value\":100}]},\"QmbMYX4wAsEbWwQpcKECyzsWLgLqEjAKYiYZ49t1STUaQ9\":{\"name\":\"Killer Lava\",\"description\":\"The Lava Ate Kapoho\",\"external_url\":\"https://ibb.co/JnDTTzL\",\"image\":\"https://i.ibb.co/jhnYYLK/image-2021-09-24-T20-01-14-974-Z.png\",\"attributes\":[{\"trait_type\":\"Level 0 fiat value in Auction Game System\",\"value\":100}]}}","import React, { useCallback, useEffect, useState } from \"react\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport {  JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\nimport {  LinkOutlined } from \"@ant-design/icons\"\nimport \"./App.css\";\nimport { Row, Col, Button, Menu, Alert, Input, List, Card, Switch as SwitchD } from \"antd\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { useUserAddress } from \"eth-hooks\";\nimport { useExchangePrice, useGasPrice, useUserProvider, useContractLoader, useContractReader, useEventListener, useBalance, useExternalContractLoader } from \"./hooks\";\nimport { Header, Account, Faucet, Ramp, Contract, GasGauge, Address, AddressInput, ThemeSwitch } from \"./components\";\nimport { Transactor } from \"./helpers\";\nimport { formatEther, parseEther } from \"@ethersproject/units\";\nimport { utils } from \"ethers\";\n//import Hints from \"./Hints\";\nimport { Hints, ExampleUI, Subgraph } from \"./views\"\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport { INFURA_ID, DAI_ADDRESS, DAI_ABI, NETWORK, NETWORKS } from \"./constants\";\nimport StackGrid from \"react-stack-grid\";\nimport ReactJson from 'react-json-view'\nimport assets from './assets.js'\n\nconst { BufferList } = require('bl')\n// https://www.npmjs.com/package/ipfs-http-client\nconst ipfsAPI = require('ipfs-http-client');\nconst ipfs = ipfsAPI({host: 'ipfs.infura.io', port: '5001', protocol: 'https' })\n\nconsole.log(\"📦 Assets: \",assets)\n\n/*\n    Welcome to 🏗 scaffold-eth !\n\n    Code:\n    https://github.com/austintgriffith/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    🌏 EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n\n\n/// 📡 What chain are your contracts deployed to?\nconst targetNetwork = NETWORKS['xdai']; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n\n// 😬 Sorry for all the console logging\nconst DEBUG = true\n\n//EXAMPLE STARTING JSON:\nconst STARTING_JSON = {\n  \"description\": \"It's actually a bison?\",\n  \"external_url\": \"https://austingriffith.com/portfolio/paintings/\",// <-- this can link to a page for the specific file too\n  \"image\": \"https://austingriffith.com/images/paintings/buffalo.jpg\",\n  \"name\": \"Buffalo\",\n  \"attributes\": [\n     {\n       \"trait_type\": \"BackgroundColor\",\n       \"value\": \"green\"\n     },\n     {\n       \"trait_type\": \"Eyes\",\n       \"value\": \"googly\"\n     }\n  ]\n}\n\n//helper function to \"Get\" from IPFS\n// you usually go content.toString() after this...\nconst getFromIPFS = async hashToGet => {\n  for await (const file of ipfs.get(hashToGet)) {\n    console.log(file.path)\n    if (!file.content) continue;\n    const content = new BufferList()\n    for await (const chunk of file.content) {\n      content.append(chunk)\n    }\n    console.log(content)\n    return content\n  }\n}\n\n// 🛰 providers\nif(DEBUG) console.log(\"📡 Connecting to Mainnet Ethereum\");\n// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\nconst scaffoldEthProvider = new JsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\")\nconst mainnetInfura = new JsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID)\n// ( ⚠️ Getting \"failed to meet quorum\" errors? Check your INFURA_I\n\n// 🏠 Your local provider is usually pointed at your local blockchain\nconst localProviderUrl = targetNetwork.rpcUrl;\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif(DEBUG) console.log(\"🏠 Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new JsonRpcProvider(localProviderUrlFromEnv);\n\n\n// 🔭 block explorer URL\nconst blockExplorer = targetNetwork.blockExplorer;\n\n\nfunction App(props) {\n\n  const mainnetProvider = (scaffoldEthProvider && scaffoldEthProvider._network) ? scaffoldEthProvider : mainnetInfura\n  if(DEBUG) console.log(\"🌎 mainnetProvider\",mainnetProvider)\n\n  const [injectedProvider, setInjectedProvider] = useState();\n  /* 💵 This hook will get the price of ETH from 🦄 Uniswap: */\n  const price = useExchangePrice(targetNetwork,mainnetProvider);\n\n  /* 🔥 This hook will get the price of Gas from ⛽️ EtherGasStation */\n  const gasPrice = useGasPrice(targetNetwork,\"fast\");\n  // Use your injected provider from 🦊 Metamask or if you don't have it then instantly generate a 🔥 burner wallet.\n  const userProvider = useUserProvider(injectedProvider, localProvider);\n  const address = useUserAddress(userProvider);\n  if(DEBUG) console.log(\"👩‍💼 selected address:\",address)\n\n  // You can warn the user if you would like them to be on a specific network\n  let localChainId = localProvider && localProvider._network && localProvider._network.chainId\n  if(DEBUG) console.log(\"🏠 localChainId\",localChainId)\n\n  let selectedChainId = userProvider && userProvider._network && userProvider._network.chainId\n  if(DEBUG) console.log(\"🕵🏻‍♂️ selectedChainId:\",selectedChainId)\n\n  // For more hooks, check out 🔗eth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userProvider, gasPrice)\n\n  // Faucet Tx can be used to send funds from the faucet\n  const faucetTx = Transactor(localProvider, gasPrice)\n\n  // 🏗 scaffold-eth is full of handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address);\n  if(DEBUG) console.log(\"💵 yourLocalBalance\",yourLocalBalance?formatEther(yourLocalBalance):\"...\")\n\n  // Just plug in different 🛰 providers to get your balance on different chains:\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n  if(DEBUG) console.log(\"💵 yourMainnetBalance\",yourMainnetBalance?formatEther(yourMainnetBalance):\"...\")\n\n  // Load in your local 📝 contract and read a value from it:\n  const readContracts = useContractLoader(localProvider)\n  if(DEBUG) console.log(\"📝 readContracts\",readContracts)\n\n  // If you want to make 🔐 write transactions to your contracts, use the userProvider:\n  const writeContracts = useContractLoader(userProvider)\n  if(DEBUG) console.log(\"🔐 writeContracts\",writeContracts)\n\n  // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n  const mainnetDAIContract = useExternalContractLoader(mainnetProvider, DAI_ADDRESS, DAI_ABI)\n  console.log(\"🌍 DAI contract on mainnet:\",mainnetDAIContract)\n  //\n  // Then read your DAI balance like:\n  const myMainnetDAIBalance = useContractReader({DAI: mainnetDAIContract},\"DAI\", \"balanceOf\",[\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"])\n  console.log(\"🥇 myMainnetDAIBalance:\",myMainnetDAIBalance)\n\n\n  // keep track of a variable from the contract in the local React state:\n  const balance = useContractReader(readContracts,\"YourCollectible\", \"balanceOf\", [ address ])\n  console.log(\"🤗 balance:\",balance)\n\n  //📟 Listen for broadcast events\n  const transferEvents = useEventListener(readContracts, \"YourCollectible\", \"Transfer\", localProvider, 1);\n  console.log(\"📟 Transfer events:\",transferEvents)\n\n  const actionEvents = useEventListener(readContracts, \"YourCollectible\", \"Action\", localProvider, 1);\n\n  const totalPrice = useContractReader(readContracts,\"YourCollectible\", \"price\")\n\n  //\n  // 🧠 This effect will update yourCollectibles by polling when your balance changes\n  //\n  const yourBalance = balance && balance.toNumber && balance.toNumber()\n  const [ yourCollectibles, setYourCollectibles ] = useState()\n\n  useEffect(()=>{\n    const updateYourCollectibles = async () => {\n      let collectibleUpdate = []\n      for(let tokenIndex=0;tokenIndex<balance;tokenIndex++){\n        try{\n          console.log(\"GEtting token index\",tokenIndex)\n          const tokenId = await readContracts.YourCollectible.tokenOfOwnerByIndex(address, tokenIndex)\n          console.log(\"tokenId\",tokenId)\n          const tokenURI = await readContracts.YourCollectible.tokenURI(tokenId)\n          console.log(\"tokenURI\",tokenURI)\n\n          const ipfsHash =  tokenURI.replace(\"https://ipfs.io/ipfs/\",\"\")\n          console.log(\"ipfsHash\",ipfsHash)\n\n          const jsonManifestBuffer = await getFromIPFS(ipfsHash)\n\n          try{\n            const jsonManifest = JSON.parse(jsonManifestBuffer.toString())\n            console.log(\"jsonManifest\",jsonManifest)\n            collectibleUpdate.push({ id:tokenId, uri:tokenURI, owner: address, ...jsonManifest })\n          }catch(e){console.log(e)}\n\n        }catch(e){console.log(e)}\n      }\n      setYourCollectibles(collectibleUpdate)\n    }\n    updateYourCollectibles()\n  },[ address, yourBalance ])\n\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"🏷 Resolved austingriffith.eth as:\",addressFromENS)\n  */\n\n\n  let networkDisplay = \"\"\n  if(localChainId && selectedChainId && localChainId != selectedChainId ){\n    networkDisplay = (\n      <div style={{zIndex:2, position:'absolute', right:0,top:60,padding:16}}>\n        <Alert\n          message={\"⚠️ Wrong Network\"}\n          description={(\n            <div>\n              You have <b>{NETWORK(selectedChainId).name}</b> selected and you need to be on <b>{NETWORK(localChainId).name}</b>.\n            </div>\n          )}\n          type=\"error\"\n          closable={false}\n        />\n      </div>\n    )\n  }else{\n    networkDisplay = (\n      <div style={{zIndex:-1, position:'absolute', right:154,top:28,padding:16,color:targetNetwork.color}}>\n        {targetNetwork.name}\n      </div>\n    )\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new Web3Provider(provider));\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname)\n  }, [setRoute]);\n\n  let faucetHint = \"\"\n  const faucetAvailable = localProvider && localProvider.connection && localProvider.connection.url && localProvider.connection.url.indexOf(window.location.hostname)>=0 && !process.env.REACT_APP_PROVIDER && price > 1;\n\n  const [ faucetClicked, setFaucetClicked ] = useState( false );\n  if(!faucetClicked&&localProvider&&localProvider._network&&localProvider._network.chainId==31337&&yourLocalBalance&&formatEther(yourLocalBalance)<=0){\n    faucetHint = (\n      <div style={{padding:16}}>\n        <Button type={\"primary\"} onClick={()=>{\n          faucetTx({\n            to: address,\n            value: parseEther(\"0.01\"),\n          });\n          setFaucetClicked(true)\n        }}>\n          💰 Grab funds from the faucet ⛽️\n        </Button>\n      </div>\n    )\n  }\n\n\n  const [ yourJSON, setYourJSON ] = useState( STARTING_JSON );\n  const [ sending, setSending ] = useState()\n  const [ ipfsHash, setIpfsHash ] = useState()\n  const [ ipfsDownHash, setIpfsDownHash ] = useState()\n\n  const [ downloading, setDownloading ] = useState()\n  const [ ipfsContent, setIpfsContent ] = useState()\n\n  const [ transferToAddresses, setTransferToAddresses ] = useState({})\n\n  const [ loadedAssets, setLoadedAssets ] = useState()\n  useEffect(()=>{\n    const updateYourCollectibles = async () => {\n      let assetUpdate = []\n      for(let a in assets){\n        try{\n          const forSale = await readContracts.YourCollectible.forSale(utils.id(a))\n          const forSecondarySale = await readContracts.YourCollectible.forSecondarySale(utils.id(a))\n          let owner\n          if(!forSale){\n            const tokenId = await readContracts.YourCollectible.uriToTokenId(utils.id(a))\n            owner = await readContracts.YourCollectible.ownerOf(tokenId)\n          }\n          assetUpdate.push({id:a,...assets[a],forSale:forSale,forSecondarySale:forSecondarySale,owner:owner})\n        }catch(e){console.log(e)}\n      }\n      setLoadedAssets(assetUpdate)\n    }\n    if(readContracts && readContracts.YourCollectible) updateYourCollectibles()\n  }, [ assets, readContracts, transferEvents, actionEvents ]);\n\n  let galleryList = []\n  for(let a in loadedAssets){\n    console.log(\"loadedAssets\",a,loadedAssets[a])\n\n    let cardActions = []\n\n    if(loadedAssets[a].forSale){\n      cardActions.push(\n        <div>\n          <Button onClick={()=>{\n            console.log(\"gasPrice,\",gasPrice)\n            tx( writeContracts.YourCollectible.mintItem(loadedAssets[a].id,{value: totalPrice}) )\n          }}>\n            Mint\n          </Button>\n        </div>\n      )\n      \n    }else{\n      cardActions.push(\n        <div>\n          owned by: <Address\n            address={loadedAssets[a].owner}\n            ensProvider={mainnetProvider}\n            blockExplorer={blockExplorer}\n            minimized={true}\n          />\n        \n        </div>\n      )\n      if (loadedAssets[a].owner == address && !loadedAssets[a].forSecondarySale) {\n        cardActions.push(\n          <Button onClick={()=>{\n            tx( writeContracts.YourCollectible.sellItem(loadedAssets[a].id,{gasPrice:gasPrice}) )\n          }}>\n            Sell\n          </Button>\n        )\n      }\n      else if (loadedAssets[a].owner == address && loadedAssets[a].forSecondarySale) {\n        cardActions.push(\n          <Button onClick={()=>{\n            tx( writeContracts.YourCollectible.cancelSellItem(loadedAssets[a].id,{gasPrice:gasPrice}) )\n          }}>\n            Cancell Sell\n          </Button>\n        )\n      }\n      else if (loadedAssets[a].forSecondarySale) {\n        cardActions.push(\n          <Button onClick={()=>{\n            tx( writeContracts.YourCollectible.buyItem(loadedAssets[a].id,{value: totalPrice}) )\n          }}>\n            Buy\n          </Button>\n        )\n      }\n      else {\n        cardActions.push(\n          <div>NOT FOR SALE</div>\n        )\n      }\n    }\n\n    galleryList.push(\n      <Card style={{width:200}} key={loadedAssets[a].name}\n        actions={cardActions}\n        title={(\n          <div>\n            {loadedAssets[a].name} <a style={{cursor:\"pointer\",opacity:0.33}} href={loadedAssets[a].external_url} target=\"_blank\"><LinkOutlined /></a>\n          </div>\n        )}\n      >\n        <img style={{maxWidth:130}} src={loadedAssets[a].image}/>\n        <div style={{opacity:0.77}}>\n          {loadedAssets[a].description}\n        </div>\n      </Card>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n\n      {/* ✏️ Edit the header and change the title to your project name */}\n      <Header />\n      {networkDisplay}\n\n      <BrowserRouter>\n\n        <Menu style={{ textAlign:\"center\" }} selectedKeys={[route]} mode=\"horizontal\">\n          <Menu.Item key=\"/\">\n            <Link onClick={()=>{setRoute(\"/\")}} to=\"/\">Gallery</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/yourcollectibles\">\n            <Link onClick={()=>{setRoute(\"/yourcollectibles\")}} to=\"/yourcollectibles\">YourCollectibles</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/transfers\">\n            <Link onClick={()=>{setRoute(\"/transfers\")}} to=\"/transfers\">Transfers</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/ipfsup\">\n            <Link onClick={()=>{setRoute(\"/ipfsup\")}} to=\"/ipfsup\">IPFS Upload</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/ipfsdown\">\n            <Link onClick={()=>{setRoute(\"/ipfsdown\")}} to=\"/ipfsdown\">IPFS Download</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/debugcontracts\">\n            <Link onClick={()=>{setRoute(\"/debugcontracts\")}} to=\"/debugcontracts\">Debug Contracts</Link>\n          </Menu.Item>\n        </Menu>\n\n        <Switch>\n          <Route exact path=\"/\">\n            {/*\n                🎛 this scaffolding is full of commonly used components\n                this <Contract/> component will automatically parse your ABI\n                and give you a form to interact with it locally\n            */}\n            \n            <div style={{ maxWidth:820, margin: \"auto\", marginTop:32, paddingBottom:256 }}>\n              <h1>Price {totalPrice && formatEther(totalPrice)} Ξ</h1>\n              <StackGrid\n                columnWidth={200}\n                gutterWidth={16}\n                gutterHeight={16}\n              >\n                {galleryList}\n              </StackGrid>\n            </div>\n\n          </Route>\n\n          <Route path=\"/yourcollectibles\">\n            <div style={{ width:640, margin: \"auto\", marginTop:32, paddingBottom:32 }}>\n              <List\n                bordered\n                dataSource={yourCollectibles}\n                renderItem={(item) => {\n                  const id = item.id.toNumber()\n                  return (\n                    <List.Item key={id+\"_\"+item.uri+\"_\"+item.owner}>\n                      <Card title={(\n                        <div>\n                          <span style={{fontSize:16, marginRight:8}}>#{id}</span> {item.name}\n                        </div>\n                      )}>\n                        <div><img src={item.image} style={{maxWidth:150}} /></div>\n                        <div>{item.description}</div>\n                      </Card>\n\n                      <div>\n                        owner: <Address\n                            address={item.owner}\n                            ensProvider={mainnetProvider}\n                            blockExplorer={blockExplorer}\n                            fontSize={16}\n                        />\n                        <AddressInput\n                          ensProvider={mainnetProvider}\n                          placeholder=\"transfer to address\"\n                          value={transferToAddresses[id]}\n                          onChange={(newValue)=>{\n                            let update = {}\n                            update[id] = newValue\n                            setTransferToAddresses({ ...transferToAddresses, ...update})\n                          }}\n                        />\n                        <Button onClick={()=>{\n                          console.log(\"writeContracts\",writeContracts)\n                          tx( writeContracts.YourCollectible.transferFrom(address, transferToAddresses[id], id) )\n                        }}>\n                          Transfer\n                        </Button>\n                      </div>\n                    </List.Item>\n                  )\n                }}\n              />\n            </div>\n          </Route>\n\n          <Route path=\"/transfers\">\n            <div style={{ width:600, margin: \"auto\", marginTop:32, paddingBottom:32 }}>\n              <List\n                bordered\n                dataSource={transferEvents}\n                renderItem={(item) => {\n                  return (\n                    <List.Item key={item[0]+\"_\"+item[1]+\"_\"+item.blockNumber+\"_\"+item[2].toNumber()}>\n                      <span style={{fontSize:16, marginRight:8}}>#{item[2].toNumber()}</span>\n                      <Address\n                          address={item[0]}\n                          ensProvider={mainnetProvider}\n                          fontSize={16}\n                      /> =>\n                      <Address\n                          address={item[1]}\n                          ensProvider={mainnetProvider}\n                          fontSize={16}\n                      />\n                    </List.Item>\n                  )\n                }}\n              />\n\n              <List\n                bordered\n                dataSource={actionEvents}\n                renderItem={(item) => {\n                  return (\n                    <List.Item key={item[0]+\"_\"+item[1]+\"_\"+item.blockNumber}>\n                      <span style={{fontSize:16, marginRight:8}}>#{item[1].toNumber()}</span>\n                      <Address\n                          address={item[0]}\n                          ensProvider={mainnetProvider}\n                          fontSize={16}\n                      /> =>\n                      {item[2]}\n                    </List.Item>\n                  )\n                }}\n              />\n            </div>\n          </Route>\n\n          <Route path=\"/ipfsup\">\n            <div style={{ paddingTop:32, width:740, margin:\"auto\", textAlign:\"left\" }}>\n              <ReactJson\n                style={{ padding:8 }}\n                src={yourJSON}\n                theme={\"pop\"}\n                enableClipboard={false}\n                onEdit={(edit,a)=>{\n                  setYourJSON(edit.updated_src)\n                }}\n                onAdd={(add,a)=>{\n                  setYourJSON(add.updated_src)\n                }}\n                onDelete={(del,a)=>{\n                  setYourJSON(del.updated_src)\n                }}\n              />\n            </div>\n\n            <Button style={{margin:8}} loading={sending} size=\"large\" shape=\"round\" type=\"primary\" onClick={async()=>{\n                console.log(\"UPLOADING...\",yourJSON)\n                setSending(true)\n                setIpfsHash()\n                const result = await ipfs.add(JSON.stringify(yourJSON))//addToIPFS(JSON.stringify(yourJSON))\n                if(result && result.path) {\n                  setIpfsHash(result.path)\n                }\n                setSending(false)\n                console.log(\"RESULT:\",result)\n            }}>Upload to IPFS</Button>\n\n            <div  style={{padding:16,paddingBottom:150}}>\n              {ipfsHash}\n            </div>\n\n          </Route>\n          <Route path=\"/ipfsdown\">\n              <div style={{ paddingTop:32, width:740, margin:\"auto\" }}>\n                <Input\n                  value={ipfsDownHash}\n                  placeHolder={\"IPFS hash (like QmadqNw8zkdrrwdtPFK1pLi8PPxmkQ4pDJXY8ozHtz6tZq)\"}\n                  onChange={(e)=>{\n                    setIpfsDownHash(e.target.value)\n                  }}\n                />\n              </div>\n              <Button style={{margin:8}} loading={sending} size=\"large\" shape=\"round\" type=\"primary\" onClick={async()=>{\n                  console.log(\"DOWNLOADING...\",ipfsDownHash)\n                  setDownloading(true)\n                  setIpfsContent()\n                  const result = await getFromIPFS(ipfsDownHash)//addToIPFS(JSON.stringify(yourJSON))\n                  if(result && result.toString) {\n                    setIpfsContent(result.toString())\n                  }\n                  setDownloading(false)\n              }}>Download from IPFS</Button>\n\n              <pre  style={{padding:16, width:500, margin:\"auto\",paddingBottom:150}}>\n                {ipfsContent}\n              </pre>\n          </Route>\n          <Route path=\"/debugcontracts\">\n              <Contract\n                name=\"YourCollectible\"\n                signer={userProvider.getSigner()}\n                provider={localProvider}\n                address={address}\n                blockExplorer={blockExplorer}\n              />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n\n      <ThemeSwitch />\n\n\n      {/* 👨‍💼 Your account is in the top right with a wallet at connect options */}\n      <div style={{ position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\n         <Account\n           address={address}\n           localProvider={localProvider}\n           userProvider={userProvider}\n           mainnetProvider={mainnetProvider}\n           price={price}\n           web3Modal={web3Modal}\n           loadWeb3Modal={loadWeb3Modal}\n           logoutOfWeb3Modal={logoutOfWeb3Modal}\n           blockExplorer={blockExplorer}\n         />\n         {faucetHint}\n      </div>\n\n      {/* 🗺 Extra UI like gas price, eth price, faucet, and support: */}\n       <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\n         <Row align=\"middle\" gutter={[4, 4]}>\n           <Col span={8}>\n             <Ramp price={price} address={address} networks={NETWORKS}/>\n           </Col>\n\n           <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\n             <GasGauge gasPrice={gasPrice} />\n           </Col>\n           <Col span={8} style={{ textAlign: \"center\", opacity: 1 }}>\n             <Button\n               onClick={() => {\n                 window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n               }}\n               size=\"large\"\n               shape=\"round\"\n             >\n               <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\n                 💬\n               </span>\n               Support\n             </Button>\n           </Col>\n         </Row>\n\n         <Row align=\"middle\" gutter={[4, 4]}>\n           <Col span={24}>\n             {\n               /*  if the local provider has a signer, let's show the faucet:  */\n               faucetAvailable ? (\n                 <Faucet localProvider={localProvider} price={price} ensProvider={mainnetProvider}/>\n               ) : (\n                 \"\"\n               )\n             }\n           </Col>\n         </Row>\n       </div>\n\n    </div>\n  );\n}\n\n\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\nconst web3Modal = new Web3Modal({\n  // network: \"mainnet\", // optional\n  cacheProvider: true, // optional\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        infuraId: INFURA_ID,\n      },\n    },\n  },\n});\n\nconst logoutOfWeb3Modal = async () => {\n  await web3Modal.clearCachedProvider();\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n};\n\n window.ethereum && window.ethereum.on('chainChanged', chainId => {\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n})\n\nexport default App;\n","import { useState } from \"react\";\nimport { Token, WETH, Fetcher, Route } from \"@uniswap/sdk\";\nimport { usePoller } from \"eth-hooks\";\n\nexport default function useExchangePrice(targetNetwork, mainnetProvider, pollTime) {\n  const [price, setPrice] = useState(0);\n\n  const pollPrice = () => {\n    async function getPrice() {\n      if(targetNetwork.price){\n        setPrice(targetNetwork.price)\n      }else{\n        const DAI = new Token(\n          mainnetProvider.network ? mainnetProvider.network.chainId : 1,\n          \"0x6B175474E89094C44Da98b954EedeAC495271d0F\",\n          18,\n        );\n        const pair = await Fetcher.fetchPairData(DAI, WETH[DAI.chainId], mainnetProvider);\n        const route = new Route([pair], WETH[DAI.chainId]);\n        setPrice(parseFloat(route.midPrice.toSignificant(6)));\n      }\n    }\n    getPrice();\n  };\n  usePoller(pollPrice, pollTime || 9777);\n\n  return price;\n}\n","import { useState } from \"react\";\nimport { usePoller } from \"eth-hooks\";\nimport axios from \"axios\";\n\nexport default function useGasPrice(targetNetwork,speed) {\n  const [gasPrice, setGasPrice] = useState();\n  const loadGasPrice = async () => {\n    if(targetNetwork.gasPrice){\n      setGasPrice(targetNetwork.gasPrice);\n    }else{\n      axios\n        .get(\"https://ethgasstation.info/json/ethgasAPI.json\")\n        .then(response => {\n          const newGasPrice = response.data[speed || \"fast\"] * 100000000;\n          if (newGasPrice !== gasPrice) {\n            setGasPrice(newGasPrice);\n          }\n        })\n        .catch(error => console.log(error));\n    }\n  };\n\n  usePoller(loadGasPrice, 39999);\n  return gasPrice;\n}\n","/* eslint-disable import/no-dynamic-require */\n/* eslint-disable global-require */\nimport { Contract } from \"@ethersproject/contracts\";\nimport { useState, useEffect } from \"react\";\n\n/*\n  when you want to load an existing contract using just the provider, address, and ABI\n*/\n\n/*\n  ~ What it does? ~\n\n  Enables you to load an existing mainnet DAI contract using the provider, address and abi\n\n  ~ How can I use? ~\n\n  const mainnetDAIContract = useExternalContractLoader(mainnetProvider, DAI_ADDRESS, DAI_ABI)\n\n  ~ Features ~\n\n  - Specify mainnetProvider\n  - Specify DAI_ADDRESS and DAI_ABI, you can load/write them using constants.js\n*/\nexport default function useExternalContractLoader(provider, address, ABI, optionalBytecode) {\n  const [contract, setContract] = useState();\n  useEffect(() => {\n    async function loadContract() {\n      if (typeof provider !== \"undefined\" && address && ABI) {\n        try {\n          // we need to check to see if this provider has a signer or not\n          let signer;\n          const accounts = await provider.listAccounts();\n          if (accounts && accounts.length > 0) {\n            signer = provider.getSigner();\n          } else {\n            signer = provider;\n          }\n\n          const customContract = new Contract(address, ABI, signer);\n          if(optionalBytecode) customContract.bytecode = optionalBytecode\n\n          setContract(customContract);\n        } catch (e) {\n          console.log(\"ERROR LOADING EXTERNAL CONTRACT AT \"+address+\" (check provider, address, and ABI)!!\", e);\n        }\n      }\n    }\n    loadContract();\n  }, [provider, address, ABI, optionalBytecode]);\n  return contract;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\n\nconst themes = {\n  dark: `${process.env.PUBLIC_URL}/dark-theme.css`,\n  light: `${process.env.PUBLIC_URL}/light-theme.css`,\n};\n\nconst prevTheme = window.localStorage.getItem(\"theme\");\n\nlet subgraphUri = \"http://localhost:8000/subgraphs/name/scaffold-eth/your-contract\"\n\nconst client = new ApolloClient({\n  uri: subgraphUri,\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ThemeSwitcherProvider themeMap={themes} defaultTheme={prevTheme ? prevTheme : \"light\"}>\n      <App subgraphUri={subgraphUri}/>\n    </ThemeSwitcherProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\"),\n);\n","var map = {\n\t\"./YourCollectible.abi.js\": 1237\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 666;","var map = {\n\t\"./YourCollectible.bytecode.js\": 1238\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 667;"],"sourceRoot":""}